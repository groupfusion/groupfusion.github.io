<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GIS地图开发关键步骤</title>
      <link href="/2023/12/25/tools/gis%E5%9C%B0%E5%9B%BE%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/12/25/tools/gis%E5%9C%B0%E5%9B%BE%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="GIS地图开发关键步骤？"><a href="#GIS地图开发关键步骤？" class="headerlink" title="GIS地图开发关键步骤？"></a>GIS地图开发关键步骤？</h2><p>GIS地图开发的步骤或流程可以分为以下几个关键步骤。</p><h3 id="第一步：需求分析"><a href="#第一步：需求分析" class="headerlink" title="第一步：需求分析"></a>第一步：需求分析</h3><p>在开始GIS地图开发之前，首先需要进行需求分析，确定开发的目标和需求。这包括确定地图的类型、功能和使用场景，以及所需的数据类型和数据源。</p><h3 id="第二步：数据采集与处理"><a href="#第二步：数据采集与处理" class="headerlink" title="第二步：数据采集与处理"></a>第二步：数据采集与处理</h3><p>数据是GIS地图开发的基础，因此需要进行数据采集和处理。数据采集可以通过现场调查、遥感技术、GPS定位等方式来获取地理数据。采集到的数据可能需要进行处理，包括数据清洗、格式转换、数据融合等。</p><h3 id="第三步：地图设计与制作"><a href="#第三步：地图设计与制作" class="headerlink" title="第三步：地图设计与制作"></a>第三步：地图设计与制作</h3><p>在数据准备完成后，需要进行地图的设计与制作。地图设计包括确定地图的样式、符号、颜色等视觉效果，以及地图的布局和组织结构。地图的制作可以使用专业的地图制作软件，如ArcGIS、QGIS等，也可以使用Web地图开发框架，如OpenLayers、Leaflet等。</p><h3 id="第四步：地图发布与部署"><a href="#第四步：地图发布与部署" class="headerlink" title="第四步：地图发布与部署"></a>第四步：地图发布与部署</h3><p>完成地图的设计与制作后，需要将地图发布到互联网上，使用户可以通过浏览器访问和使用地图。地图发布可以使用Web地图服务（Web Map Service，WMS）或地图切片（Map Tiles）的方式进行。地图部署可以选择自行搭建服务器，也可以使用云服务提供商的地图服务。</p><h3 id="第五步：地图应用开发"><a href="#第五步：地图应用开发" class="headerlink" title="第五步：地图应用开发"></a>第五步：地图应用开发</h3><p>地图应用开发是GIS地图开发的重要环节，可以根据需求开发各种地图应用。地图应用开发可以使用Web开发技术，如HTML、CSS、JavaScript等，也可以使用桌面开发技术，如Java、C#等。地图应用开发可以实现地图的交互操作、数据查询、空间分析等功能。</p><h3 id="第六步：地图优化与维护"><a href="#第六步：地图优化与维护" class="headerlink" title="第六步：地图优化与维护"></a>第六步：地图优化与维护</h3><p>完成地图应用开发后，需要对地图进行优化和维护。地图优化可以包括提高地图的加载速度、优化地图的性能、优化地图的用户体验等。地图维护包括更新地图数据、修复地图bug、升级地图应用等。</p><p>通过以上步骤或流程，可以实现GIS地图开发。在实际应用中，还可以根据具体需求和情况进行调整和扩展。同时，随着互联网技术的不断发展，GIS地图开发也在不断创新和演进，例如引入人工智能、大数据分析等技术，为地图开发带来更多的可能性和挑战。</p><h2 id="地图开发项目推荐"><a href="#地图开发项目推荐" class="headerlink" title="地图开发项目推荐"></a>地图开发项目推荐</h2><p>以下这六款开源项目带开发者们认识地图开发这个充满无限可能的领域。</p><h3 id="1、xdh-map"><a href="#1、xdh-map" class="headerlink" title="1、xdh-map"></a>1、xdh-map</h3><p>项目作者：铁匠铺</p><p>开源许可协议：MIT</p><p>项目地址：<a href="https://gitee.com/newgateway/xdh-map">https://gitee.com/newgateway/xdh-map</a></p><p>xdh-map 是一款基于 Openlayers 的地图应用 Vue 组件。内置了百度、高德、天地图瓦片，并支持与方正、超图、山海经纬、航天精一等PGIS厂商对接。</p><p>它包含了文本、图形、html、热力图、轨迹回放等20个组件，支持与 ECharts 结合实现散点、飞行迁徙等基于地理位置的图表，满足项目常见需求。</p><p><img src="/images/gis/xdh-map.png" alt="xdh-map"></p><h3 id="2、AntV-L7"><a href="#2、AntV-L7" class="headerlink" title="2、AntV L7"></a>2、AntV L7</h3><p>项目作者：AntV</p><p>开源许可协议：MIT</p><p>项目地址：<a href="https://gitee.com/antv/L7">https://gitee.com/antv/L7</a></p><p>L7 是由蚂蚁金服 AntV 数据可视化团队推出的基于 WebGL 的开源大规模地理空间数据可视分析开发框架。L7 专注数据可视化化表达，通过颜色、大小、纹理，方向，体积等视觉变量设置实现从数据到信息清晰，有效的表达。</p><p>L7 能够满足常见的地图图表，BI 系统的可视化分析、以及 GIS，交通，电力，国土，农业，城市等领域的空间信息管理，分析等应用系统开发需求。<br><img src="/images/gis/AntV7.gif" alt="AntVL7"></p><h3 id="3、地图下载器"><a href="#3、地图下载器" class="headerlink" title="3、地图下载器"></a>3、地图下载器</h3><p>项目作者： Crimson<br>开源许可协议： GPL-2.0<br>项目地址：<a href="https://gitee.com/CrimsonHu/java_map_download">https://gitee.com/CrimsonHu/java_map_download</a></p><p>使用 Java 开发的地图瓦片图下载工具，支持 OpenStreetMap、天地图、谷歌地图、高德地图、腾讯地图、必应地图的XYZ瓦片图下载与合并。<br><img src="/images/gis/Crimson.png" alt="Crimson"></p><h3 id="4、QuickEarth-Free"><a href="#4、QuickEarth-Free" class="headerlink" title="4、QuickEarth-Free"></a>4、QuickEarth-Free</h3><p>项目作者： 清风<br>开源许可协议： LGPL-3.0<br>项目地址：<a href="https://gitee.com/mofangbao/quick-earth-free">https://gitee.com/mofangbao/quick-earth-free</a></p><p>QuickEarth（以下简称QE）是一个二三维一体化的 Web 端矢量和栅格数据渲染引擎，适用于气象、海洋、水文、环境等领域的数据可视化。目前二维版本面向个人免费开放。<br><img src="/images/gis/quick-earth-free.jpg" alt="quickEarth"></p><h3 id="5、react-baidu-map"><a href="#5、react-baidu-map" class="headerlink" title="5、react-baidu-map"></a>5、react-baidu-map</h3><p>项目作者： uiw<br>开源许可协议： MIT<br>项目地址：<a href="https://gitee.com/uiw/react-baidu-map">https://gitee.com/uiw/react-baidu-map</a></p><p>react-baidu-map 是一个基于 React 封装的百度地图组件，帮助你轻松的接入地图到 React 项目中。<br><img src="/images/gis/react-baidu-map.png" alt="react-baidu-map"></p><h3 id="6、vue3-ts-cesium-map-show"><a href="#6、vue3-ts-cesium-map-show" class="headerlink" title="6、vue3-ts-cesium-map-show"></a>6、vue3-ts-cesium-map-show</h3><p>项目作者： 地虎降天龙<br>开源许可协议： MIT<br>项目地址：<a href="https://gitee.com/hawk86104/vue3-ts-cesium-map-show">https://gitee.com/hawk86104/vue3-ts-cesium-map-show</a></p><p>这是一个三维可视化数字城市项目，采用了 Cesium-1.82 开源库，配合后台可以实现可视化编辑保存的能力。<br><img src="/images/gis/vue3-ts-cesium-map.png" alt="vue3-ts-cesium"></p>]]></content>
      
      
      
        <tags>
            
            <tag> GIS开发 </tag>
            
            <tag> WebGIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>独立开发者周刊003</title>
      <link href="/2023/12/25/tools/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E5%91%A8%E5%88%8A003/"/>
      <url>/2023/12/25/tools/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E5%91%A8%E5%88%8A003/</url>
      
        <content type="html"><![CDATA[<p>本文转载至<a href="https://www.shenmezhidedu.com/jinri/haowen/10343.html">什么值得读</a></p><p>这是独立开发者周刊的第2期，周刊每周天更新；发布在什么值得读网站，如果你也想成为一名独立开发者，或者对独立开发感兴趣，欢迎收藏什么值得读网站，每周一准时来阅读！</p><p>周刊分为这样几个部分：</p><p>1.新产品推荐&amp;资源分享</p><p>2.值得一读的文章</p><p>3.播客推荐</p><p>4.独立开发idea</p><p>希望这份周刊可以为国内的独立开发生态添上一把火，让更多的互联网人加入到独立自由的新个体中来；</p><p>他们工作，但他们不上班。他们写代码，做产品，但他们不无聊。他们享受创造，更享受这个世界，并用自己的产品让这个世界变得更好了一点。</p><span id="more"></span><h2 id="1-新产品推荐-amp-资源分享"><a href="#1-新产品推荐-amp-资源分享" class="headerlink" title="1.新产品推荐&amp;资源分享"></a>1.新产品推荐&amp;资源分享</h2><p>1)AIPPT</p><p>使用AI一键生成PPT文件，效果不错。</p><p><a href="https://www.aippt.cn/">https://www.aippt.cn/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>2）Runway</p><p>利用AI生成视频内容文件</p><p><a href="https://runwayml.com/">https://runwayml.com/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>3）Yep</p><p>AI搜索引擎，Yep的特点是将90%的广告收入与内容创作者分享，强调隐私保护，不默认使用cookies，不会将用户数据与第三方共享。</p><p><a href="https://yep.com/">https://yep.com/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>4）Giffox</p><p><a href="https://www.giffox.com/">https://www.giffox.com/</a></p><p>电子书资源聚合搜索引擎</p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>5）智能TDK：利用AI一键生成网站TDK内容</p><p><a href="https://ai.chinaz.com/seo/tdk">https://ai.chinaz.com/seo/tdk</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>6）跨境电商品牌独立站导航</p><p><a href="https://dtctoolbox.com/">https://dtctoolbox.com/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>7）微软网站分析工具：Clarity</p><p><a href="https://clarity.microsoft.com/">https://clarity.microsoft.com/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>7）简单封面</p><p>用最简单的方式制作封面图片，简单好用的封面图制作工具</p><p><a href="https://www.jiandan.link/">https://www.jiandan.link/</a></p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>8）Vavebg</p><p>免费的AI图库，可免费下载或用于商业用途。</p><p><a href="https://vavebg.com/">https://vavebg.com/</a></p><p>9）榜一短剧</p><p>短剧资源平台，提供最新抖音、快手短剧和最全的电视剧短剧；</p><p><a href="https://duanju.one/">https://duanju.one/</a></p><p>10）熊猫速读</p><p>通过视频快速了解一本书</p><p><a href="https://qread.xmsoushu.com/">https://qread.xmsoushu.com/</a></p><p>11）大流量卡推荐</p><p>12)极简日历生成器，可免费打印日历</p><p><a href="https://useminimal.com/">https://useminimal.com/</a></p><p>精美、简约的可打印日历、习惯跟踪器和计划表的集合。有 31 种语言版本。</p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>13）出海去</p><p><a href="https://chuhaiqu.club/">https://chuhaiqu.club/</a></p><p>独立开发出海社区，『出海去』是一个赋能独立开发 (Indie Hackers) 的孵化平台，为独立开发者提供产品出海所需的一站式服务。</p><p>独立开发者周刊003-什么值得读-互联网人的书单库！</p><h2 id="2-值得一读的文章"><a href="#2-值得一读的文章" class="headerlink" title="2.值得一读的文章"></a>2.值得一读的文章</h2><p>独立开发变现周刊（第115期）：开发一个健身管理软件，月收入6万美元</p><p>科技爱好者周刊（第 281 期）：新基建的政策选择</p><p>Ahrefs Seo教程</p><p>PMF：为何硅谷大神把它念奉为创业公司“唯一重要的东西”？</p><p>独立开发者中，都有哪些「小而美」的设计</p><p>我独立开发的产品是怎样获得最初的 300 个用户的？</p><h2 id="3-播客推荐"><a href="#3-播客推荐" class="headerlink" title="3.播客推荐"></a>3.播客推荐</h2><p>2023技术播客节</p><h2 id="4-独立开发idea"><a href="#4-独立开发idea" class="headerlink" title="4.独立开发idea"></a>4.独立开发idea</h2><p>1）出海的AI项目，做垂直方向的效率工具，做网页或者插件；推荐一个案例：Monica</p><p>2）利用AI来生成社交媒体回复内容，比如回复别人的评论，利用插件，嵌入到网页，交互非常自然。案例：<a href="https://getbirdie.co/">https://getbirdie.co/</a></p><p>3)一个B2B客户线索发现平台，通过订阅制获取收入。通过信息整理也可以变现，提供有价值的内容，就会有人愿意买单。<a href="https://www.getcyberleads.com/">https://www.getcyberleads.com/</a></p><h2 id="订阅-amp-投稿"><a href="#订阅-amp-投稿" class="headerlink" title="订阅&amp;投稿"></a>订阅&amp;投稿</h2><p>加我微信围观独立开发者朋友圈，每周一准时朋友圈分享周刊；</p><p>投稿也可以加下面这个微信，可以投稿你的新产品或者独立开发相关内容。</p><p>独立开发者周刊003-什么值得读-互联网人的书单库！<br>以上就是今日份内容啦，如果你想支持我们的话，就帮忙把这篇文章分享到更多地方吧！感谢～</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 独立开发者 </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微前端架构</title>
      <link href="/2023/11/15/system&amp;design/%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/11/15/system&amp;design/%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>本文概述了微前端，以及如何将遗留用户界面分解为微前端架构。</p><h2 id="什么是微前端？"><a href="#什么是微前端？" class="headerlink" title="什么是微前端？"></a>什么是微前端？</h2><p>微前端是一种架构方法，它将微服务的概念扩展到 Web 应用程序的前端。在微前端体系结构中，复杂的 Web 应用程序被分解为更小的、可独立部署且可维护的单元，称为微前端。每个微前端负责用户界面的特定部分及其相关功能。</p><p>微前端的主要特征和概念包括：</p><ul><li>独立：微前端是自成一体的，独立开发、测试和部署。这种自主权允许不同的团队以最少的协调处理应用程序的不同部分。</li><li>与技术无关：每个微前端都可以使用不同的前端技术（例如，Angular，React，Vue.js），只要它们可以集成到父应用程序或Shell应用程序中即可。</li><li>隔离：微前端在代码和依赖关系方面都是相互隔离的。这种隔离可确保一个微前端中的更改不会影响其他前端。</li><li>集成：容器或 Shell 应用程序负责集成和编排微前端。它提供了用户界面的整体结构，并处理微前端之间的路由。</li><li>独立部署：微前端可以独立部署，从而实现持续交付和更快的更新。这降低了回归问题的风险，并加快了发布周期。</li><li>松散耦合：微前端通过定义良好的 API 和共享协议（如 HTTP）进行通信，从而允许它们松散耦合。这种关注点的分离简化了开发和维护。</li><li>用户界面组合：容器应用程序通过将微前端组合在一起来组装用户界面。这种组合可以在服务器端（服务器端包含）或客户端（客户端路由）上完成。</li><li>扩展和性能：微型前端支持应用程序特定部分的水平扩展，有助于优化频繁访问区域的性能。</li><li>分散式团队：不同的团队或开发团队可以在单独的微前端上工作。这种去中心化对于大型或分布式组织是有利的。</li></ul><p>微前端架构在大型、复杂的 Web 应用程序中特别有用，在这些应用程序中，整体式方法可能会导致开发瓶颈、复杂性增加以及维护和扩展应用程序的困难。</p><p>通过使用微前端，组织可以在其前端开发过程中实现更大的灵活性、敏捷性和可维护性，从而与软件架构领域微服务的更广泛趋势保持一致。</p><h2 id="微前端框架方案"><a href="#微前端框架方案" class="headerlink" title="微前端框架方案"></a>微前端框架方案</h2><h3 id="路由转发"><a href="#路由转发" class="headerlink" title="路由转发"></a>路由转发</h3><p>路由分发式前端，即通过路由将不同的业务分发到不同的独立前端应用上。通常可以通过HTTP服务器的反向代理来实现，或者通过应用框架自带的路由来解决。当前而言，路由分发式的架构是采用得最多、最容易的“微前端”方案。只是将不同的前端应用拼凑到一起，让它们看起来像一个完整的整体。这种应用缺少了对应用状态的处理，对用户的体验不太友好。</p><h3 id="前端微服务化"><a href="#前端微服务化" class="headerlink" title="前端微服务化"></a>前端微服务化</h3><p>前端微服务化是微服务架构在前端的实施，每个前端应用都是完全独立（技术栈、部署、构建独立）、自主运行的，最后通过模块化的方式组合出完整的前端应用。</p><h3 id="组合式集成：微应用化"><a href="#组合式集成：微应用化" class="headerlink" title="组合式集成：微应用化"></a>组合式集成：微应用化</h3><p>微应用化是指，在开发时应用都是以单一、微小应用的形式存在的，而在运行时，则通过构建系统合并这些应用，并组合成一个新的应用。<br>纯前端改造，体验良好，可无感知切换，子应用相互隔离。<br>需要设计和开发，有父子应用处于同一页面运行，需要解决子应用的样式冲突、变量对象污染，通信机制等技术点</p><h3 id="微件化"><a href="#微件化" class="headerlink" title="微件化"></a>微件化</h3><p>微件化是指每个业务团队编写自己的业务代码，并将编译好的代码部署到指定的服务器上。在运行时，我们只需要加载相应的业务模块即可。</p><h3 id="前端容器：iframe"><a href="#前端容器：iframe" class="headerlink" title="前端容器：iframe"></a>前端容器：iframe</h3><p>iframe 可以创建一个全新的独立的宿主环境，类似于沙箱隔离，这意味着我们的前端应用之间可以相互独立运行，仅需要做好应用之间的管理、通信即可。<br>实现简单，子应用之间自带沙箱，天然隔离，互不影响<br>iframe的样式现实、兼容性等都具有局限性。</p><h3 id="结合Web-Components构建"><a href="#结合Web-Components构建" class="headerlink" title="结合Web Components构建"></a>结合Web Components构建</h3><p>Web Components 是一套不同的技术，允许开发者创建可重用的定制元素（它们的功能封装在代码之外）并且在Web应用中使用它们.<br>Web Components技术，离项目应用还有些距离。<br>每个子应用都拥有独立的script和css，也可独立部署。<br>对历史系统改造成本高，子应用通信较为复杂。</p><p>以上6中方案各有优缺点，根据业务等实际情况进行选择。另外，为确保前端体验，不论使用上述那种方案都要完成对应的基座架构框架的搭建。<br>基座就是用于集成各种业务系统前端的框架，可以包括登录、退出</p><h2 id="微前端的业务划分方式"><a href="#微前端的业务划分方式" class="headerlink" title="微前端的业务划分方式"></a>微前端的业务划分方式</h2><p>常见的几种划分微前端的方式：</p><p>  按照业务拆分<br>  按照权限拆分<br>  按照变更的频率拆分<br>  按照组织结构拆分<br>  跟随后端微服务拆分 </p><p>还要根据业务需求选择以上划分方式。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nacos项目集中配置管理设置说明</title>
      <link href="/2023/10/14/dev/nacos%E9%A1%B9%E7%9B%AE%E9%9B%86%E4%B8%AD%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E8%AE%BE%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
      <url>/2023/10/14/dev/nacos%E9%A1%B9%E7%9B%AE%E9%9B%86%E4%B8%AD%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E8%AE%BE%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="nacos项目集中配置管理设置说明"><a href="#nacos项目集中配置管理设置说明" class="headerlink" title="nacos项目集中配置管理设置说明"></a>nacos项目集中配置管理设置说明</h1><p>在springboot 微服项目开发中，微服数量不断增加，长期的结果就是配置文件过于分散混乱，难以管理等问题。这里我们使用nacos配置中心为例，实现统一管理项目中所有配置信息。下面让我们开始吧！</p><h2 id="配置依赖引入"><a href="#配置依赖引入" class="headerlink" title="配置依赖引入"></a>配置依赖引入</h2><p>在build.gradle中增加下面依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;com.alibaba.boot:nacos-config-spring-boot-starter:0.2.12&#x27;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="增加生产环境配置文件"><a href="#增加生产环境配置文件" class="headerlink" title="增加生产环境配置文件"></a>增加生产环境配置文件</h2><p>在application-prod.properties增加配置中心设置信息，配置如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">nacos.config.bootstrap.enable</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 生产环境配置中心服务器地址，端口</span></span><br><span class="line"><span class="meta">nacos.config.server-addr</span>=<span class="string">192.168.0.18:8848</span></span><br><span class="line"><span class="meta">nacos.config.username</span>=<span class="string">nacos</span></span><br><span class="line"><span class="meta">nacos.config.password</span>=<span class="string">nacos</span></span><br><span class="line"><span class="comment">#默认为Public命名空间,不需要写，如果加上的话会导致加载不到配置文件</span></span><br><span class="line"><span class="meta">nacos.config.namespace</span>=<span class="string">dev</span></span><br><span class="line"><span class="comment">#指定分组信息</span></span><br><span class="line"><span class="meta">nacos.config.group</span>=<span class="string">ORDER_GROUP</span></span><br><span class="line"><span class="comment"># 配置文件ID data-id</span></span><br><span class="line"><span class="meta">nacos.config.data-ids</span>=<span class="string">db.properties,redis.properties,common.properties,order-xxx.properties</span></span><br><span class="line"><span class="comment"># 配置文件类型</span></span><br><span class="line"><span class="meta">nacos.config.type</span>=<span class="string">properties</span></span><br><span class="line"><span class="comment"># 是否允许动态刷新配置项，这里只是为了演示若能，无强烈要求不要开启</span></span><br><span class="line"><span class="meta">nacos.config.auto-refresh</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#logging.config=classpath:logback-spring.xml</span></span><br><span class="line"><span class="meta">logging.file.name</span>=<span class="string">/temp/logs/order_xxx.log</span></span><br></pre></td></tr></table></figure><h2 id="配置文件ID-根据模块要求定义"><a href="#配置文件ID-根据模块要求定义" class="headerlink" title="配置文件ID 根据模块要求定义"></a>配置文件ID 根据模块要求定义</h2><p>1、在application-prod.properties中“nacos.config.data-ids=”指定从nacos config中要加载的配置文件；<br>2、db.properties,redis.properties 全局默认不需要修改。<br>3、common.properties 为项目通用的配置<br>4、order-xxx.properties 为业务模块独有的配置；命名规则为：模块名+子模块名(可选)</p><p>注：nacos配置中心设置时，nacos.config.data-ids要与nacos配置中心的data-id一致。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之策略模式应用</title>
      <link href="/2023/10/13/readbook/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/13/readbook/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>本篇文章主要介绍策略模式在SpringBoot框架中如何使用。是一篇策略模式的应用实践的文章，需要对设计模式的理论又一定的了解。</p><h3 id="1-1-策略模式简述"><a href="#1-1-策略模式简述" class="headerlink" title="1.1 策略模式简述"></a>1.1 策略模式简述</h3><p>策略模式包含以下3个核心角色：<br>    -  环境（Context）：定义了使用算法的环境，负责将客户端请求委派给具体的策略对象执行。环境类可以通过依赖注入、简单工厂等方式来获取具体策略对象。<br>    -  抽象策略（Abstract Strategy）：定义了策略对象的公共接口或抽象类，规定了具体策略类必须实现的方法。<br>    -  具体策略（Concrete Strategy）：实现了抽象策略定义的接口或抽象类，包含了具体的算法实现。</p><span id="more"></span><h2 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h2><p>作为程序员，无论是在日常开发、学习中，肯定会学习了解各种的设计模式。在开发中我们如果根据需求选择合适的设计模式，使得我们写出的代码更加优雅，且具被拓展性，可读性，是需要我们时刻思考的。</p><p>收到项目现场转来的一个紧急需求，需要解析一批csv格式的文件入库，每个csv文件都对应一套数据，后续跟能还会增加新的数据。看到之前的代码就是一阵无语…，一坨 “if-else” 堆砌代码。</p><h3 id="2-1构建思路"><a href="#2-1构建思路" class="headerlink" title="2.1构建思路"></a>2.1构建思路</h3><p>根据上面的需求不同类型数据文件采用不同的处理方法，对于有经验的程序员，肯定第一个想到的肯定是策略模式。若对设计模式不是很熟，也可根据需求对照设计模式定义挑选。</p><pre><code>- 定义可识别常量：这里根据不同的文件名标识策略类型，使用文件名调用对应的策略实例。- 定义策略接口：每个文件定义一种解析实现，实现对应的解析逻辑，并提取抽接口，定义为对外统一访问入口。- Context设计：通过Map来存储策略定义数据，调用者调用是通过策略标识来获取对应策略实例。在不使用springboot时，需要将策略标识与对应实例直接在代码中写死，这种方式不利于拓展，每次增加策略后都要修改Map。所以强烈建议使用springboot，通过注解方式实现策略的自动注册。新增策略后springboot启动时会扫描策略并对其进行注册，不需要修改旧代码。</code></pre><h3 id="2-2代码实现"><a href="#2-2代码实现" class="headerlink" title="2.2代码实现"></a>2.2代码实现</h3><p>下面我们首先定义策略接口及策略实例,使用springboot框架时只需要在策略实例上增加Component注解，即可将实例注入到Map中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CSVParser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String cvsSplitBy = <span class="string">&quot;\\|&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> br</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileType</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 city_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;City&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CityParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">   </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ParseResult <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;City&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 region_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;Region&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegionParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Region&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其次，编写策略选择器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解析策略选择器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParseStrategyContext</span> </span>&#123;</span><br><span class="line"><span class="comment">//这里springboot会扫描已定义的策略，并注册到selectParser中</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String,CSVParser&gt; selectParser=<span class="keyword">new</span> ConcurrentHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据资源类型选择对应的解析策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 资源类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CSVParser <span class="title">select</span><span class="params">(String type)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectParser.get(type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3拓展"><a href="#2-3拓展" class="headerlink" title="2.3拓展"></a>2.3拓展</h3><p>当需求发生变化，需要增加新类型文件时，只需要新增一个策略实例即可，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 room_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;Room&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoomParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Room&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4调用"><a href="#2-4调用" class="headerlink" title="2.4调用"></a>2.4调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewCsvParseTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String filePath = <span class="string">&quot;d://temp&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    ParseStrategySelector strategySelector;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        File[] childFiles = file.listFiles();</span><br><span class="line">        BufferedReader br;</span><br><span class="line">        <span class="keyword">for</span> (File childFile : childFiles) &#123;</span><br><span class="line">List&lt;String&gt; fileNameList = Arrays.asList(childFile.getName().split(<span class="string">&quot;_&quot;</span>));</span><br><span class="line">String fileType=fileNameList.get(<span class="number">0</span>);</span><br><span class="line">br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(filePath), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"><span class="comment">//根据文件类型，调用不同的策略实例</span></span><br><span class="line">CSVParser parser = strategySelector.select(fileType);</span><br><span class="line">        ParseResult parseResult = parser.parseCsv(br, fileType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h2><p>通过使用策略模式模式，大大减少了代码中的 if-else 使用，代码更加优雅，便于扩展。其次，springboot框架能够更加高效的完成开发任务。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 集合stream流操作示例详解</title>
      <link href="/2023/09/15/devlang/java/Java%20%E9%9B%86%E5%90%88stream%E6%B5%81%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/"/>
      <url>/2023/09/15/devlang/java/Java%20%E9%9B%86%E5%90%88stream%E6%B5%81%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-集合stream流操作示例详解"><a href="#Java-集合stream流操作示例详解" class="headerlink" title="Java 集合stream流操作示例详解"></a>Java 集合stream流操作示例详解</h1><p>自java 8 版本起推出集合stream流操作特性，确实非常方便的对list进行各种操作，告别使用for的时代来了。下面总结了一些常用的对List对象进行遍历、过滤、查询、去重、排序、分组、提取等操作示例，；</p><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String sex;</span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line"><span class="keyword">private</span> String department;</span><br><span class="line"><span class="keyword">private</span> BigDecimal salary;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id,String name,String sex,Integer age,String department,BigDecimal salary)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id=id;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.sex=sex;</span><br><span class="line"><span class="keyword">this</span>.age=age;</span><br><span class="line"><span class="keyword">this</span>.department=department;</span><br><span class="line"><span class="keyword">this</span>.salary=salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListStream</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">List&lt;User&gt; userList = getUserList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">1</span>, <span class="string">&quot;黄文隆&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">32</span>, <span class="string">&quot;研发部&quot;</span>, BigDecimal.valueOf(<span class="number">3600</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">2</span>, <span class="string">&quot;江奕云&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">30</span>, <span class="string">&quot;财务部&quot;</span>, BigDecimal.valueOf(<span class="number">3800</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">3</span>, <span class="string">&quot;刘姿婷&quot;</span>, <span class="string">&quot;女&quot;</span>, <span class="number">20</span>, <span class="string">&quot;人事部&quot;</span>, BigDecimal.valueOf(<span class="number">3700</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">4</span>, <span class="string">&quot;夏志豪&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">38</span>, <span class="string">&quot;研发部&quot;</span>, BigDecimal.valueOf(<span class="number">3500</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;林雅南&quot;</span>, <span class="string">&quot;女&quot;</span>, <span class="number">25</span>, <span class="string">&quot;财务部&quot;</span>, BigDecimal.valueOf(<span class="number">3200</span>)));</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们有一个List<User>类型的列表，可以使用Java8的stream流对它进行遍历、过滤、查询、去重、排序、分组等操作。</p><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userList.forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h2><p>通过filter()进行数据筛选过滤。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取部门为“研发部”的用户列表</span></span><br><span class="line">userList = userList.stream().filter(user -&gt; user.getDepartment() == <span class="string">&quot;研发部&quot;</span>).collect(Collectors.toList());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取组织编号为“黄文隆”的组织信息，如果没有找到则返回null</span></span><br><span class="line">User user = userList.stream().filter(u -&gt; u.getName().equals(<span class="string">&quot;黄文隆&quot;</span>)).findAny().orElse(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><p>使用 distinct() 方法可以去除重复的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取部门列表，并去除重复数据</span></span><br><span class="line">    List&lt;String&gt; departmentList = userList.stream().map(User::getDepartment).distinct().collect(Collectors.toList());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>使用sorted()方法进行数据排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据年龄排序（升序）</span></span><br><span class="line">userList = userList.stream().sorted((u1, u2) -&gt; u1.getAge() - u2.getAge()).collect(Collectors.toList());</span><br><span class="line"><span class="comment">//推荐：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge)).collect(Collectors.toList());</span></span><br><span class="line"><span class="comment">//降序：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge).reversed()).collect(Collectors.toList());</span></span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>使用 groupingBy() 将数据进行分组，最终返回一个 Map 类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据部门对用户列表进行分组</span></span><br><span class="line">Map&lt;String,List&lt;User&gt;&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment));</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据部门和性别对用户列表进行分组</span></span><br><span class="line">Map&lt;String,Map&lt;String,List&lt;User&gt;&gt;&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment,Collectors.groupingBy(User::getSex)));</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据部门进行分组，汇总各个部门用户的平均年龄</span></span><br><span class="line">Map&lt;String, Double&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment, Collectors.averagingInt(User::getAge)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h2><p>使用 map() 方法获取用户列表中的名称列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户名称列表</span></span><br><span class="line">List&lt;String&gt; nameList = userList.stream().map(User::getName).collect(Collectors.toList());</span><br><span class="line"><span class="comment">//或者：List&lt;String&gt; nameList = userList.stream().map(user -&gt; user.getName()).collect(Collectors.toList());</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="判断-查找"><a href="#判断-查找" class="headerlink" title="判断(查找)"></a>判断(查找)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断用户列表中是否存在名称为“黄文隆”的数据</span></span><br><span class="line"><span class="keyword">boolean</span> result1 = userList.stream().anyMatch(user -&gt; user.getName().equals(<span class="string">&quot;name_01&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户名称是否都包含“黄”字段</span></span><br><span class="line"><span class="keyword">boolean</span> result2 = userList.stream().allMatch(user -&gt; user.getName().contains(<span class="string">&quot;黄&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户名称是否存在不包含“黄”字段</span></span><br><span class="line"><span class="keyword">boolean</span> result3 = userList.stream().noneMatch(user -&gt; user.getName().contains(<span class="string">&quot;黄&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户列表中年龄的最大值、最小值、总和</span></span><br><span class="line"><span class="keyword">int</span> maxVal = userList.stream().map(User::getAge).reduce(Integer::max).get();</span><br><span class="line"><span class="keyword">int</span> minVal = userList.stream().map(User::getAge).reduce(Integer::min).get();</span><br><span class="line"><span class="keyword">int</span> sumVal = userList.stream().map(User::getAge).reduce(<span class="number">0</span>,Integer::sum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户列表中年龄的最大值、最小值、总和、平均值</span></span><br><span class="line"><span class="keyword">int</span> maxVal = userList.stream().mapToInt(User::getAge).max().getAsInt();</span><br><span class="line"><span class="keyword">int</span> minVal = userList.stream().mapToInt(User::getAge).min().getAsInt();</span><br><span class="line"><span class="keyword">int</span> sumVal = userList.stream().mapToInt(User::getAge).sum();</span><br><span class="line"><span class="keyword">double</span> aveVal =  userList.stream().mapToInt(User::getAge).average().getAsDouble();</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计研发部的人数，使用 counting()方法进行统计</span></span><br><span class="line">Long departCount = userList.stream().filter(user -&gt; user.getDepartment() == <span class="string">&quot;研发部&quot;</span>).collect(Collectors.counting());</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计30岁以上的人数，使用 count()方法进行统计（推荐）</span></span><br><span class="line">Long ageCount = userList.stream().filter(user -&gt; user.getAge() &gt;= <span class="number">30</span>).count();</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计薪资大于1500元的人数</span></span><br><span class="line">Long salaryCount = userList.stream().filter(user -&gt; user.getSalary().compareTo(BigDecimal.valueOf(<span class="number">1500</span>)) == <span class="number">1</span>).count();</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算年龄总和</span></span><br><span class="line"><span class="keyword">int</span> sumAge = userList.stream().collect(Collectors.summingInt(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算平均年龄</span></span><br><span class="line"><span class="keyword">double</span> aveAge = userList.stream().collect(Collectors.averagingDouble(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取IntSummaryStatistics对象</span></span><br><span class="line">IntSummaryStatistics ageStatistics = userList.stream().collect(Collectors.summarizingInt(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计：最大值、最小值、总和、平均值、总数</span></span><br><span class="line">System.out.println(<span class="string">&quot;最大年龄：&quot;</span> + ageStatistics.getMax());</span><br><span class="line">System.out.println(<span class="string">&quot;最小年龄：&quot;</span> + ageStatistics.getMin());</span><br><span class="line">System.out.println(<span class="string">&quot;年龄总和：&quot;</span> + ageStatistics.getSum());</span><br><span class="line">System.out.println(<span class="string">&quot;平均年龄：&quot;</span> + ageStatistics.getAverage());</span><br><span class="line">System.out.println(<span class="string">&quot;员工总数：&quot;</span> + ageStatistics.getCount());</span><br><span class="line"></span><br><span class="line"><span class="comment">//最高薪资</span></span><br><span class="line">BigDecimal maxSalary = userList.stream().map(User::getSalary).max((x1, x2) -&gt; x1.compareTo(x2)).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//最低薪资</span></span><br><span class="line">BigDecimal minSalary = userList.stream().map(User::getSalary).min((x1, x2) -&gt; x1.compareTo(x2)).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//薪资总和</span></span><br><span class="line">BigDecimal sumSalary = userList.stream().map(User::getSalary).reduce(BigDecimal.ZERO, BigDecimal::add);</span><br><span class="line"></span><br><span class="line"><span class="comment">//平均薪资</span></span><br><span class="line">BigDecimal avgSalary = userList.stream().map(User::getSalary).reduce(BigDecimal.ZERO, BigDecimal::add).divide(BigDecimal.valueOf(userList.size()), <span class="number">2</span>, BigDecimal.ROUND_HALF_UP);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java stream </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux swap分区调整</title>
      <link href="/2023/09/14/linux/linuxswap/"/>
      <url>/2023/09/14/linux/linuxswap/</url>
      
        <content type="html"><![CDATA[<h1 id="linux-swap分区调整"><a href="#linux-swap分区调整" class="headerlink" title="linux swap分区调整"></a>linux swap分区调整</h1><p>近期安装了一套ubantu系统，因为物理机内存有限，想调整swap分区，顾边学边整理的此篇内容。</p><h2 id="swap分区多大合适"><a href="#swap分区多大合适" class="headerlink" title="swap分区多大合适"></a>swap分区多大合适</h2><p>我们在安装系统的时候已经建立了 swap 分区。swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。<br>那么swap分区到底设置成多大才最优？</p><span id="more"></span><p>以前几乎所有Linux 系统管理的书上都推荐设置交换分区大小为内存的2倍。这些建议到了现在就是也适用，具体情况还是要根据实际情况作出调整。</p><p>首先看下Redhat官方的文档中关于swap分区大小设置的建议：</p><table><thead><tr><th>物理内存</th><th align="center">建议的交换空间大小</th><th align="center">如果开启休眠功能建议的教会空间大小</th></tr></thead><tbody><tr><td>&lt;= 2GB</td><td align="center">内存的2倍</td><td align="center">内存的3倍</td></tr><tr><td>&gt;2GB-8GB</td><td align="center">等于内存大小</td><td align="center">内存的2倍</td></tr><tr><td>&gt;8GB-64GB</td><td align="center">至少4G</td><td align="center">内存的1.5倍</td></tr><tr><td>&gt;64GB</td><td align="center">至少4G</td><td align="center">不建议使用休眠</td></tr></tbody></table><p>实际上，系统中交换分区的大小并不取决于物理内存的量，而是取决于系统中内存的负荷，所以在安装系统时要根据具体的业务来设置SWAP的值。</p><p>一般都需要配置一点swap分区，桌面配置多一点，服务器配置少一点。而对于swap分区的具体使用细节，由一个叫swappiness参数来控制。</p><h2 id="Swappiness"><a href="#Swappiness" class="headerlink" title="Swappiness"></a>Swappiness</h2><p>实际上，并不是等所有的物理内存都消耗完毕之后，才去使用swap的空间，什么时候使用是由swappiness 参数值控制。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat procsysvmswappiness</span><br></pre></td></tr></table></figure><p>在ubuntu上默认是60,一般大部分都有应该是这个值，也有一些linux版本作出了优化调整。<br>swappiness=0的时候表示最大限度使用物理内存，然后才是 swap空间，<br>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面</p><h2 id="swap分区调整步骤"><a href="#swap分区调整步骤" class="headerlink" title="swap分区调整步骤"></a>swap分区调整步骤</h2><p>1、我们使用free -m 查看交换空间的大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubtu:~$ free -m</span><br><span class="line">               total        used        free      shared  buffcache   available</span><br><span class="line">内存：       7904        4423         120         371        3360        2817</span><br><span class="line">交换：       2047          55        1992</span><br></pre></td></tr></table></figure><p>2、使用swapon -s 查看交换空间文件挂载的对应的文件<br>如下swapfile既是挂载的文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubtu:~$ swapon -s</span><br><span class="line">FilenameTypeSizeUsedPriority</span><br><span class="line">swapfile                               file209714857144-2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、停掉挂载的交换空间的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff swapfile</span><br></pre></td></tr></table></figure><p>4、删除交换空间文件 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm swapfile</span><br></pre></td></tr></table></figure><p>5、创建新的挂载文件以及设置大小,可参考上面进行设置，因为我的是8G内存，这里交换空间设置8G。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 8G swapfile</span><br></pre></td></tr></table></figure><p>设置完成，可以使用ls -l swapfile 查看创建的swapfile有没有权限。<br>授权如果不为 -rw——- ，请执行 sudo chmod 600 swapfile 给文件赋权。<br>若漏掉则在挂载时会有提示：mkswap: swapfile: insecure permissions 0644, fix with: chmod 0600 swapfile</p><p>6、将文件挂载到交换空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap swapfile</span><br></pre></td></tr></table></figure><p>挂载成功提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正在设置交换空间版本 1，大小 = 8 GiB (8589930496  个字节)</span><br><span class="line">无标签， UUID=08420c82-ecbd-4628-96c5-78270950edf8</span><br></pre></td></tr></table></figure><p>7、启动交换空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon  swapfile</span><br></pre></td></tr></table></figure><p>可以free -m 或sudo swapon –show 查看是否设置成功。</p><p>8、若要长久生效，还要使用sudo vi etcfstab 将默认的swapfile 那行注释掉，在最后面增加下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapfileswapswapdefault00</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reids 持久化学习笔记</title>
      <link href="/2022/11/14/dev/Redis%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/14/dev/Redis%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="reids-持久化学习笔记"><a href="#reids-持久化学习笔记" class="headerlink" title="reids 持久化学习笔记"></a>reids 持久化学习笔记</h1><h2 id="RDB快照-snapshot"><a href="#RDB快照-snapshot" class="headerlink" title="RDB快照 (snapshot)"></a>RDB快照 (snapshot)</h2><p>在默认情况下，Redis将内存数据库快照保存在名字为dump.rdb 的二进制文件中。你可以对 Redis进行设置，让它在“N秒内数据集至少有M个改动”这一条件被满足时，自动保存一次数据集.<br>比如说，以下设置会让 Redis 在满足“60 秒内有至少有1000 个键被改动”这一条件时，自动保存一次数据集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#save 60 1000 /关闭RDB只需要将所有的save保存策略注释掉即可</span><br></pre></td></tr></table></figure><p>还可以手动执行命令生成RDB快照，进入redis客户端执行命令<strong>save</strong>或<strong>bgsave</strong>可以生成dump.rdb文件，每次命令执行都会将所有redis内存快照到一个新的rdb文件里，并覆盖原有rdb快照文件。</p><span id="more"></span><h3 id="bgsave的写时复制-COW-机制"><a href="#bgsave的写时复制-COW-机制" class="headerlink" title="bgsave的写时复制(COW)机制"></a>bgsave的写时复制(COW)机制</h3><p>Redis 借助操作系统提供的写时复制技术(Copy-0n-Write,COW)，在生成快照的同时，依然可以正常处理写命令。简单来说，bgsave 子讲程是由主线程 fork 生成的，可以共享主线程的所有内存数据。bgsave 子进程运行后，开始读取主线程的内存数据，并把它们写入 RDB 文件。此时，如果主线程对这些数据也都是读操作，那么，主线程和 bgsave 子进程相与不影响。但是，如果主线程要修改块数据，那么，这块数据就会被复制一份，生成该数据的副本。然后，bgsave 子进程会把这个副本数据写入 RDB 文件，而在这个过程中，主线程仍然可以直接修改原来的数据。</p><p><strong>save与bqsave对比:</strong></p><table><thead><tr><th>命令</th><th>save</th><th>bgsave</th></tr></thead><tbody><tr><td>IO类型</td><td>同步</td><td>异步</td></tr><tr><td>是否阻塞redis其它命令</td><td>是</td><td>否（在生成子进程执行调用fork函数时会有短暂阻塞）</td></tr><tr><td>复杂度</td><td>O(n)</td><td>O(n)</td></tr><tr><td>优点</td><td>不会消耗额外内存</td><td>不阻塞客户端命令</td></tr><tr><td>缺点</td><td>阻塞客户端命令</td><td>需要fork子进程，消耗内存</td></tr></tbody></table><p><strong>配置自动生成rdb文件后台使用的是bgsave方式</strong></p><h2 id="AOF-append-only-file"><a href="#AOF-append-only-file" class="headerlink" title="AOF (append-only file)"></a>AOF (append-only file)</h2><p>快照功能并不是非常耐久 (durable): 如果 Redis 因为某些原因而造成故障停机，那么服务器将丢失最近写入、且仍未保存到快照中的那些数据。从1.1 版本开始，Redis 增加了一种完全耐久的持久化方式:AOF 持久化，将修改的每一条指令记录进文件appendonly.aof中(先写入os cache，每隔一段时间fsync到磁盘)你可以通过修改配置文件来打开AOF功能:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#appendonly yes</span><br></pre></td></tr></table></figure><p>从现在开始，每当Redis 执行一个改变数据集的命令时(比如 SET)，这个命令就会被加到AOF 文件的末尾这样的话，当Redis 重新启动时，程序就可以通过重新执行AOF文件中的命令来达到重建数据集的目的你可以配置Redis多久才将数据fsync到磁盘一次。<br>有三个选项:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">appendfsync always: 每次有新命令退到 AOF 文件时就执行次 fsync ，非常慢，也非常安全</span><br><span class="line">appendfsync everysec: 每秒 fsync 一次，足够快，并且在故障时只会丢失 1 秒钟的数据.</span><br><span class="line">appendfsync no:从不 fsync ，将数据交给操作系统来处理。更快，也更不安全的选择。</span><br></pre></td></tr></table></figure><p>推荐(并且也是默认)的措施为每秒fsync一次，这种fsync 策略可以兼顾速度和安全性.</p><h3 id="AOF重写"><a href="#AOF重写" class="headerlink" title="AOF重写"></a>AOF重写</h3><p>AOF文件里可能有太多没用指令，所以AOF会定期根据内存的最新数据生成aof文件.例如，执行了如下几条命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 3</span><br></pre></td></tr></table></figure><p>重写后AOF文件里变成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*3</span><br><span class="line">$3</span><br><span class="line">SET</span><br><span class="line">$9</span><br><span class="line">readcount</span><br><span class="line">$l</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>如下两个配置可以控制AOF自动重写频率</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># auto-aof-rewrite-min-size 64mb //aof文件至少要达到64M才会自动重写，文件太小恢复速度本来就很快，重写的意义不.</span><br><span class="line"># auto-aof-rewrite-percentage 100 //aof文件自上一次重写后文件大小增长了10%则再次触发重写</span><br></pre></td></tr></table></figure><p>当然AOF还可以手动重写，进入redis客户端执行命令 <strong>bgrewriteaof</strong> 重写AOF.</p><p>注意，<strong>AOF重写redis会fork出一个子进程去做(与bgsave命令类似)，不会对redis正常命令处理有太多影响</strong></p><h3 id="RDB和AOF，我应该用哪一个"><a href="#RDB和AOF，我应该用哪一个" class="headerlink" title="RDB和AOF，我应该用哪一个?"></a>RDB和AOF，我应该用哪一个?</h3><table><thead><tr><th>命令</th><th>RDB</th><th>AOF</th></tr></thead><tbody><tr><td>启动优先级</td><td>低</td><td>高</td></tr><tr><td>体积</td><td>小</td><td>大</td></tr><tr><td>恢复速度</td><td>快</td><td>慢</td></tr><tr><td>数据安全性</td><td>容易丢数据</td><td>根据策略决定</td></tr></tbody></table><p>生产环境可以都启用，redis启动时如果既有rdb文件又有aof文件则优先选择aof文件恢复数据，因为aof一般来说数据更全一点.</p><h2 id="Redis-4-0-混合持久化"><a href="#Redis-4-0-混合持久化" class="headerlink" title="Redis 4.0 混合持久化"></a>Redis 4.0 混合持久化</h2><p>重启 Redis 时，我们很少使用 RDB来恢复内存状态，因为会丢失大量数据。我们通常使用 AOF 日志重放，但是重放 AOF 日志性能术对RDB来说要慢很多，这样在 Redis实例很大的情况下，启动需要花费很长的时间。Redis 4.0 为了解决这个问题，带来了一个新的久化选项 — 混合持久化。<br>通讨如下配置可以开启混合持久化(必须先开启aof)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># aof-use-rdb-preamble yes</span><br></pre></td></tr></table></figure><p>如果开启混合持久化，<strong>AOF在重写时</strong>，不再是单纯将内存数据转换为RESP命令写入AOF文件，而是将重写<strong>这一刻之前</strong>的内存做RDB快照处理，并且将RDB、内容和增量的AOF修改内存数据的命令存在一起，都写入新的AOF文件，新的文件一开始不叫 apendonly.aof ，等到重写完新的AOF文件才会进行改名，覆盖原有的AOF文件，完成新旧两个AOF文件的替换。于是在 Redis 重启的时候，可以先加载 RDB 的内容，然后再重放增量 AOF 日志就可以完全替代之前的 AOF 全量文件重放，因此重启效率大幅得到提升。</p><p>混合持久化AOF文件结构如下：<br>|appendonly.aof |<br>|:–:|<br>|RDB格式 |<br>|  AOF格式 |</p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reids 数据类型学习笔记</title>
      <link href="/2022/11/14/dev/reids%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/14/dev/reids%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="reids-数据类型学习笔记"><a href="#reids-数据类型学习笔记" class="headerlink" title="reids 数据类型学习笔记"></a>reids 数据类型学习笔记</h1><h2 id="redis-基本数据类型"><a href="#redis-基本数据类型" class="headerlink" title="redis 基本数据类型"></a>redis 基本数据类型</h2><p><img src="/images/redis/a7c36999e90a41038134360ace7da42a.png#pic_center" alt="在这里插入图片描述"></p><span id="more"></span><h3 id="字符串string类型"><a href="#字符串string类型" class="headerlink" title="字符串string类型"></a>字符串string类型</h3><p><strong>常用指令：</strong> set、mset、setnx、get、mget、del、expire。<br><strong>原子加减：</strong> incr、decr、incrby、decrby、</p><p><strong>使用场景：</strong></p><ul><li>单值缓存</li><li>对象缓存</li><li>分布式锁</li><li>计数器</li><li>分布式系统序列号</li></ul><h3 id="哈希hash类型"><a href="#哈希hash类型" class="headerlink" title="哈希hash类型"></a>哈希hash类型</h3><p><strong>常用指令：</strong>hset、hsetnx、hmset、hget、hmget、hdel、hlen、hgetall、hincrby<br><strong>使用场景：</strong></p><ul><li>对象缓存</li><li>购物车（添加商品、增加数量、商品总数、删除商品、获取购物车商品）</li></ul><h3 id="列表list类型"><a href="#列表list类型" class="headerlink" title="列表list类型"></a>列表list类型</h3><p><strong>常用指令：</strong>lpush、rpush、lpop、rpop、lrange、blpop、brpop。<br><strong>使用场景：</strong></p><ul><li>可实现常用分布式数据结构，stack(栈)、Queue（队列）、Blocking MQ（阻塞队列）</li><li>微博、微信消息流，时间线功能。</li></ul><p>注：读扩散、写扩散，千万、亿万粉丝大V发消息，如何推给粉丝？<br>小V写扩散、对用户进行标签，将消息写到活跃用户收件箱</p><h3 id="集合set类型"><a href="#集合set类型" class="headerlink" title="集合set类型"></a>集合set类型</h3><p><strong>常用指令：</strong> sadd、srem、smembers、scard、sismember、srandmember、spop<br><strong>运算操作：</strong> sinter、sinterstore、sunion、sunionstore、sdiff、sdiffstore<br><strong>使用场景：</strong></p><ul><li>抽奖、点赞、收藏、标签</li><li>集合交集、并集、差集</li></ul><h3 id="有序集合ZSet类型"><a href="#有序集合ZSet类型" class="headerlink" title="有序集合ZSet类型"></a>有序集合ZSet类型</h3><p><strong>常用指令：</strong> zadd zrem zscore zincrby zcard、zrange zrevrange、<br><strong>运算操作：</strong>zunionstore、zinterstore<br><strong>使用场景：</strong></p><h2 id="redis底层数据结构"><a href="#redis底层数据结构" class="headerlink" title="redis底层数据结构"></a>redis底层数据结构</h2><ul><li>数组: 根据序号随机查找很快，但是插入与删除很慢，需要挪动很多元素链表:插入与删除很快，只需要修改相邻元素指针，但是查找很慢，需要从第一个元素逐个遍历查找</li></ul><p>有序数组支持折半查找，链表不支持折半查找<br>有序数组的折半查找操作速度很快，但是插入、删除操作很慢</p><ul><li>跳表: 将有序链表改造为支持“折半查找”算法，可以进行快速的插入、删除、查找操作</li></ul><p>跳表与压缩列表优缺点，如何选择。</p><h2 id="Redis经典问题"><a href="#Redis经典问题" class="headerlink" title="Redis经典问题"></a>Redis经典问题</h2><h2 id="3-3-缓存穿透（缓存，数据库都没有数据）"><a href="#3-3-缓存穿透（缓存，数据库都没有数据）" class="headerlink" title="3.3 缓存穿透（缓存，数据库都没有数据）"></a>3.3 缓存穿透（缓存，数据库都没有数据）</h2><p>描述：是指查询一个根本不存在的数据(key)，缓存层和存储层都不会命中。通常出于容错的考虑，如果从存储层查不到数据则不写入缓存层.<br>导致这个请求每次都会请求到数据库，失去了缓存保护后端存储的意义造成缓存穿透的基本原因有两个:<br>第一，自身业务代码或者数据出现问题<br>第二，一些恶意攻击、爬虫等造成大量空命中。<br>3、 突发性热点缓存，<br>解决方案：<br>1、将空数据也设置为缓存，并设置过期时间（几分钟）。<br>2、布隆过滤器。</p><h2 id="3-4-缓存雪崩"><a href="#3-4-缓存雪崩" class="headerlink" title="3.4 缓存雪崩"></a>3.4 缓存雪崩</h2><p>描述：缓存失效（缓存层宕机）后，导致大量请求都会打到存储层，存储层的调用量暴增，造成存储层也会级联宕机的情况。</p><p>解决方案：<br>1、保证缓存层服务的高可用性。<br>2、以来隔离组件为后端限流熔断降级，核心业务访问达数据库，非核心业务返回预定义的信息。<br>3、提前演练。在项目上线前，演练缓存层宕机后，应用及后端的负载情况以及可能出现的问题，在此基础上指定一些预案。</p><h2 id="3-5-缓存击穿"><a href="#3-5-缓存击穿" class="headerlink" title="3.5 缓存击穿"></a>3.5 缓存击穿</h2><p>描述：缓存击穿是指当大量缓存在同一时间失效可能导致大量请求，同时穿透缓存直接访问到数据库。造成数据库压力瞬间骤增，大量请求阻塞，甚至挂掉。</p><p>解决方案：<br>1、针对这些缓存设置不同的过期时间（差异化设置过期时间），如：在24小时基础上增加一个随机数（增加几分钟）。<br>2、使用分布式锁，保证同一时刻只能有一个查询请求重新加载热点数据到缓存中，这样，其他的线程只需等待该线程运行完毕，即可重新从Redis中获取数据。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java对象进入老年代的条件</title>
      <link href="/2022/09/15/dev/Java%E5%AF%B9%E8%B1%A1%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3%E7%9A%84%E6%9D%A1%E4%BB%B6/"/>
      <url>/2022/09/15/dev/Java%E5%AF%B9%E8%B1%A1%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3%E7%9A%84%E6%9D%A1%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Java对象进入老年代的条件"><a href="#Java对象进入老年代的条件" class="headerlink" title="Java对象进入老年代的条件"></a>Java对象进入老年代的条件</h1><h2 id="大对象直接进入老年代"><a href="#大对象直接进入老年代" class="headerlink" title="大对象直接进入老年代"></a>大对象直接进入老年代</h2><p>大对象就是需要大量连续内存空间的对象。JVM参数 -XX:PretenureSizeThreshold 可以设置大对象的大小，如果对象超过设置大小会直接进入老年代，不会进入年轻代，这个参数只在 Serial 和ParNew两个收集器下有效。</p><p>比如设置JVM参数：-XX:PretenureSizeThreshold=1000000 (单位是字节) -XX:+UseSerialGC ，再执行下上面的第一个程序会发现大对象直接进了老年代。</p><span id="more"></span><h2 id="长期存活的对象将进入老年代"><a href="#长期存活的对象将进入老年代" class="headerlink" title="长期存活的对象将进入老年代"></a>长期存活的对象将进入老年代</h2><p>既然虚拟机采用了分代收集的思想来管理内存，那么内存回收时就必须能识别哪些对象应放在新生代，哪些对象应放在老年代中。为了做到这一点，虚拟机给每个对象一个对象年龄计数器。</p><p>如果对象在 Eden 出生并经过第一次 Minor GC 后仍然能够存活，并且能被 Survivor 容纳的话，将被移动到 Survivor空间中，并将对象年龄设为1。对象在 Survivor 中每熬过一次 MinorGC，年龄就增加1岁，当它的年龄增加到一定程度（默认为15岁，CMS收集器默认6岁，不同的垃圾收集器会略微有点不同），就会被晋升到老年代中。对象晋升到老年代的年龄阈值，可以通过参数 -XX:MaxTenuringThreshold 来设置。</p><h2 id="对象动态年龄判断"><a href="#对象动态年龄判断" class="headerlink" title="对象动态年龄判断"></a>对象动态年龄判断</h2><p>当前放对象的Survivor区域里（其中一块区域，放对象的那块s区），一批对象的总大小大于这块Survivor区域内存大小的50%（-XX:TargetSurvivorRatio可以指定），那么此时大于等于这批对象年龄最大值的对象，就可以直接进入老年代了，例如Survivor区域里现在有一批对象，年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区域的50%，此时就会把年龄n(含)以上的对象都放入老年代。这个规则其实是希望那些可能是长期存活的对象，尽早进入老年代。对象动态年龄判断机制一般是在minor gc之后触发的。</p><h2 id="老年代空间分配担保机制"><a href="#老年代空间分配担保机制" class="headerlink" title="老年代空间分配担保机制"></a>老年代空间分配担保机制</h2><p>年轻代每次minor gc之前JVM都会计算下老年代剩余可用空间。如果这个可用空间小于年轻代里现有的所有对象大小之和。</p><p>就会看一个“-XX:-HandlePromotionFailure”(jdk1.8默认就设置了)的参数是否设置了。如果有这个参数，就会看看老年代的可用内存大小，是否大于之前每一次minor gc后进入老年代的对象的平均大小。如果上一步结果是小于或者之前说的参数没有设置，那么就会触发一次Full gc，对老年代和年轻代一起回收一次垃圾，如果回收完还是没有足够空间存放新的对象就会发生”OOM”。</p><p>当然，如果minor gc之后剩余存活的需要挪动到老年代的对象大小还是大于老年代可用空间，那么也会触发full gc，full gc完之后如果还是没有空间放minor gc之后的存活对象，则也会发生“OOM”。</p>]]></content>
      
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jvm垃圾回收机制理解</title>
      <link href="/2022/08/15/dev/jvm%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%90%86%E8%A7%A3/"/>
      <url>/2022/08/15/dev/jvm%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="jvm-垃圾回收机制理解"><a href="#jvm-垃圾回收机制理解" class="headerlink" title="jvm 垃圾回收机制理解"></a>jvm 垃圾回收机制理解</h1><h2 id="堆内存区域划分"><a href="#堆内存区域划分" class="headerlink" title="堆内存区域划分"></a>堆内存区域划分</h2><p>堆内存被划分为年轻代和老年代两个区域，而年轻代又分为一个伊甸园区（Eden）和两个幸存区（from_Survivor和to_Survivor），年轻代分配比例8：1：1。</p><p>##了解垃圾回收机制前我们要先了解下，如何判断对象可用被回收？</p><p>将“GC roots”对象作为根节点，从根节点开始向下查找引用对象，直到最后一个节点，找到的对象都标记为<strong>非垃圾对象</strong>，其余未标记的都是垃圾对象。<br>线程栈中的本地变量，静态变量，本地方法中的变量都可用作为GC roots根节点， 这就是可达性分析算法。</p><p>标记为非垃圾的对象会被复制空的survivor区，对象的分代年龄加1，剩余伊甸园区的垃圾对象会被清除。当伊甸园区域再次满了后会再次触发minor gc。<br>再次根据可达性分析算法标记非垃圾对象，重复上面的操作。<br>当长期存活对象（分代年龄达到15）和大对象，将会放到老年区。</p><span id="more"></span><h2 id="对象动态年龄判断"><a href="#对象动态年龄判断" class="headerlink" title="对象动态年龄判断"></a>对象动态年龄判断</h2><p>还有当前放对象的Survivor区域里（其中一块区域，放对象的那块s区），一批对象的总大小大于这块Survivor区域内存大小的50%（-XX:TargetSurvivorRatio可以指定），那么此时大于等于这批对象年龄最大值的对象，就可以直接进入老年代了，例如Survivor区域里现在有一批对象，年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区域的50%，此时就会把年龄n(含)以上的对象都放入老年代。这个规则其实是希望那些可能是长期存活的对象，尽早进入老年代。对象动态年龄判断机制一般是在minor gc之后触发的。</p><h2 id="full-gc"><a href="#full-gc" class="headerlink" title="full gc"></a>full gc</h2><p>当老年代满了后，进行一次full gc，老年代依然满着，这时会出OOM内存溢出。<br>我们调优的目的主要就是减少full gc 次数，以减少STW（Stop the World），STW是指full gc时，会暂停当前执行线程，等待full gc结束，即在full gc期间，JVM虚拟机是暂停的。</p><p><strong>注：一般老年代占对内存的2/3.</strong></p><h2 id="频繁full-gc-如何解决？"><a href="#频繁full-gc-如何解决？" class="headerlink" title="频繁full gc 如何解决？"></a><strong>频繁full gc 如何解决？</strong></h2><p>能否对jvm调优，让虚拟机几乎不发生full gc，<br>当系统一次性加载过多数据进内存，导致频繁有大对象进入老年代，触发Full GC。我们可调整伊甸园区（Eden)大小 通过-Xmn 参数调整。具体如何调优还要根据实际情况。</p>]]></content>
      
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作学习中技术积累</title>
      <link href="/2021/12/26/devlang/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
      <url>/2021/12/26/devlang/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="使用技术纪录"><a href="#使用技术纪录" class="headerlink" title="使用技术纪录"></a>使用技术纪录</h2><h3 id="百度指定网站搜索"><a href="#百度指定网站搜索" class="headerlink" title="百度指定网站搜索"></a>百度指定网站搜索</h3><p>site:(jianshu.com) WKT</p><h3 id="在线工具站点"><a href="#在线工具站点" class="headerlink" title="在线工具站点"></a>在线工具站点</h3><p><a href="https://tooltt.com/yaml2properties/">yaml转properties</a><br><a href="https://www.box3.cn/tools/lbs.html">经纬度距离计算</a></p><span id="more"></span><h3 id="mysql-install"><a href="#mysql-install" class="headerlink" title="mysql install"></a>mysql install</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql57-community-release-el6-10.noarch.rpm</span><br><span class="line">报错</span><br><span class="line">No package matched to upgrade: mysql57-community-release</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line">Error: mysql57-community-release conflicts with mysql-community-release-el6-5.noarch</span><br><span class="line">You could try using --skip-broken to work around the problem</span><br><span class="line">You could try running: rpm -Va --nofiles --nodigest</span><br><span class="line"></span><br><span class="line">rpm -qa |grep mysql 查看有如下内容</span><br><span class="line">mysql-community-release-el6-5.noarch</span><br><span class="line">mysql-community-common-5.6.44-2.el6.x86_64</span><br><span class="line"></span><br><span class="line">操作一下 卸载了</span><br><span class="line">rpm -e --nodeps mysql-community-release-el6-5.noarch</span><br><span class="line">rpm -e --nodeps mysql-community-common-5.6.44-2.el6.x86_64</span><br><span class="line"></span><br><span class="line">重新升级</span><br><span class="line"></span><br><span class="line">rpm -Uvh mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="centos6-mysql5-6-升级"><a href="#centos6-mysql5-6-升级" class="headerlink" title="centos6 mysql5.6 升级"></a>centos6 mysql5.6 升级</h4><p><a href="http://www.zsythink.net/archives/2345">http://www.zsythink.net/archives/2345</a><br><a href="https://blog.csdn.net/h330531987/article/details/94452368">https://blog.csdn.net/h330531987/article/details/94452368</a><br><a href="https://www.cnblogs.com/daixh/p/11129768.html">https://www.cnblogs.com/daixh/p/11129768.html</a><br><a href="https://www.cnblogs.com/shione/p/10161021.html">https://www.cnblogs.com/shione/p/10161021.html</a></p><h3 id="CSS书写规范、顺序"><a href="#CSS书写规范、顺序" class="headerlink" title="CSS书写规范、顺序"></a>CSS书写规范、顺序</h3><p><a href=".css%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83%E9%A1%BA%E5%BA%8F.md">css书写规范顺序</a></p><h3 id="flowable-工作流与springboot集成"><a href="#flowable-工作流与springboot集成" class="headerlink" title="flowable 工作流与springboot集成"></a>flowable 工作流与springboot集成</h3><p><a href="https://www.cnblogs.com/yangjiming/p/10944120.html">springboot和flowable modeler整合</a><br><a href="https://www.jianshu.com/p/d9ae64fac55c">Springboot集成flowable modeler 免登录</a><br><a href="https://www.jianshu.com/p/799b1ebf5dc4?tdsourcetag=s_pctim_aiomsg">Flowable 学习笔记</a><br><a href="https://blog.csdn.net/puhaiyang/article/details/79845248">采用springboot+flowable快速实现工作流</a><br><a href="https://blog.csdn.net/weixin_40816738/article/details/103112704">SpringBoot集成flowable-modeler(6.4.1) 实现免登</a><br><a href="https://tkjohn.github.io/flowable-userguide/#_advanced">Flowable BPMN 用户手册 (v 6.3.0)</a><br><a href="https://www.dazhuanlan.com/2020/01/06/5e128b27059e9/">SpringBoot集成Flowable UI</a><br><a href="http://www.fhadmin.org/webnewsdetail16.html">Flowable 工作流 Springboot vue.js 前后分离 跨域 有代码生成器</a></p><p><a href="https://gitee.com/blackzs/flowable-designer">flowable-designer</a></p><h3 id="openlayers-gis开发"><a href="#openlayers-gis开发" class="headerlink" title="openlayers gis开发"></a>openlayers gis开发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">var mapUrl = &#123;</span><br><span class="line">    /****</span><br><span class="line">     * 高德地图</span><br><span class="line">     * lang可以通过zh_cn设置中文，en设置英文，size基本无作用，scl设置标注还是底图，scl=1代表注记，</span><br><span class="line">     * scl=2代表底图（矢量或者影像），style设置影像和路网，style=6为影像图，</span><br><span class="line">     * vec——街道底图</span><br><span class="line">     * img——影像底图</span><br><span class="line">     * roadLabel---路网+标注</span><br><span class="line">     */</span><br><span class="line">    &quot;aMap-img&quot;: &quot;http://webst0&#123;1-4&#125;.is.autonavi.com/appmaptile?style=6&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;aMap-vec&quot;: &quot;http://webrd0&#123;1-4&#125;.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=8&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;aMap-roadLabel&quot;: &quot;http://webst0&#123;1-4&#125;.is.autonavi.com/appmaptile?style=8&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    /***</span><br><span class="line">    *高德新版地图*</span><br><span class="line">    */</span><br><span class="line">    &quot;aMap-vec-a&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=7&quot;, //为矢量图（含路网、含注记）</span><br><span class="line"></span><br><span class="line">    &quot;aMap-img-n&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=6&quot;, //为影像底图（不含路网，不含注记）</span><br><span class="line"></span><br><span class="line">    &quot;aMap-img-a&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=8&quot;, //为影像路图（含路网，含注记）</span><br><span class="line"></span><br><span class="line">    /***</span><br><span class="line">     * 天地图 要key的</span><br><span class="line">     * vec——街道底图</span><br><span class="line">     * img——影像底图</span><br><span class="line">     * ter——地形底图</span><br><span class="line">     * cva——中文注记</span><br><span class="line">     * cta/cia——道路+中文注记 ---roadLabel</span><br><span class="line">     */</span><br><span class="line">    &quot;tian-img&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=img_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-roadLabel&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=cta_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-label&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=cva_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-vec&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=vec_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-ter&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=ter_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    /***</span><br><span class="line">     *geoq地图</span><br><span class="line">     * http://cache1.arcgisonline.cn</span><br><span class="line">     * http://map.geoq.cn</span><br><span class="line">     * vec：标准彩色地图</span><br><span class="line">     * gray、blue、warm</span><br><span class="line">     * line 中国轮廓图</span><br><span class="line">     * china 中国轮廓图+标注</span><br><span class="line">     * Hydro 水系</span><br><span class="line">     * green 植被</span><br><span class="line">     */</span><br><span class="line">    &quot;geoq-vec&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineCommunity/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-gray&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetGray/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-blue&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-warm&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-line&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/SimpleFeature/ChinaBoundaryLine/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-china&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/administrative_division_boundaryandlabel/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-Hydro&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/WorldHydroMap/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-green&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/vegetation/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    /***</span><br><span class="line">     * Google</span><br><span class="line">     * m 街道</span><br><span class="line">     * s 影像</span><br><span class="line">     */</span><br><span class="line">    &quot;google-vec&quot;: &quot;http://www.google.cn/maps/vt?lyrs=m@189&amp;gl=cn&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;google-img&quot;: &quot;http://www.google.cn/maps/vt?lyrs=s@189&amp;gl=cn&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-天地图"><a href="#GIS底图－－-天地图" class="headerlink" title="GIS底图－－ 天地图"></a>GIS底图－－ 天地图</h4><p>// //<a href="http://www.arcgisonline.cn/arcgis/home/webmap/viewer.html">http://www.arcgisonline.cn/arcgis/home/webmap/viewer.html</a> 地图可参考这个链接<br>// 影像地图（球面墨卡托投影）<br>// 天地图-影像注记（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/cia_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cia&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/cia_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cia&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-影像地图（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>//<br>// 矢量地图（球面墨卡托投影）<br>// 天地图-矢量注记（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-矢量地图（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>//<br>// 天地图-矢量（含注记）（球面墨卡托投影）<br>// 天地图-矢量地图（球面墨卡托投影）<br>// <a href="http://t{0-7}.tianditu.com/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1550&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb">http://t{0-7}.tianditu.com/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1550&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-矢量注记（球面墨卡托投影）<br>// <a href="http://t{0-7}.tianditu.com/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1551&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb">http://t{0-7}.tianditu.com/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1551&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//天地图［可用］［无需纠偏］</span><br><span class="line">var tian_di_tuMapLayer = new ol.layer.Tile(&#123;</span><br><span class="line">    title:&#x27;天地图卫星影像&#x27;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url:&#x27;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=img_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图路网 (和注记一起使用)［可用］［无需纠偏］</span><br><span class="line">var tian_di_tu_road_layer = new ol.layer.Tile(&#123;</span><br><span class="line">    title: &quot;天地图路网&quot;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url: &quot;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=vec_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图注记</span><br><span class="line">var tian_di_tu_annotation = new ol.layer.Tile(&#123;</span><br><span class="line">    title: &quot;天地图文字标注&quot;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url: &#x27;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=cva_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图 ［无需纠偏］</span><br><span class="line">var arcgisLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  title:&#x27;天地图卫星影像&#x27;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;1-7&#125;.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">var arcgis2Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  title: &quot;天地图矢量地图&quot;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;0-7&#125;.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">var arcgis3Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  title:&#x27;天地图-矢量地图&#x27;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;0-7&#125;.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-高德地图"><a href="#GIS底图－－-高德地图" class="headerlink" title="GIS底图－－ 高德地图"></a>GIS底图－－ 高德地图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//高德矢量图［可用］ 需要纠偏</span><br><span class="line">var gaodeMapLayer = new ol.layer.Tile(&#123;</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url:&#x27;https://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;style=7&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-捷泰地图"><a href="#GIS底图－－-捷泰地图" class="headerlink" title="GIS底图－－ 捷泰地图"></a>GIS底图－－ 捷泰地图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//arcgis 矢量图［可用］ 需要纠偏</span><br><span class="line">var backLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineCommunity/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//捷泰地图(灰) ［需要纠偏］</span><br><span class="line">var geoq2Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://cache1.arcgisonline.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//捷泰地图（深蓝） ［需要纠偏］</span><br><span class="line">var geoqLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="地理空间数据格式"><a href="#地理空间数据格式" class="headerlink" title="地理空间数据格式"></a>地理空间数据格式</h3><p><a href="http://www.voidcn.com/article/p-spkzwblm-bpe.html">OGC简单要素标准（WKT/WKB）</a><br><a href="https://www.osgeo.cn/pygis/others-geojson.html">Python下面其他开源GIS库的使用(GeoJson)</a><br><a href="https://www.jianshu.com/p/852d7ad081b3">GEOJSON标准格式学习</a><br><a href="https://www.jianshu.com/p/d78fff321005">GeoJSON与WKT、WKB字符串</a></p><p>数据格式类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POINT(6 10)</span><br><span class="line">LINESTRING(3 4,10 50,20 25)</span><br><span class="line">POLYGON((1 1,5 1,5 5,1 5,1 1),(2 2,2 3,3 3,3 2,2 2))</span><br><span class="line">MULTIPOINT(3.5 5.6, 4.8 10.5)</span><br><span class="line">MULTILINESTRING((3 4,10 50,20 25),(-5 -8,-10 -8,-15 -4))</span><br><span class="line">MULTIPOLYGON(((1 1,5 1,5 5,1 5,1 1),(2 2,2 3,3 3,3 2,2 2)),((6 3,9 2,9 4,6 3)))</span><br><span class="line">GEOMETRYCOLLECTION(POINT(4 6),LINESTRING(4 6,7 10))</span><br><span class="line">POINT ZM (1 1 5 60)</span><br><span class="line">POINT M (1 1 80)</span><br><span class="line">POINT EMPTY</span><br><span class="line">MULTIPOLYGON EMPTY</span><br></pre></td></tr></table></figure><p>关于坐标系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">坐标系：</span><br><span class="line"> 3857 google</span><br><span class="line"> 4326 WGS-84：是国际标准，GPS坐标（Google Earth使用、或者GPS模块）</span><br><span class="line"> 2437 GCJ-02：中国坐标偏移标准，Google Map、高德、腾讯使用</span><br><span class="line"> BD-09：百度坐标偏移标准，Baidu Map使用</span><br><span class="line">坐标系转换</span><br><span class="line"> &#x27;EPSG:4326&#x27; - 经纬度坐标-WGS84</span><br><span class="line"> &#x27;EPSG:3857&#x27; - xy坐标-web墨卡托</span><br><span class="line">openlayers 默认的坐标系为 EPSG:3857</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wangweigang689/article/details/105778722">https://blog.csdn.net/wangweigang689/article/details/105778722</a></p><p>行政区划代码，地区 <a href="https://www.likecs.com/show-246916.html">https://www.likecs.com/show-246916.html</a></p><h3 id="GeoTools-amp-openlayers"><a href="#GeoTools-amp-openlayers" class="headerlink" title="GeoTools &amp; openlayers"></a>GeoTools &amp; openlayers</h3><p><a href="https://segmentfault.com/a/1190000020297846">Openlayers API整理</a><br><a href="https://openlayers.org/">openlayer</a><br><a href="http://docs.geotools.org/latest/userguide/library/jts/index.html">GeoTools</a><br><a href="http://docs.geotools.org/stable/userguide/">Geotools user guide</a><br><a href="https://www.cnblogs.com/qingtian-jlj/p/12988219.html">WKT(Well-known text)是开放地理空间联盟OGC（Open GIS Consortium ）制定的一种文本标记语言，用于表示矢量几何对象、空间参照系统及空间参照系统之间的转换</a></p><h3 id="分布式架构优化"><a href="#分布式架构优化" class="headerlink" title="分布式架构优化"></a>分布式架构优化</h3><p>分布式框架<br>    Dubbo<br>    shardingsphere<br>    Netty<br>分布式消息中间间<br>    Rabbitmq<br>    RocketMq<br>    kafka<br>分布式存储中间件<br>    Redis<br>    MongoDB<br>    FastDFS<br>    Elasticserch</p><p><a href="https://www.bilibili.com/video/BV1cL411b77R">B站最全面分布式面试100道（涵盖所有分布式核心面试知识点）</a><br><a href="https://www.bilibili.com/video/BV1aJ411Y73e">分布式架构学习视频全集|图灵周瑜 </a><br><a href="https://www.bilibili.com/video/BV1Hy4y117op">分布式架构全套教程（700分钟干货精讲）</a><br><a href="https://www.bilibili.com/video/BV1tq4y1D7Kb">超全面深入讲解Java虚拟机 </a><br><a href="https://www.bilibili.com/video/BV1gh411z7kJ">分布式文件系统FastDFS入门到实战 </a><br><a href="https://www.bilibili.com/video/BV1nb4y1974r">Tomcat与Nginx负载均衡底层原理分析 </a></p><p><a href="https://www.cnblogs.com/FlyAway2013/p/11201250.html">Nacos 集群部署 </a><br><a href="https://www.cnblogs.com/yuuje/p/11005992.html">nginx如何配置负载均衡</a></p><h3 id="大数据分布式架构"><a href="#大数据分布式架构" class="headerlink" title="大数据分布式架构"></a>大数据分布式架构</h3><p><a href="https://cloud.tencent.com/developer/article/1881291">软件架构设计分层模型和构图思考</a><br><a href="https://cloud.tencent.com/developer/article/1049174">中国联通大数据能力开放平台容器化实践</a><br><a href="https://cloud.tencent.com/developer/article/1540779">运维产品的能力闭环体系</a><br><a href="https://cloud.tencent.com/developer/article/1897347">研发平台演进：从工具链到开放平台</a><br><a href="https://cloud.tencent.com/developer/article/1702031">业务系统组件化开发概述和技术架构设计</a></p><p><a href="https://cloud.tencent.com/developer/article/1832221">产品高阶能力：架构图的设计与画法</a><br><a href="https://cloud.tencent.com/developer/article/1518589">怎样成为一个优秀的架构师？</a><br><a href="https://cloud.tencent.com/developer/article/1533354">直击架构本质：优秀架构师必须掌握的几种架构思维</a><br><a href="https://cloud.tencent.com/developer/article/1561345">系统化服务构建-软件工程分层</a></p><h3 id="贷款材料"><a href="#贷款材料" class="headerlink" title="贷款材料"></a>贷款材料</h3><p>贷款额度计算材料（预审材料）：<br>夫妻双方身份证<br>征信证明<br>户口本<br>异地缴存证明</p><p>公积金贷款需要材料：<br>夫妻双方身份证 原件、复印件一份<br>户口本  原件、复印件一份<br>结婚证 原件及复印件一份<br>夫妻双方（一个月内）征信报告<br>售房单位网签备案的商品房买卖合同<br>售房单位出具的首付款的发票 原件及复印件一份<br>银行卡（开发商要求的汇款银行的） 原件及复印件一份<br>异地贷款缴存使用证明</p><h3 id="CSS-书写规范"><a href="#CSS-书写规范" class="headerlink" title="CSS 书写规范"></a>CSS 书写规范</h3><p><a href="https://www.cnblogs.com/xuepei/p/8961809.html">CSS书写规范、顺序</a></p><h3 id="javaList进行求和、分组、提取对象单个属性列表"><a href="#javaList进行求和、分组、提取对象单个属性列表" class="headerlink" title="javaList进行求和、分组、提取对象单个属性列表"></a>javaList进行求和、分组、提取对象单个属性列表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 分组</span><br><span class="line"></span><br><span class="line">Map&lt;String, List&lt;User&gt;&gt; collect = details.stream().collect(Collectors.groupingBy(User::getCustomerId));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 单列求和</span><br><span class="line"><span class="keyword">int</span> totalValue = details.stream().mapToInt(User::getSmsFee).sum();</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 提取单列数据集合</span><br><span class="line">List&lt;Integer&gt; ids = details.stream().map(User::getId).collect(Collectors.toList());</span><br><span class="line">Set&lt;String&gt; accounts = details.stream().map(User::getAccount).collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 按条件过滤</span><br><span class="line"><span class="comment">//按照条件过滤</span></span><br><span class="line">List&lt;User&gt; collect = list.stream().filter(u -&gt; <span class="string">&quot;北京&quot;</span>.equals(u.getAddr())).collect(Collectors.toList())</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>两个集合比较</span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤符合某个集合的数据（为了比对效率，accounts不能是list，需要使用set集合）</span></span><br><span class="line">List&lt;ExamData&gt; existList = uniqueList.stream().filter(t-&gt;accounts.contains(t.getAccount())).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 去重</span><br><span class="line"><span class="comment">//按单个属性去重</span></span><br><span class="line">List&lt;InstallOrder&gt; unique = installOrderList.stream().collect(</span><br><span class="line">                    Collectors.collectingAndThen(Collectors.toCollection(()-&gt;<span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.comparing(InstallOrder::getOrderCode))),ArrayList::<span class="keyword">new</span>));</span><br><span class="line">List&lt;ExamData&gt; uniqueList = data.stream().distinct().collect(Collectors.toList()); <span class="comment">//这种写法需要重写ExamData中的hasCode和equals方法</span></span><br><span class="line"><span class="comment">//ExamData hasCode和equals重写</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(<span class="keyword">final</span> Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> ExamData detail = (ExamData) obj;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == detail) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.account.equals(detail.account));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hashno = <span class="number">7</span>;</span><br><span class="line">    hashno = <span class="number">13</span> * hashno + (account == <span class="keyword">null</span> ? <span class="number">0</span> : account.hashCode());</span><br><span class="line">    <span class="keyword">return</span> hashno;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mybatis-使用hikari-驱动读取全量数据"><a href="#mybatis-使用hikari-驱动读取全量数据" class="headerlink" title="mybatis 使用hikari 驱动读取全量数据"></a>mybatis 使用hikari 驱动读取全量数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Transactional Cursor mybatis游标方式必须设置事务否则执行报错。</span></span><br><span class="line"><span class="comment">//2，druid 连接池不支持 mybatis 游标方式。</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;ExamData&gt; <span class="title">getExamData</span><span class="params">(String cityName, String opMonth)</span> </span>&#123;</span><br><span class="line">    List&lt;ExamData&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">try</span> (Cursor&lt;ExamData&gt; cursor = deatilMapper.findByCity4Cursor(cityName, opMonth)) &#123;</span><br><span class="line">        cursor.forEach(foo -&gt; &#123;list.add(foo); &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Select(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;select &quot; +</span></span><br><span class="line"><span class="meta">        &quot;   id id,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   op_month opMonth,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   city_name cityName,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   ... \n&quot; +</span></span><br><span class="line"><span class="meta">        &quot; from ZS_EXAM_DETAIL &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;where&gt; &quot; +</span></span><br><span class="line"><span class="meta">        &quot;   OP_MONTH=#&#123;opMonth&#125; and city_name=#&#123;cityName&#125;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/where&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line"><span class="meta">@Options(fetchSize = 1000)</span></span><br><span class="line"><span class="function">Cursor&lt;ExamData&gt; <span class="title">findByCity4Cursor</span><span class="params">(<span class="meta">@Param(&quot;cityName&quot;)</span> String cityName,<span class="meta">@Param(&quot;opMonth&quot;)</span> String opMonth)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="Arduino资料"><a href="#Arduino资料" class="headerlink" title="Arduino资料"></a>Arduino资料</h3><p><a href="https://www.arduino.cn/thread-1066-1-1.html">https://www.arduino.cn/thread-1066-1-1.html</a></p><h3 id="在线文档"><a href="#在线文档" class="headerlink" title="在线文档"></a>在线文档</h3><p><a href="https://docs.oracle.com/en/java/javase/11/">java11文档</a><br><a href="https://www.mklab.cn/api/jdk/11/cn">java11中文</a><br><a href="https://www.apiref.com/java11-zh/index.html">java11中文-备份</a><br><a href="https://docs.oracle.com/en/java/javase/11/docs/api/">java11英文</a></p><p><a href="https://www.mklab.cn/api/jdk/8/cn">java8中文</a><br><a href="https://www.matools.com/api/java8">java8中文2</a><br><a href="https://docs.oracle.com/javase/8/docs/api/">java8英文</a></p><p><a href="http://www.redis.cn/documentation.html">Redis中文1</a><br><a href="https://www.redis.net.cn/tutorial/3501.html">Redis中文2</a></p><p><a href="https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/reference/htmlsingle">spring-boot</a><br><a href="https://www.apiref.com/spring-boot-zh/">spring-boot中文</a></p><p><a href="https://www.springcloud.cc/spring-cloud-brixton.html">Spring Cloud中文</a><br><a href="https://docs.spring.io/spring-cloud/docs/Hoxton.SR12/reference/html/">Spring Cloud Hoxton.SR12(springboot 2.3.12.RELEASE)</a></p><p><a href="https://www.apiref.com/kubernetes-zh/index.html">Kubernetes(K8S)中文文档_Kubernetes中文社区</a><br><a href="https://www.docker.org.cn/book/docker/what-is-docker-16.html">docker入门教程</a><br><a href="https://www.runoob.com/docker/docker-tutorial.html">docker教程</a><br><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">Elasticsearch: 权威指南</a></p><p><a href="https://openlayers.org/en/latest/apidoc/">openlayers文档</a><br><a href="http://docs.geotools.org/stable/userguide/index.html">geotools文档</a><br><a href="https://docs.geotools.org/stable/javadocs/">geotools api</a><br><a href="http://locationtech.github.io/jts/javadoc/index.html">JTS api</a></p><p><a href="https://www.cnblogs.com/xiaxiaolu/p/13514915.html">聊聊常见的服务(接口)认证授权</a><br><a href="https://www.cnblogs.com/joy99/p/10941543.html">Spring AOP——Spring 中面向切面编程</a><br><a href="https://blog.csdn.net/qq_38496561/article/details/105945386">Spring Boot Admin+Nacos从入门到上线</a><br><a href="https://www.jianshu.com/p/05ee63c5b932">Nacos整合Spring Boot Admin</a><br><a href="http://www.uml.org.cn/wfw/2020041312.asp">微服务环境搭建</a></p><h3 id="RSIC-V"><a href="#RSIC-V" class="headerlink" title="RSIC-V"></a>RSIC-V</h3><p><a href="https://gitee.com/liangkangnan/tinyriscv#https://liangkangnan.gitee.io/2020/04/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99RISC-V%E5%A4%84%E7%90%86%E5%99%A8/">从零开始写RISC-V处理器</a><br><a href="">Verilog HDL</a></p><h3 id="springboot-cloud-示例"><a href="#springboot-cloud-示例" class="headerlink" title="springboot cloud 示例"></a>springboot cloud 示例</h3><p><a href="https://gitee.com/matevip">MateCloud微服</a></p><h3 id="计算机类书目"><a href="#计算机类书目" class="headerlink" title="计算机类书目"></a>计算机类书目</h3><p>1.计算机科学概论</p><p>计算机科学概论<br>计算机系统概论(2016/11/27)<br>计算机系统要素(2016/11/27)</p><p>2.计算机数学基础</p><p>高等数学线性代数<br>概率论与数理统计<br>离散数学及其应用<br>离散数学教程(北大版)<br>什么是数学<br>具体数学：计算机科学基础</p><p>3.C语言</p><p>C primer plusThe C programming language<br>C和指针<br>C专家教程<br>C陷阱与缺陷<br>c语言解惑<br>C标准库<br>你必须知道的495个C语言问题</p><p>4.算法与数据结构</p><p>数据结构(清华版)数据结构与算法分析—C语言描述<br>C算法(第一卷:基础、数据结构、排序和搜索)<br>C算法(第二卷 图算法)<br>编程珠玑<br>编程珠玑II(More programming Pearls)<br>算法概论 2014-2-8</p><p>算法第4版红皮书(2016/11/27)</p><p>算法导论计算机程序设计艺术卷1<br>计算机程序设计艺术卷2<br>计算机程序设计艺术卷3</p><p>5.电子技术基础</p><p>模拟电子技术(童诗白版)<br>数字逻辑与数字集成电路(清华版)</p><p>6.汇编语言</p><p>汇编语言(王爽版)80X86汇编语言程序设计教程<br>Intel汇编语言程序设计<br>IBM PC汇编语言程序设计(国外版)<br>高级汇编语言程序设计<br>保护方式下的80386及其编程<br>黑客反汇编揭秘<br>Windows.环境下32位汇编语言程序设计(第2版)<br>汇编语言程序设计+基于ARM体系结构</p><p>7.计算机硬件原理</p><p>计算机组成-结构化方法微机原理与接口技术(陈光军版)<br>计算机体系结构(张晨曦版)<br>计算机组成与设计硬件/软件接口<br>Intel微处理器结构、编程与接口<br>计算机体系结构(量化研究方法)<br>编程卓越之道卷1<br>编程卓越之道卷2<br>深入理解计算机系统<br>编码的奥秘</p><p>8.数据库系统原理</p><p>数据库系统概念数据库系统导论<br>数据库系统实现</p><p>9.编译原理</p><p>编译原理(清华第2版)编译原理及实践<br>编译原理:原则,技术和工具<br>现代编译原理-C语言描述<br>高级编译器设计与实现</p><p>10.操作系统原理</p><p>操作系统概念现代操作系统<br>链接器和加载器<br>程序员的自我修养:链接、装载与库<br>自己动手写操作系统<br>操作系统设计与实现</p><p>11.计算机网络</p><p>计算机网络(Computer Networks)TCP-IP详解卷1<br>TCP-IP详解卷2<br>TCP-IP详解卷3<br>用TCP/IP进行网际互联(第一卷):原理、协议与结构<br>用TCP/IP进行网际互联第二卷：设计、实现与内核(第三版)<br>用TCP/IP 进行网际互联第三卷:客户-服务器编程与应用</p><p>12.软件工程和面向对象程序设计</p><p>C++编程思想卷<br>java编程思想<br>软件工程(Software.Engineering)<br>软件工程：实践者的研究方法<br>深入浅出面向对象分析与设计<br>head first设计模式<br>道法自然:面向对象实践指南<br>面向对象分析与设计<br>敏捷软件开发：原则、模式与实践<br>设计模式:可复用面向对象软件的基础<br>测试驱动开发<br>重构—改善既有代码的设计<br>代码大全<br>程序设计实践<br>程序员修炼之道：从小工到专家<br>卓有成效的程序员<br>代码之美<br>人月神话<br>计算机程序的构造和解释<br>观止-微软创建NT和未来的夺命狂奔<br>代码优化：有效使用内存[美]克里斯·卡巴斯基<br>编程高手箴言(梁肇新)<br>游戏之旅-我的编程感悟(云风)<br>企业应用架构模式</p><p>修改代码的艺术</p><p>xUnit.Test.Patterns.Refactoring.Test.Code</p><p>13.windows编程基础</p><p>Windows操作系统原理Inside Windows 2000<br>深入解析Windows操作系统<br>天书夜读：从汇编语言到Windows内核编程<br>windows程序设计<br>WINDOWS核心编程</p><p>14.linux/unix编程基础</p><p>鸟哥的Linux私房菜:基础学习篇鸟哥的Linux私房菜:服务器架设篇<br>linux程序设计<br>UNIX环境高级编程<br>Unix网络编程卷1<br>UNIX网络编程卷2<br>UNIX编程艺术<br>UNIX Shell范例精解<br>The Linux Programming Interface - A Linux and UNIX System Programming Handbook</p><p>15.Linux/unix内核源代码和驱动程序</p><p>Linux内核设计与实现LINUX内核源代码情景分析<br>深入理解LINUX内核<br>Linux内核完全注释<br>Linux设备驱动程序<br>深入Linux设备驱动程序内核机制<br>深入Linux内核架构<br>精通Linux设备驱动程序开发<br>Linux设备驱动开发详解</p><p>16.C++语言</p><p>C++编程思想2Essential C++<br>C++ primer<br>C++程序设计语言<br>C++语言的设计和演化<br>Accelerated C++<br>Effective C++<br>More Effective C++<br>Exceptional C++<br>More Exceptional C++<br>C++设计新思维<br>深度探索C++对象模型<br>C++沉思录<br>C++ Templates: The Complete Guide<br>C++ FAQs</p><p>17.标准库STL使用<br>C++标准程序库Effective STL<br>泛型编程与STL<br>18.STL源代码<br>STL源码剖析</p><p>19.java语言<br>java编程思想Java编程规范(The Java Language Specification)<br>Beginning Java(C#) Objects从概念到代码<br>effective java<br>Java解惑<br>Java性能优化权威指南<br>深入理解Java虚拟机<br>Java并发编程实践</p><p>20.图形学/分布式/机器学习<br>计算机图形学(第三版)<br>大数据时代<br>多处理器编程的艺术<br>冈萨雷斯数字图像处理(</p><p>（1）深入理解计算机系统(原书第3版).pdf<br>（2）计算机科学导论(第2版).pdf<br>（3）计算机科学概论(原书第5版).pdf</p><p>（4）C程序设计语言(第2版 新版).pdf<br>（9）C陷阱与缺陷(第2版)-人民邮电出版社.pdf<br>（13）More Effective C++.pdf<br>（14）C++编程思想(两卷合订本).pdf<br>（15）C++标准程序库(中文版).pdf<br>（16）Exceptional C++ Style中文版.pdf<br>（17）More Exceptional C++中文版.pdf</p><p>（18）Head First Java(第2版)中文版.pdf<br>（19）Java编程思想(第4版).pdf<br>（20）Java核心技术 卷1 基础知识(第10版).pdf<br>（21）Effective Java中文版(原书第3版).pdf</p><p>（22）Python学习手册(第4版).pdf<br>（23）笨办法 学Python(第4版).pdf<br>（24）Python核心编程(第3版)中文版.pdf<br>（26）流畅的Python.pdf</p><p>（27）算法导论(原书第3版).pdf<br>（28）计算机程序设计艺术 卷1：基本算法.pdf<br>（28）计算机程序设计艺术 卷2：半数值算法.pdf<br>（29）计算机程序设计艺术 卷3：排序与查找.pdf<br>（30）算法(第4版)中文版.pdf<br>（31）数据结构与算法分析 C语言描述(原书第2版).pdf<br>（32）算法竞赛入门经典(第2版).pdf</p><p>（33）编译原理(龙书)中文版.pdf<br>（34）现代编译原理 C语言描述.pdf<br>（35）高级编译器设计与实现(鲸书)中文版.pdf</p><p>（36）计算机网络 Andrew S.Tanenbaum(第四版).pdf<br>（37）计算机网络 自顶向下方法(英文第6版).pdf<br>（37）计算机网络 自顶向下方法(原书第6版).pdf<br>（37）计算机网络 自顶向下方法(中文第4版).pdf<br>（38）TCP IP详解 卷1：协议(原书第2版).pdf<br>（39）TCP IP详解 卷2：实现.pdf</p><p>（41）现代操作系统(第三版).pdf<br>（42）鸟哥的Linux私房菜(第四版).pdf<br>（44）UNIX环境高级编程(第二版).pdf<br>（44）UNIX环境高级编程(第三版).pdf<br>（45）深入理解Linux内核(第三版)中文版.pdf</p><p>（46）Pattern Recognition and Machine Learning.pdf<br>（47）Machine Learning A Probabilistic Perspective.pdf<br>（48）机器学习 Tom M.Mitchell.pdf<br>（49）机器学习 周志华.pdf<br>（50）统计自然语言处理基础(中文版).pdf<br>（51）DEEP LEARNING 深度学习 花书.pdf</p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术积累 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统设计面试问题</title>
      <link href="/2020/09/15/dev/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/15/dev/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="系统设计面试问题–您应该知道的概念（转载）"><a href="#系统设计面试问题–您应该知道的概念（转载）" class="headerlink" title="系统设计面试问题–您应该知道的概念（转载）"></a>系统设计面试问题–您应该知道的概念（转载）</h2><p>转至 <a href="https://www.freecodecamp.org/news/systems-design-for-interviews">System Design Interview</a></p><p>您可能已经听说过“架构”或“系统设计”这两个术语。在开发人员工作面试中，尤其是在大型科技公司中，这些问题很多。</p><p>通过指导您基本的软件体系结构概念，本深入指南将帮助您为系统设计面试做准备。</p><p>这不是详尽的方法，因为系统设计是一个广泛的主题。但是，如果您是初级或中级开发人员，这应该为您奠定坚实的基础。</p><p>从那里，您可以深入挖掘其他资源。我在本文的底部列出了一些我最喜欢的资源。  </p><p>我已按主题将本指南分成几小部分，因此建议您将其添加为书签。我发现<a href="https://www.freecodecamp.org/news/use-spaced-repetition-with-anki-to-learn-to-code-faster-7c334d448c3c/">间隔学习和重复学习</a>是学习和保留信息的极有价值的工具。而且我已将本指南设计为易于分解的片段。</p><ol><li><a href="/#%E7%AC%AC1%E8%8A%82%EF%BC%9A%E7%BD%91%E7%BB%9C%E5%92%8C%E5%8D%8F%E8%AE%AE">第1节：网络和协议（IP，DNS，HTTP，TCP等）</a></li><li><a href="/#%E7%AC%AC2%E8%8A%82%EF%BC%9A%E5%AD%98%E5%82%A8%EF%BC%8C%E5%BB%B6%E8%BF%9F%E5%92%8C%E5%90%9E%E5%90%90%E9%87%8F">第2节：存储，延迟和吞吐量</a></li><li><a href="/%E7%AC%AC3%E8%8A%82%EF%BC%9A%E5%8F%AF%E7%94%A8%E6%80%A7">第3节：可用性</a></li><li><a href="/#%E7%AC%AC4%E8%8A%82%EF%BC%9A%E7%BC%93%E5%AD%98">第4节：缓存</a></li><li><a href="/#%E7%AC%AC5%E8%8A%82%EF%BC%9A%E4%BB%A3%E7%90%86">第5节：代理</a></li><li><a href="/#%E7%AC%AC6%E8%8A%82%EF%BC%9A%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1">第6节：负载平衡</a></li><li><a href="/#%E7%AC%AC7%E8%8A%82%EF%BC%9A%E4%B8%80%E8%87%B4%E7%9A%84%E5%93%88%E5%B8%8C">第7节：一致的哈希</a></li><li><a href="/#%E7%AC%AC8%E8%8A%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93">第8节：数据库</a></li><li><a href="/#%E7%AC%AC9%E8%8A%82%EF%BC%9A%E9%A2%86%E5%AF%BC%E4%BA%BA%E9%80%89%E4%B8%BE">第9节：领导人选举</a></li><li><a href="/#%E7%AC%AC10%E8%8A%82%EF%BC%9A%E8%BD%AE%E8%AF%A2%EF%BC%8C%E6%B5%81%E5%BC%8F%E4%BC%A0%E8%BE%93%EF%BC%8C%E5%A5%97%E6%8E%A5%E5%AD%97">第10节：轮询，流式传输，套接字</a></li><li><a href="/#%E7%AC%AC11%E8%8A%82%EF%BC%9A%E7%AB%AF%E7%82%B9%E4%BF%9D%E6%8A%A4">第11节：端点保护</a></li><li><a href="/#%E7%AC%AC12%E8%8A%82%EF%BC%9A%E6%B6%88%E6%81%AF%E5%92%8C%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85">第12节：消息和发布订阅</a></li><li><a href="/#%E7%AC%AC13%E8%8A%82%EF%BC%9A%E8%BE%83%E5%B0%8F%E7%9A%84%E5%BF%85%E9%9C%80%E5%93%81">第13节：较小的必需品</a></li></ol><p>让我们开始吧！</p><h2 id="第1节：网络和协议"><a href="#第1节：网络和协议" class="headerlink" title="第1节：网络和协议"></a>第1节：网络和协议</h2><p>“协议”是一个花哨的单词，在英语中的含义完全独立于计算机科学。这意味着可以管理某些事物的规章制度。一种“官方程序”或“必须完成某些事情的官方方式”。</p><p>为了使人们连接到彼此通信的机器和代码，他们需要一个可以在其上进行通信的网络。但是沟通也需要一些规则，结构和商定的程序。</p><p>因此，网络协议是控制机器和软件如何通过给定网络进行通信的协议。网络的一个例子是我们钟爱的万维网。</p><p>您可能听说过互联网时代最常见的网络协议-例如HTTP，TCP / IP等。让我们将它们分解为基本概念。</p><h3 id="IP-互联网协议"><a href="#IP-互联网协议" class="headerlink" title="IP-互联网协议"></a>IP-<a href="https://en.wikipedia.org/wiki/Internet_Protocol">互联网协议</a></h3><p>将此视为协议的基本层。这是基本协议，可指导我们如何实现几乎所有跨Internet网络的通信。</p><p>IP上的消息通常以“数据包”形式进行通信，这些信息包是一小束信息（2 ^ 16字节）。每个数据包都有一个由两个部分组成的<a href="https://en.wikipedia.org/wiki/IPv4#Packet_structure">基本结构</a>：标头和数据。</p><p>标头包含有关数据包及其数据的“元”数据。该元数据包括诸如源（数据包来自何处）的IP地址和目标IP地址（数据包的目的地）之类的信息。显然，这是能够将信息从一个点发送到另一点的基础-您需要“发件人”和“收件人”地址。  </p><p>和一个<a href="https://en.wikipedia.org/wiki/IP_address">IP地址</a>是分配给连接到每个设备的数值标签<a href="https://en.wikipedia.org/wiki/Computer_network">计算机网络</a>使用因特网协议进行通信。有公用和专用IP地址，当前有两个版本。新版本称为IPv6，由于IPv4的数字地址用完了，因此越来越多地被采用。</p><p>我们将在本文中考虑的其他协议是基于IP构建的，就像您最喜欢的软件语言在其之上构建的库和框架一样。  </p><h3 id="TCP-传输控制协议"><a href="#TCP-传输控制协议" class="headerlink" title="TCP-传输控制协议"></a>TCP-<a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">传输控制协议</a></h3><p>TCP是建立在IP之上的实用程序。正如您可以从阅读我的文章知道，我坚信你需要理解<em>为什么</em>东西才能被发明真正了解<em>什么</em>它。</p><p>创建TCP是为了解决IP问题。IP上的数据通常以多个数据包发送，因为每个数据包都非常小（2 ^ 16字节）。多个数据包可能导致（A）丢失或丢失的数据包，以及（B）无序的数据包，从而损坏传输的数据。TCP通过保证以<em>有序</em>方式<em>传输</em>数据包来解决这两种情况。  </p><p>数据包基于IP构建，除了IP报头之外，还具有称为TCP报头的报头。此TCP头包含有关数据包顺序和数据包数量等信息。这样可以确保在另一端可靠地接收数据。由于它建立在IP之上，因此通常称为TCP / IP。</p><p>TCP需要先在源和目标之间建立连接，然后再通过“握手”进行连接。此连接本身是使用数据包建立的，其中源将其通知目的地它想打开连接，并且目的地说“确定”，然后打开连接。</p><p>实际上，这就是服务器在端口“侦听”时发生的情况-在它开始侦听之前，先握手，然后打开连接（侦听开始）。类似地，一个向另一个发送一条消息，即将关闭连接，并结束连接。  </p><h3 id="HTTP-超文本传输协议"><a href="#HTTP-超文本传输协议" class="headerlink" title="HTTP-超文本传输协议"></a>HTTP-<a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">超文本传输协议</a></h3><p>HTTP是一种协议，是基于TCP / IP构建的抽象。它引入了一个非常重要的模式，称为请求-响应模式，专门用于客户端-服务器交互。  </p><p>客户端只是请求信息的机器或系统，而服务器是响应信息的机器或系统。浏览器是客户端，而网络服务器是服务器。当服务器从另一台服务器请求数据时，第一台服务器也是客户端，第二台服务器是服务器（我知道是重言式）。</p><p>因此，此请求-响应周期在HTTP下具有其自己的规则，这标准化了信息在Internet上的传输方式。  </p><p>在这种抽象级别上，我们通常不需要太担心IP和TCP。但是，在HTTP中，请求和响应也具有标头和正文，并且标头和正文包含开发人员可以设置的数据。</p><p>HTTP请求和响应可以被视为具有键-值对的消息，与JavaScript中的对象和Python中的字典非常相似，但不相同。</p><p>下图说明了HTTP请求和响应消息中的内容和键值对。</p><p><img src="https://www.freecodecamp.org/news/content/images/2020/03/image-44.png" alt="img">来源：<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages">https</a> : <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages">//developer.mozilla.org/en-US/docs/Web/HTTP/Messages</a></p><p>HTTP还带有一些“动词”或“方法”，这些命令是使您了解打算执行哪种操作的命令。例如，常见的HTTP方法是“ GET”，“ POST”，“ PUT”，“ DELETE”和“ PATCH”，但还有更多方法。在上图中，在起始行中查找HTTP动词。</p><h2 id="第2节：存储，延迟和吞吐量"><a href="#第2节：存储，延迟和吞吐量" class="headerlink" title="第2节：存储，延迟和吞吐量"></a>第2节：存储，延迟和吞吐量</h2><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><p>存储是关于保存信息的。您编程的任何应用程序，系统或服务都将需要存储和检索数据，而这是存储的两个基本目的。</p><p>但这不只是存储数据，还在于获取数据。我们使用数据库来实现这一目标。数据库是帮助我们存储和检索数据的软件层。</p><p>这两种主要的操作类型，即存储和检索，也分别称为“设置，获取”，“存储，获取”，“写入，读取”等。要与存储进行交互，您将需要遍历数据库，该数据库充当您执行这些基本操作的中介。</p><p>“存储”一词有时会使我们从物理角度上去思考它。如果我将自行车“存放”在棚子里，那么我下次打开棚子时可以期望它在那里。</p><p>但这并不总是在计算世界中发生。存储大致可以分为两种类型：“内存”存储和“磁盘”存储。  </p><p>在这两个磁盘中，磁盘存储趋向于更健壮和“永久”（不是真正的永久，因此我们经常使用“永久”存储一词）。磁盘存储是持久性存储。这意味着，当您将某些内容保存到磁盘，然后关闭电源或重新启动服务器时，该数据将“持续存在”。它不会丢失。</p><p>但是，如果将数据保留在“内存”中，那么通常在关闭或重新启动时这些数据会消失，否则会断电。  </p><p>您每天使用的计算机都具有这两种存储类型。您的硬盘是<br>“永久性”磁盘存储，而您的RAM是暂时性的内存存储。</p><p>在服务器上，如果您跟踪的数据仅在该服务器的会话期间有用，则将其保留在内存中是有意义的。与将内容写入持久数据库相比，这要快得多且成本更低。</p><p>例如，单个会话可能意味着用户登录并使用您的网站。他们注销后，您可能不需要保留在会话期间收集的部分数据。</p><p>但是，无论您想保留什么（例如购物车历史记录），您都将放入永久性磁盘存储中。这样，您可以在用户下次登录时访问该数据，他们将获得无缝的体验。</p><p>好的，这看起来非常简单和基本，而且确实如此。这是入门。存储会变得非常复杂。如果您看一下存储产品和解决方案的范围，您的头会旋转。</p><p>这是因为不同的用例需要不同的存储类型。它们为系统选择正确的存储类型的关键取决于许多因素，应用程序的需求以及用户如何与之交互。其他因素包括：</p><ul><li>数据的形状（结构），或</li><li>它需要什么样的可用性（哪种水平的停机时间适合您的存储），或者</li><li>可伸缩性（您需要多快读写数据，这些读写将同时（同时）或顺序进行）等，或</li><li>一致性-如果您使用分布式存储来防止停机，那么整个存储中的数据的一致性如何？</li></ul><p>这些问题和结论要求您仔细考虑您的取舍。一致性比速度重要吗？您需要该数据库每分钟执行数百万次操作还是仅用于每晚更新？稍后我将在各节中处理这些概念，所以如果您不知道它们是什么，请不要担心。</p><h3 id="潜伏"><a href="#潜伏" class="headerlink" title="潜伏"></a>潜伏</h3><p>当您开始在设计系统以支持应用程序的前端方面获得更多经验时，您会经常听到“延迟”和“吞吐量”这两个术语。它们对于您的应用程序和整个系统的体验和性能至关重要。通常倾向于以比预期更广泛的含义使用这些术语，或者超出上下文使用，但让我们对其进行修复。</p><p><strong>延迟</strong>只是持续时间的度量。什么时间 完成某件事或产生结果的动作的持续时间。例如：数据从系统中的一个位置移动到另一个位置。您可能会认为这是一个滞后，或者仅仅是完成操作所花费的时间。</p><p>最常见的延迟是“往返”网络请求-前端网站（客户端）向服务器发送查询并从服务器返回响应需要多长时间。  </p><p>加载网站时，您希望它尽可能快和流畅。换句话说，你需要<em>低</em>时延。快速查找意味着低延迟。因此，在元素数组中查找值比在哈希表中查找值要慢（延迟较高，因为您需要遍历数组中的每个元素以找到所需的元素）（延迟较低，因为您只需看一下即可）通过使用密钥在“固定”时间内更新数据（无需迭代）。  </p><p>同样，从内存中读取要比从磁盘中读取快得多（<a href="https://stackoverflow.com/questions/1371400/how-much-faster-is-the-memory-usually-than-the-disk">在此处</a>了解更多<em>）。</em>但是两者都有延迟，您的需求将决定您选择哪种数据的存储类型。</p><p>从这个意义上讲，延迟是速度的倒数。您想要更高的速度，并且想要更低的延迟。速度（尤其是通过HTTP进行的网络呼叫）的速度也取决于距离。因此，<a href="https://wondernetwork.com/pings/London">从伦敦到另一个城市的延迟时间</a>将受到与伦敦的距离的影响。</p><p>可以想象，您希望设计一个系统来避免对远程服务器执行ping操作，但是将内容存储在内存中对于您的系统可能不可行。这些折衷使系统设计变得复杂，具有挑战性并且非常有趣！</p><p>例如，显示新闻报道的网站可能更喜欢正常运行时间和可用性，而不是加载速度，而在线多人游戏可能需要可用性<em>和</em>超低延迟。这些要求将确定支持系统特殊要求的基础结构的设计和投资。</p><h3 id="通量"><a href="#通量" class="headerlink" title="通量"></a>通量</h3><p>这可以理解为机器或系统的最大容量。它通常在工厂中用于计算装配线在一小时或一天之内可以完成的工作量，或其他时间单位。</p><p>例如，一条装配线每小时可以装配20辆汽车，这就是它的吞吐量。在计算中，它是单位时间内可以传递的数据量。因此512 Mbps互联网连接是吞吐量的度量-每秒512 Mb（兆位）。</p><p>现在想象一下freeCodeCamp的Web服务器。如果它每秒接收一百万个请求，并且只能处理800,000个请求，则其吞吐量为每秒80万。您可能最终以比特而不是请求来衡量吞吐量，因此它将是每秒N位。</p><p>在此示例中，存在<em>瓶颈，</em>因为服务器每秒处理的位数不能超过N个，但是请求的位数不止于此。因此，瓶颈是对系统的约束。一个系统的速度只有<em>最慢的瓶颈。</em>  </p><p>如果一台服务器每秒可以处理100位，另一台服务器每秒可以处理120位，而第三台服务器只能处理50位，那么整个系统将以50bps的速度运行，因为这是一个限制-它可以保持其他服务器的速度在给定的系统中。</p><p>因此，增加瓶颈以外的任何地方的吞吐量可能都是浪费–您可能只想首先在<em>最低瓶颈</em>处增加<em>吞吐量</em>。  </p><p>您可以通过购买更多硬件（水平缩放）或增加现有硬件的容量和性能（垂直缩放）或其他几种方式来提高吞吐量。</p><p>有时，增加吞吐量可能是一个短期解决方案，因此，优秀的系统设计人员将考虑通过最佳方法来扩展给定系统的吞吐量，包括通过拆分请求（或任何其他形式的“负载”）并在各个请求之间进行分配要记住的关键点是什么是吞吐量，什么是约束或瓶颈以及它如何影响系统。</p><p>固定延迟和吞吐量不是孤立的，通用的解决方案，也不是相互关联的。它们对整个系统都有影响和考虑因素，因此了解整个系统以及随时间推移对系统提出的需求的性质非常重要。</p><h2 id="第三节：系统可用性"><a href="#第三节：系统可用性" class="headerlink" title="第三节：系统可用性"></a>第三节：系统可用性</h2><p>软件工程师旨在构建可靠的系统。可靠的系统是一个始终满足用户需求的系统，只要该用户想要满足该需求。这种可靠性的关键组成部分是可用性。</p><p>将可用性视为系统的弹性很有帮助。如果系统足够健壮，可以处理网络，数据库，服务器等中的故障，则通常可以将其视为容错系统-这使其成为可用系统。  </p><p>当然，从多种意义上讲，系统是其各个部分的总和，如果可用性与站点或应用程序的最终用户体验有关，则每个部分都必须<a href="https://en.wikipedia.org/wiki/High_availability">具有高</a>可用性。</p><h3 id="量化可用性"><a href="#量化可用性" class="headerlink" title="量化可用性"></a>量化可用性</h3><p>为了量化系统的可用性，我们计算在给定的时间范围内系统主要功能和操作可用的时间百分比（正常运行时间）。</p><p>最关键业务系统将需要具有近乎完美的可用性。在高峰期，支持高变化需求和尖峰和低谷负载的系统可能会以较低的可用性摆脱困境。</p><p>这完全取决于系统的用途和性质。但是总的来说，即使是那些需求较低但始终如一或隐含保证系统“按需”的事物，也需要具有高可用性。</p><p>想想一个备份图片的网站。您并非总是需要从中访问和检索数据-主要是用于存储内容。您仍然希望每次登录下载任何图片时，它始终可用。  </p><p>在黑色星期五或网络星期一销售这样的大型电子商务购物日中，可以理解另一种类型的可用性。在这些特定日子里，需求将激增，数以百万计的人将尝试同时访问交易。这将需要极其可靠和高可用性的系统设计来支持这些负载。</p><p>高可用性的商业原因只是因为站点上的任何停机都会导致站点亏损。此外，这可能对声誉确实不利，例如，该服务是<em>其他</em>企业用来提供服务的服务。如果AWS S3出现故障，包括Netflix在内的许多公司将遭受损失，这<em>不是很好</em>。</p><p>因此，正常运行时间对于成功至关重要。值得记住的是，商业可用性数字是根据年度可用性计算得出的，因此每年0.17％（即99.9％的可用性）的停机<a href="https://en.wikipedia.org/wiki/High_availability">时间为每年8.77个小时</a>！</p><p>因此，正常运行时间非常高。通常会看到99.99％的正常运行时间（每年52.6分钟的停机时间）。这就是为什么现在通常用“ nines”（正常运行时间保证中<a href="https://en.wikipedia.org/wiki/High_availability#%22Nines%22">的九位数）</a>来指称正常运行时间。  </p><p>在当今世界上，大规模或关键任务服务是不可接受的。这就是为什么现在“五个九”被认为是理想的可用性标准的原因，因为这相当于<em>每年</em>停机时间超过5分钟。</p><h3 id="服务水平协议"><a href="#服务水平协议" class="headerlink" title="服务水平协议"></a>服务水平协议</h3><p>为了使在线服务具有竞争力并满足市场期望，在线服务提供商通常会提供服务级别协议/保证。这些是一组保证的服务级别指标。99.999％的正常运行时间就是这样一种指标，通常作为高级订阅的一部分提供。</p><p>对于数据库和云服务提供商，如果客户对该产品的核心使用证明了该指标的合理性，则即使在试用或免费套餐上也可以提供此服务。</p><p>在许多情况下，如果未能满足SLA，则客户将获得信用证或其他形式的补偿，以弥补提供商未达到该保证的权利。举例来说，这里是<a href="https://cloud.google.com/maps-platform/terms/sla">Google针对Maps API的SLA。</a></p><p>因此，在设计系统时，SLA是整个商业和技术考虑因素的关键部分。特别重要的是要考虑可用性是否实际上是系统某个部分的关键要求，以及哪些部分需要高可用性。</p><h3 id="设计HA"><a href="#设计HA" class="headerlink" title="设计HA"></a>设计HA</h3><p>因此，在设计高可用性（HA）系统时，您需要减少或消除“单点故障”。单点故障是系统中的一个元素，是<em>唯一</em>可能导致不希望的可用性损失的元素。</p><p>您可以通过在系统中设计“冗余”来消除单点故障。冗余基本上是对对高可用性至关重要的元素进行1个或多个选择（即备份）。  </p><p>因此，如果您的应用需要用户进行身份验证才能使用它，并且只有一个身份验证服务和后端，并且该服务失败了，那么，由于那是单点故障，因此您的系统不再可用。通过拥有两个或多个可以处理身份验证的服务，您增加了冗余并消除了（或减少了）单点故障。</p><p>因此，您需要了解系统并将其分解为所有部分。找出哪些可能导致单点故障，哪些不能容忍这种故障，哪些部分可以容忍它们。由于工程HA需要权衡，并且其中一些权衡在时间，金钱和资源方面可能是昂贵的。</p><h2 id="第4节：缓存"><a href="#第4节：缓存" class="headerlink" title="第4节：缓存"></a>第4节：缓存</h2><p>正在缓存！这是提高系统性能的非常基础且易于理解的技术。因此，缓存有助于减少系统中的<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">“等待时间”</a>。</p><p>在我们的日常生活中，我们将缓存视为常识（大部分时间…）。如果我们住在超市的隔壁，我们仍然想购买一些基本物品并将其存放在冰箱和食物柜中。这是缓存。每当我们想要食物时，我们总是可以走出去，去隔壁并购买这些东西–但是，如果它在食品室或冰箱中，我们会减少制作食物的时间。那是缓存。</p><h3 id="常见的缓存方案"><a href="#常见的缓存方案" class="headerlink" title="常见的缓存方案"></a>常见的缓存方案</h3><p>同样，就软件而言，如果我们最终经常依赖某些数据，则可能需要缓存该数据，以便我们的应用程序执行得更快。</p><p>当由于发出网络请求的延迟而从内存而不是从<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">磁盘</a>检索数据更快时，通常会如此。实际上，许多网站都在<a href="https://www.cloudflare.com/learning/cdn/what-is-caching/">CDN</a>中缓存（尤其是内容不经常更改的情况），以便可以更快地将其提供给最终用户，并减少了后端服务器的负载。  </p><p>缓存可以帮助您解决的另一个问题是后端必须执行一些计算量大且耗时的工作。缓存将您的查找时间从线性O（N）时间转换为恒定O（1）时间的先前结果可能会非常有优势。</p><p>同样，如果您的服务器必须进行多个网络请求和API调用才能组成发送回请求者的数据，则缓存数据可以减少网络调用的次数，从而减少延迟。</p><p>如果您的系统具有客户端（前端），服务器和数据库（后端），则可以在客户端（例如浏览器存储），客户端与服务器（例如CDN）之间或服务器本身上插入缓存。这将减少对数据库的网络调用。  </p><p>因此，缓存可以在系统中的多个点或级别上发生，包括在硬件（CPU）级别上。</p><h3 id="处理陈旧数据"><a href="#处理陈旧数据" class="headerlink" title="处理陈旧数据"></a>处理陈旧数据</h3><p>您可能已经注意到，上面的示例对于“读取”操作是隐式方便的。写入操作在主要原则上并没有什么不同，但有以下补充注意事项：</p><ul><li>写操作需要保持缓存和数据库同步</li><li>这可能会增加复杂性，因为要执行更多的操作，并且需要仔细分析有关处理未同步或“过时”数据的新注意事项</li><li>可能需要实施新的设计原则来处理该同步-应该同步还是异步完成？如果异步，那么以什么间隔？同时，从何处获取数据？缓存需要多久刷新一次，等等。</li><li>数据“逐出”或更新和刷新数据，以使缓存的数据保持最新和最新状态。这些包括<a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Last_in_first_out_(LIFO)_or_First_in_last_out_(FILO)">LIFO</a>，<a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#First_in_first_out_(FIFO)">FIFO</a>，<a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)">LRU</a>和<a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Least-frequently_used_(LFU)">LFU之类的技术</a>。</li></ul><p>因此，让我们以一些概括性的，非约束性的结论作为结尾。通常，当用于存储静态或不经常更改的数据时，并且当更改的源可能是单个操作而不是用户生成的操作时，缓存效果最佳。  </p><p>在数据的一致性和新鲜度至关重要的情况下，缓存可能不是最佳的解决方案，除非系统中存在另一个可以有效刷新缓存的元素，这些间隔不会对应用程序的目的和用户体验产生不利影响。</p><h2 id="第5节：代理"><a href="#第5节：代理" class="headerlink" title="第5节：代理"></a>第5节：代理</h2><p>代理。什么？我们许多人都听说过代理服务器。我们可能已经在某些PC或Mac软件上看到了配置选项，这些选项讨论添加和配置代理服务器或“通过代理”访问。</p><p>因此，让我们了解一下相对简单，广泛使用且重要的技术。这是一个完全独立于计算机科学的英语单词，因此让我们从该<a href="https://www.merriam-webster.com/dictionary/proxy">定义</a>开始。</p><p><img src="https://www.freecodecamp.org/news/content/images/2020/03/Screen-Shot-2020-03-08-at-12.57.03-pm.png" alt="img">资料来源：<a href="https://www.merriam-webster.com/dictionary/proxy">https</a> : <a href="https://www.merriam-webster.com/dictionary/proxy">//www.merriam-webster.com/dictionary/proxy</a></p><p>现在，您可以将大部分内容从头脑中弹出，然后按住一个关键字：“替换”。  </p><p>在计算中，代理通常是服务器，并且它是充当客户端和另一台服务器之间的中间人的服务器。从字面上看，这是位于客户端和服务器之间的一些代码。这就是代理的症结所在。</p><p>如果您需要复习，或者不确定客户端和服务器的定义，则“客户端”是从另一个进程或计算机（“服务器”）请求数据的进程（代码）或计算机。当浏览器从后端服务器请求数据时，它是客户端。  </p><p>服务器为客户端提供服务，但也可以是客户端-从数据库检索数据时。然后，数据库是服务器，服务器是（数据库的）客户端，<em>也是</em>前端客户端（浏览器）的服务器。</p><p><img src="https://www.freecodecamp.org/news/content/images/2020/03/image-22.png" alt="img">来源：<a href="https://teoriadeisegnali.it/appint/html/altro/bgnet/clientserver.html#figure2">https</a>：<a href="https://teoriadeisegnali.it/appint/html/altro/bgnet/clientserver.html#figure2">//teoriadeisegnali.it/appint/html/altro/bgnet/clientserver.html#figure2</a></p><p>从上面可以看到，客户端-服务器关系是双向的。因此，客户端和服务器都是一回事。如果有一个中间人服务器接收到请求，然后将它们发送到另一个服务，然后将从另一个服务获得的响应转发回原始客户端，即代理服务器。</p><p>展望未来，我们将客户端称为客户端，将服务器称为服务器，将代理称为它们之间的事物。</p><p>因此，当客户端通过代理向服务器发送请求时，代理有时可能会掩盖客户端的身份-对于服务器，请求中通过的IP地址可能是代理而不是原始客户端。</p><p>对于那些访问网站或下载其他限制内容的人（例如从torrent网络或您所在国家/地区禁止的网站），您可能会认识到这种模式-这是建立VPN的原理。</p><p>在深入探讨之前，我想先介绍一下-通常使用的术语“代理”是指“转发”代理。转发代理是指代理在客户端与服务器之间的交互中代表客户端（代替客户端）进行操作的代理。</p><p>这有别于反向代理-反向代理代表服务器。在图中，它看起来是一样的-代理位于客户端和服务器之间，并且数据流是相同的客户端&lt;-&gt;代理&lt;-&gt;服务器。  </p><p>关键区别在于反向代理被设计为替代服务器。通常，客户甚至都不知道网络请求是通过代理路由的，并且代理将其传递给了预期的服务器（并对服务器的响应执行了相同的操作）。</p><p>因此，在正向代理中，服务器将不知道客户端的请求及其响应正在通过代理，而在反向代理中，客户端将不知道请求和响应是通过代理进行路由的。</p><p>代理感到有点偷偷摸摸:)</p><p>但是在系统设计中，特别是对于复杂系统，代理是有用的，反向代理是特别有用的。您的反向代理可以委派许多您不希望主服务器处理的任务-它可以是网守，筛选器，负载平衡器和全方位助手。</p><p>因此代理可能有用，但您可能不确定原因。同样，如果你读过我的其他的东西，你知道，我坚信你能正确地只了解事情的时候，你知道<em>为什么</em>他们的存在-知道<em>什么</em>，他们做的是不够的。  </p><p>我们已经谈到的VPN（用于转发代理）和负载平衡（反向代理服务器），但也有更多的例子<a href="https://www.quora.com/What-are-the-different-uses-of-proxy-servers">在这里</a>-我特别推荐克拉拉Clarkson的高度概括。</p><h2 id="第6节：负载平衡"><a href="#第6节：负载平衡" class="headerlink" title="第6节：负载平衡"></a>第6节：负载平衡</h2><p>如果您考虑一下负载和平衡这两个词，您将开始对它在计算领域的作用有一个直觉。当服务器同时接收到大量请求时，它可能会减慢速度（吞吐量降低，延迟增加）。在一个点之后，它甚至可能失败（没有可用性）。  </p><p>您可以赋予服务器更多的力量（垂直缩放），也可以添加更多服务器（水平缩放）。但是现在您必须弄清楚收入请求如何分配到各个服务器-哪些请求被路由到哪些服务器以及如何确保它们也不会过载？换句话说，如何平衡和分配请求负载？</p><p>输入负载均衡器。由于本文是对原理和概念的介绍，因此它们在必要时必须经过非常简化的解释。负载平衡器的工作是坐在客户端和服务器之间（但可以在其他位置插入它），并研究如何在多个服务器之间分配传入请求负载，以便最终用户（客户端）的体验始终快速，流畅和可靠。</p><p>因此，负载均衡器就像是引导流量的流量管理器。他们这样做是为了保持<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#system-availability">可用性</a>和<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">吞吐量</a>。</p><p>了解负载均衡器在系统架构中的插入位置后，您会发现负载均衡器可以被视为<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#proxies">反向代理</a>。但是负载均衡器也可以插入其他位置，例如在其他交换机之间，例如在服务器和数据库之间。</p><h3 id="平衡法-服务器选择策略"><a href="#平衡法-服务器选择策略" class="headerlink" title="平衡法-服务器选择策略"></a>平衡法-服务器选择策略</h3><p>那么，负载均衡器如何决定如何路由和分配请求流量？首先，每次添加服务器时，都需要让负载均衡器知道它还有一个候选者可以将流量路由到该负载均衡器。  </p><p>如果卸下服务器，则负载均衡器也需要知道这一点。该配置可确保负载均衡器知道其转到列表中有多少台服务器以及哪些服务器可用。甚至可以使负载平衡器随时了解每台服务器的负载级别，状态，可用性，当前任务等。</p><p>将负载均衡器配置为知道可以重定向到哪些服务器后，我们需要制定最佳路由策略，以确保在可用服务器之间进行适当的分配。  </p><p>一个简单的方法是让负载均衡器随机选择一个服务器，然后以这种方式定向每个传入的请求。但是正如您可以想象的那样，随机性可能会导致问题和“不平衡”的分配，其中某些服务器的负载要比其他服务器更多，这可能会对整个系统的性能产生负面影响。</p><h3 id="循环赛和加权循环赛"><a href="#循环赛和加权循环赛" class="headerlink" title="循环赛和加权循环赛"></a>循环赛和加权循环赛</h3><p>可以直观理解的另一种方法称为“循环”。这是许多人处理列表循环的方式。您从列表中的第一项开始，依次向下移动，当最后一项完成后，您将循环回到顶部，然后再次开始处理列表。</p><p>负载均衡器也可以做到这一点，只需按固定顺序遍历可用服务器即可。这样，负载就以一种易于理解和可预测的模式在服务器上平均分配。  </p><p>通过将某些服务“加权”于其他服务，可以使轮询变得更“花哨”。在正常的标准轮询中，每个服务器的权重相等（假设所有服务器的权重均为1）。但是，当您对服务器加权时，可以使某些服务器的权重较低（例如，如果它们的功能较弱，则为0.5），而其他服务器的权重可能更高，例如0.7或0.9甚至是1。</p><p>然后，将根据这些权重按比例分配总流量，并相应地将其分配给功率与请求量成比例的服务器。</p><h3 id="基于负载的服务器选择"><a href="#基于负载的服务器选择" class="headerlink" title="基于负载的服务器选择"></a>基于负载的服务器选择</h3><p>更复杂的负载均衡器可以在其go-to列表中计算出服务器的当前容量，性能和负载，并根据当前负载和计算动态分配，从而获得最高吞吐量，最低延迟等。通过监视每个服务器的性能并确定哪些服务器可以和不能处理新请求。  </p><h3 id="基于IP哈希的选择"><a href="#基于IP哈希的选择" class="headerlink" title="基于IP哈希的选择"></a>基于IP哈希的选择</h3><p>您可以将负载均衡器配置为对传入请求的IP地址进行<a href="https://www.cs.cmu.edu/~adamchik/15-121/lectures/Hashing/hashing.html">哈希</a>处理，并使用哈希值确定也由哪个服务器定向请求。如果我有5台服务器可用，则哈希函数将设计为返回五个哈希值之一，因此肯定会指定其中一台服务器来处理请求。</p><p>当您希望来自某个国家或地区的请求从最适合满足该地区内部需求的服务器获取数据时，或者在服务器缓存请求以便可以快速处理它们的情况下，基于IP哈希的路由可能非常有用。 。  </p><p>在后一种情况下，您要确保该请求发送到先前已缓存相同请求的服务器，因为这将提高处理和响应该请求的速度和性能。</p><p>如果每个服务器都维护独立的缓存，并且负载均衡器没有始终如一地向同一服务器发送相同的请求，则最终服务器将重新执行已经作为对另一个服务器的先前请求而完成的工作，并且您将失去优化能力与缓存数据一起使用。</p><h3 id="基于路径或服务的选择"><a href="#基于路径或服务的选择" class="headerlink" title="基于路径或服务的选择"></a>基于路径或服务的选择</h3><p>您还可以使负载均衡器根据请求的“路径”或所提供的功能或服务来路由请求。例如，如果您从在线花店购买鲜花，则可能会向一台服务器发送加载“特别花束”的请求，而向另一台服务器发送信用卡付款。</p><p>如果只有十分之一的访客实际购买了鲜花，那么您可以拥有一个较小的服务器来处理付款，而较大的服务器可以处理所有浏览流量。</p><h3 id="混合袋"><a href="#混合袋" class="headerlink" title="混合袋"></a>混合袋</h3><p>与所有事物一样，您可以达到更高和更详细的复杂程度。您可以有多个负载均衡器，每个负载均衡器都有不同的服务器选择策略！而且如果您的系统非常庞大且流量很高，那么您可能需要<em>负载均衡器作为负载均衡器…</em></p><p>最终，您需要向系统中添加组件，直到您的性能适应您的需求为止（您的需求可能看起来很平坦，或者随着时间的推移会缓慢上升，或者容易出现峰值！）。</p><h2 id="第7节：一致的哈希"><a href="#第7节：一致的哈希" class="headerlink" title="第7节：一致的哈希"></a>第7节：一致的哈希</h2><p>要理解的稍微棘手的概念之一是在负载平衡的上下文中进行哈希处理。因此它有自己的部分。</p><p>为了理解这一点，请首先了解<a href="https://www.cs.cmu.edu/~adamchik/15-121/lectures/Hashing/hashing.html">哈希在概念上是如何工作的</a>。TL; DR是哈希将输入转换为固定大小的值，通常是整数值（哈希）。  </p><p>好的哈希算法或函数的关键原则之一是函数必须是<a href="https://en.wikipedia.org/wiki/Hash_function#Deterministic">确定性的</a>，这是一种很好的说法，可以说相同的输入传递给函数时将生成相同的输出。因此，确定性的意思是-如果我传入字符串“ Code”（区分大小写）并且该函数生成哈希值11002，则每次我传入“ Code”时，它都必须生成“ 11002”作为整数。如果我输入“代码”，它将生成一个不同的数字（一致）。</p><p>有时，散列函数可以为多个输入生成相同的散列-这不是世界末日，并且有多种处理方法。实际上，唯一输入范围越多，可能性就越大。但是，当一个以上的输入确定性地生成相同的输出时，则称为“冲突”。</p><p>牢记这一点，让我们将其应用于路由和定向到服务器的请求。假设您有5台服务器来分配负载。一种易于理解的方法是对传入的请求进行哈希处理（可能按IP地址或某些客户端详细信息），然后为每个请求生成哈希。然后，将模运算符应用于该哈希，其中正确的操作数是服务器的数量。  </p><p>例如，这就是您的负载均衡器的伪代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">request#<span class="number">1</span> =&gt; hashes to <span class="number">34</span></span><br><span class="line">request#<span class="number">2</span> =&gt; hashes to <span class="number">23</span></span><br><span class="line">request#<span class="number">3</span> =&gt; hashes to <span class="number">30</span></span><br><span class="line">request#<span class="number">4</span> =&gt; hashes to <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You have 5 servers =&gt; [Server A, Server B ,Server C ,Server D ,Server E]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// so modulo 5 for each request...</span></span><br><span class="line"></span><br><span class="line">request#<span class="number">1</span> =&gt; hashes to <span class="number">34</span> =&gt; <span class="number">34</span> % <span class="number">5</span> = <span class="number">4</span> =&gt; send <span class="built_in">this</span> request to servers[<span class="number">4</span>] =&gt; Server E</span><br><span class="line"></span><br><span class="line">request#<span class="number">2</span> =&gt; hashes to <span class="number">23</span> =&gt; <span class="number">23</span> % <span class="number">5</span> = <span class="number">3</span> =&gt; send <span class="built_in">this</span> request to servers[<span class="number">3</span>] =&gt; Server D</span><br><span class="line"></span><br><span class="line">request#<span class="number">3</span> =&gt; hashes to <span class="number">30</span> =&gt; <span class="number">30</span> % <span class="number">5</span> = <span class="number">0</span> =&gt; send <span class="built_in">this</span> request to  servers[<span class="number">0</span>] =&gt; Server A</span><br><span class="line"></span><br><span class="line">request#<span class="number">4</span> =&gt; hashes to <span class="number">14</span> =&gt; <span class="number">14</span> % <span class="number">5</span> = <span class="number">4</span> =&gt; send <span class="built_in">this</span> request to servers[<span class="number">4</span>] =&gt; Server E</span><br></pre></td></tr></table></figure><p>如您所见，散列函数生成可能值的散布，并且当应用模运算符时，它将带出映射到服务器编号的较小范围的编号。</p><p>您肯定会获得映射到同一台服务器的不同请求，这很好，只要对所有服务器的总体分配具有“<a href="https://en.wikipedia.org/wiki/Hash_function#Uniformity">统一性</a>”即可。</p><h3 id="添加服务器和处理故障服务器"><a href="#添加服务器和处理故障服务器" class="headerlink" title="添加服务器和处理故障服务器"></a>添加服务器和处理故障服务器</h3><p>那么-如果我们要向其发送流量的服务器之一死了怎么办？哈希函数（请参阅上面的伪代码段）仍然认为有5台服务器，并且mod运算符生成的范围是0-4。但是，由于其中一台发生了故障，我们现在只有4台服务器，并且仍在向其发送流量。哎呀。</p><p>相反，我们可以添加第六台服务器，但是由于我们的mod运算符为5，因此永远<em>不会</em>获得任何流量，并且永远不会产生包含新添加的第六台服务器的数字。糟糕！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// Let&#x27;s add a 6th server</span><br><span class="line">servers =&gt; [Server A, Server B ,Server C ,Server D ,Server E, Server F]</span><br><span class="line"></span><br><span class="line">// let&#x27;s change the modulo operand to 6</span><br><span class="line">request#1 =&gt; hashes to 34 =&gt; 34 % 6 = 4 =&gt; send this request to servers[4] =&gt; Server E</span><br><span class="line"></span><br><span class="line">request#2 =&gt; hashes to 23 =&gt; 23 % 6 = 5 =&gt; send this request to servers[5] =&gt; Server F</span><br><span class="line"></span><br><span class="line">request#3 =&gt; hashes to 30 =&gt; 30 % 6 = 0 =&gt; send this request to  servers[0] =&gt; Server A</span><br><span class="line"></span><br><span class="line">request#4 =&gt; hashes to 14 =&gt; 14 % 6 = 2 =&gt; send this request to servers[2] =&gt; Server C</span><br></pre></td></tr></table></figure><p>我们注意到应用mod后的服务器号发生了变化（尽管在此示例中，请求号1和请求号3<em>均不</em>更改-但这仅是因为在这种特定情况下，该号才有效）。</p><p>实际上，结果是一半的请求（在其他示例中可能会更多！）现在全部路由到新服务器，并且我们失去了以前在服务器上缓存的数据的好处。  </p><p>例如，请求＃4曾经去到服务器E，但现在去了服务器C。与请求＃4坐在服务器E上有关的所有缓存数据都没有用，因为请求现在要去服务器C。您可以计算对于其中一台服务器死亡的地方，也存在类似的问题，但是mod函数不断向其发送请求。</p><p>在这个很小的系统中，声音听起来很小。但是在非常大规模的系统中，这是一个很差的结果。#SystemDesignFail。</p><p>显然，简单的哈希分配系统无法很好地扩展或处理故障。</p><h3 id="流行的解决方案-一致性哈希"><a href="#流行的解决方案-一致性哈希" class="headerlink" title="流行的解决方案-一致性哈希"></a>流行的解决方案-一致性哈希</h3><p>不幸的是，这是我觉得单词描述不够的部分。最好从视觉上理解一致性哈希。但是到目前为止，本文的目的是让您对问题有一个直观的认识，它是什么，它为什么会出现，以及基本解决方案中的缺点是什么。请牢记这一点。</p><p>正如我们所讨论的，朴素散列的关键问题在于，当（A）服务器发生故障时，流量仍会路由到该服务器，并且（B）添加新服务器时，分配可能会发生实质性变化，从而失去了以前的缓存。</p><p>深入研究一致的哈希时，需要牢记两个非常重要的事情：</p><ol><li>一致的哈希<em>不能消除问题</em>，尤其是B。但是它确实可以大大减少问题。刚开始时，您可能会想知道，一致性哈希有什么大不了，因为潜在的缺点仍然存在-是的，但程度要小得多，这本身对于大型系统来说是一项有价值的改进。</li><li>一致的哈希将哈希函数应用于传入的请求<em>和服务器</em>。因此，最终的输出落入值的设定范围（连续）。这个细节非常重要。</li></ol><p>在观看以下推荐的视频时，请牢记这些内容，这些视频说明了哈希的一致性，否则，其好处可能并不明显。</p><p>我强烈推荐该视频，因为它嵌入了这些原则，而又不会给您带来太多细节。</p><iframe width="480" height="270" src="https://www.youtube.com/embed/tHEyzVbl4bg?start=370&amp;feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="box-sizing: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-family: inherit; font-size: 22px; vertical-align: middle;"></iframe>汉娜·巴顿（Hannah Barton）简介<p>如果您在真正理解此策略为何对负载均衡很重要时遇到一些麻烦，建议您稍作休息，然后返回<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#load-balancing">负载均衡部分</a>，然后再次阅读此内容。除非您在工作中直接遇到问题，否则所有这些都会变得非常抽象，这并不罕见！</p><h2 id="第8节：数据库"><a href="#第8节：数据库" class="headerlink" title="第8节：数据库"></a>第8节：数据库</h2><p>我们简要地<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">考虑</a>了为满足许多不同用例而设计的不同类型的存储解决方案（数据库），并且其中一些更适合于某些任务。但是，从很高的层次上讲，数据库可以分为两种类型：关系型和非关系型。  </p><h3 id="关系数据库"><a href="#关系数据库" class="headerlink" title="关系数据库"></a>关系数据库</h3><p>一个<strong>关系数据库</strong>是一个已严格执行存储在数据库中的东西之间的关系。通常，通过要求数据库将每个此类事物（称为“实体”）表示为结构化表-具有零或多个行（“记录”，“条目”）和一个或多个列（“属性”），使这些关系成为可能。 ，“字段”）。</p><p>通过在实体上强制采用这种结构，我们可以确保每个项目/条目/记录都有正确的数据。它使实体之间具有更好的一致性和紧密关系的能力。  </p><p>您可以在下表中记录“婴儿”（实体）数据的表格中看到此结构。表中的每个记录（“条目”）都有4个字段，代表与该婴儿有关的数据。这是经典的关系数据库结构（形式化的实体结构称为<a href="https://en.wikipedia.org/wiki/Database_schema">模式</a>）。</p><p><img src="https://www.freecodecamp.org/news/content/images/2020/03/image-46.png" alt="img">来源：<a href="https://web.stanford.edu/class/cs101/table-1-data.html">https</a> : <a href="https://web.stanford.edu/class/cs101/table-1-data.html">//web.stanford.edu/class/cs101/table-1-data.html</a></p><p>因此，了解关系数据库的关键特征是它们是高度结构化的，并且将结构强加给所有实体。通过确保添加到表的数据符合该结构来实施此结构。在其架构不允许的情况下，无法在表格中添加高度字段。</p><p>大多数关系数据库都支持一种称为SQL<a href="https://en.wikipedia.org/wiki/SQL">结构化查询语言</a>的数据库查询<a href="https://en.wikipedia.org/wiki/SQL">语言</a>。这是一种专门设计用于与结构化（关系）数据库的内容进行交互的语言。这两个概念紧密地结合在一起，以至于人们经常将关系数据库称为“ SQL数据库”（有时也称为“续集”数据库）。  </p><p>通常，人们认为SQL（关系）数据库比非关系数据库支持更复杂的查询（组合不同的字段，过滤器和条件）。数据库本身会处理这些查询并发送回匹配的结果。  </p><p>许多喜欢SQL数据库的人认为，如果没有该功能，则必须获取<em>所有</em>数据，然后让服务器或客户端将数据“<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">存储</a>”<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#storage-latency-throughput">在内存中，</a>并应用过滤条件-对于少量数据集，这是可以的但是对于具有数百万条记录和行的大型，复杂的数据集而言，这将严重影响性能。但是，情况并非总是如此，当我们了解NoSQL数据库时就会看到。</p><p>关系数据库的一个常见且广受欢迎的示例是<a href="https://en.wikipedia.org/wiki/PostgreSQL">PostgreSQL</a>（通常称为“ Postgres”）数据库。  </p><h3 id="酸"><a href="#酸" class="headerlink" title="酸"></a>酸</h3><p>ACID事务是描述良好关系数据库将支持的事务的一组功能。<a href="https://en.wikipedia.org/wiki/ACID">ACID =“原子，一致，隔离，耐用”</a>。事务是与数据库的交互，通常是读或写操作。</p><p><strong>原子性</strong>要求当一个事务包含多个操作时，数据库必须保证如果一个操作失败，则<em>整个</em>事务（所有操作）也会失败。它是“全有或全无”。这样，如果事务成功，则完成后您将知道所有子操作均已成功完成，并且如果操作失败，则您将知道随之进行的所有操作都将失败。  </p><p>例如，如果单个事务涉及读取两个表并写入三个表，那么如果这些单个操作中的任何一个失败，则整个事务都会失败。这意味着这些单独的操作都不应该完成。您甚至不希望3个写入事务中的1个起作用—这会“弄脏”数据库中的数据！</p><p><strong>一致性</strong>要求根据数据库中定义的规则，数据库中的每个事务都是有效的，并且当数据库更改状态（某些信息已更改）时，这种更改是有效的，并且不会破坏数据。每个事务将数据库从一个<em>有效</em>状态移动到另一<em>有效</em>状态。一致性可以认为如下：每个“读取”操作都会收到最新的“写入”操作结果。</p><p><strong>隔离</strong>意味着您可以“同时”（同时）在数据库上运行多个事务，但是数据库最终将处于一种状态，看起来每个操作都已按顺序进行（按顺序执行，如操作队列） ）。我个人认为“隔离”不是这个概念的描述性术语，但是我猜想ACCD比ACID难说…</p><p><strong>持久性</strong>是保证一旦将数据存储在数据库中，它将保持不变。它将是“<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#section-2-storage-latency-throughput">持久的</a>”-存储在磁盘上而不是“内存”中。  </p><h3 id="非关系数据库"><a href="#非关系数据库" class="headerlink" title="非关系数据库"></a>非关系数据库</h3><p>相反，<strong>非关系数据库</strong>对其数据的刚性较差，或者换句话说，结构较灵活。数据通常显示为“键值”对。一种简单的表示方式是将其作为“键-值”对对象的数组（列表），例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// baby names</span></span><br><span class="line">[</span><br><span class="line">&#123; </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Jacob&quot;</span>,</span><br><span class="line">        <span class="attr">rank</span>: ##,</span><br><span class="line">        <span class="attr">gender</span>: <span class="string">&quot;M&quot;</span>,</span><br><span class="line">        <span class="attr">year</span>: ####</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; </span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Isabella&quot;</span>,</span><br><span class="line">        <span class="attr">rank</span>: ##,</span><br><span class="line">        <span class="attr">gender</span>: <span class="string">&quot;F&quot;</span>,</span><br><span class="line">        <span class="attr">year</span>: ####</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>非关系数据库也称为“ NoSQL”数据库，当您不希望或不需要具有一致的结构化数据时，它们将为您带来好处。</p><p>与ACID属性类似，NoSQL数据库属性有时也称为BASE：</p><p><strong>基本可用</strong>，表示系统保证可用性</p><p><strong>软状态</strong>均值意味着即使没有输入，系统状态也可能随时间变化</p><p><strong>最终一致性</strong>指出，除非收到其他输入，否则系统将在（非常短的）时间内保持一致。</p><p>由于这些数据库的核心是将数据保存在类似于散列表的结构中，因此它们非常快速，简单且易于使用，非常适合诸如缓存，环境变量，配置文件和会话状态等用例。灵活性使它们非常适合在内存（例如<a href="https://en.wikipedia.org/wiki/Memcached">Memcached</a>）和持久性存储（例如<a href="https://en.wikipedia.org/wiki/Amazon_DynamoDB">DynamoDb</a>）中使用。</p><p>还有其他称为文档数据库的“类似于JSON”的数据库，例如广受欢迎的<a href="https://www.mongodb.com/document-databases">MongoDb</a>，它们的核心也是“键值”存储。</p><h3 id="数据库索引"><a href="#数据库索引" class="headerlink" title="数据库索引"></a>数据库索引</h3><p>这是一个复杂的主题，因此，我将简要介绍一下表面知识，以便为您提供有关系统设计面试需要的高级概述。</p><p>想象一个拥有1亿行的数据库表。该表主要用于在每个记录中查找一个或两个值。要检索特定行的值，您需要遍历表。如果这是最后一条记录，那将需要很长时间！</p><p>索引是一种捷径记录的方式，该记录具有匹配值，比遍历每一行更有效。索引通常是添加到数据库中的数据结构，旨在促进快速搜索数据库中的那些<em>特定</em>属性（字段）。</p><p>因此，如果人口普查局有1.2亿条具有名称和年龄的记录，并且您最经常需要检索属于某个年龄组的人员列表，则可以在“年龄”属性上对该数据库建立索引。</p><p>索引是关系数据库的核心，并且在非关系数据库上也广泛提供索引。因此，从理论上讲，索引的好处可用于两种类型的数据库，这对于优化查找时间非常有利。</p><h3 id="复制和分片"><a href="#复制和分片" class="headerlink" title="复制和分片"></a>复制和分片</h3><p>虽然这些听起来像是一部生物恐怖电影中的东西，但您更可能每天在数据库扩展的背景下听到它们。</p><p>复制是指复制（复制，复制）数据库。您可能还记得我们讨论<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#system-availability">可用性</a>时的<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#system-availability">情况</a>。</p><p>我们已经考虑了在系统中具有冗余以维持高可用性的好处。如果一个数据库出现故障，复制可确保数据库中的冗余。但这也引发了一个问题，即如何在副本之间同步数据，因为它们具有相同的数据。对数据库的写入和更新操作的复制可以同步（与更改主数据库同时）或异步进行。  </p><p>同步主数据库和副本数据库之间可接受的时间间隔实际上取决于您的需求-如果您确实需要两个数据库之间的状态保持一致，则复制需要快速进行。您还希望确保，如果对副本的写操作失败，那么对主数据库的写操作也会失败（原子性）。</p><p>但是，当您拥有如此多的数据以至于仅仅对其进行复制可能会解决可用性问题，但不能解决吞吐量和延迟问题（速度）时，您该怎么办？  </p><p>此时，您可能需要考虑将数据“分块”为“碎片”。有人也称此为分区数据（与分区硬盘不同！）。  </p><p>分片数据会将您的大型数据库分解为较小的数据库。您可以根据数据的结构来确定如何分片数据。就像将每500万行存储在一个不同的分片中一样简单，或者采用其他最适合您的数据，需求和所服务位置的策略。</p><h2 id="第9节：领导人选举"><a href="#第9节：领导人选举" class="headerlink" title="第9节：领导人选举"></a>第9节：领导人选举</h2><p>让我们再次回到服务器以讨论一个稍微高级的主题。我们已经了解了<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#section-3-system-availability">可用性</a>的原理，以及冗余是提高可用性的一种方式。在处理将<a href="https://www.freecodecamp.org/news/systems-design-for-interviews/#section-6-load-balancing">请求路由</a>到冗余服务器群集时，我们还介绍了一些实际的注意事项。</p><p>但是有时，在这种设置中，多台服务器要做的事情差不多，可能会出现只需要一台服务器带头的情况。</p><p>例如，您要确保仅赋予一台服务器负责更新某些第三方API的责任，因为来自不同服务器的多次更新可能会导致问题或增加第三方方面的成本。  </p><p>在这种情况下，您需要选择该主服务器来将此更新职责委派给该主服务器。这个过程称为<a href="https://en.wikipedia.org/wiki/Leader_election">领导人选举</a>。  </p><p>当群集中有多个服务器以提供冗余时，它们之间可以配置为只有一个领导者。他们还将检测该领导服务器何时发生故障，并指定另一台服务器代替它。</p><p>原理很简单，但细节在于魔鬼。真正棘手的部分是确保服务器在数据，状态和操作方面“同步”。</p><p>例如，始终存在某些中断可能导致一台或两台服务器与其他服务器断开连接的风险。在这种情况下，工程师最终会使用一些在区块链中使用的基础思想来为服务器集群导出共识值。  </p><p>换句话说，使用<a href="https://en.wikipedia.org/wiki/Consensus_algorithm">共识算法</a>为所有服务器提供一个“商定”值，当确定哪个服务器是领导者时，它们可以全部依靠其逻辑。</p><p>领导者选举通常使用诸如<a href="https://etcd.io/">etcd之类的</a>软件来实现，该软件是一个键值对存储，通过使用领导者选举本身并使用共识算法，可以提供高可用性<em>和</em>强一致性（这是有价值的和不寻常的组合）。  </p><p>因此，工程师可以依靠etcd自己的领导者选举架构在系统中进行领导者选举。这是通过在代表etcd的服务中存储代表当前领导者的键值对来完成的。  </p><p>由于ETCD高度可用<em>和</em>强烈一致的，即键-值对总是可以通过你的系统依赖于包含集群最后的“真理之源”的服务器是当前选出的领导人。</p><h2 id="第10节：轮询，流式传输，套接字"><a href="#第10节：轮询，流式传输，套接字" class="headerlink" title="第10节：轮询，流式传输，套接字"></a>第10节：轮询，流式传输，套接字</h2><p>在持续更新，推送通知，流内容和实时数据的现代时代，重要的是要掌握支撑这些技术的基本原理。要定期或立即更新应用程序中的数据，需要使用以下两种方法之一。</p><h3 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h3><p>这很简单。如果您查看<a href="https://en.wikipedia.org/wiki/Polling_(computer_science)">维基百科条目</a>，可能会发现它有点紧张。因此，请查看其词典含义，尤其是在计算机科学的上下文中。牢记这个简单的基础。</p><p><img src="https://www.freecodecamp.org/news/content/images/2020/03/Screen-Shot-2020-03-14-at-10.25.44-am.png" alt="img"></p><p>轮询只是让您的客户端“检查”向您的服务器发送网络请求并请求更新的数据。这些请求通常按固定的时间间隔发出，例如5秒，15秒，1分钟或您的用例需要的任何其他时间间隔。</p><p>每几秒钟轮询一次仍然与实时轮询不太一样，并且还存在以下缺点，特别是如果您同时拥有一百万以上的用户：</p><ul><li>几乎恒定的网络请求（不适用于客户端）</li><li>几乎恒定的入站请求（对于服务器负载而言不大-每秒超过100万个请求！）</li></ul><p>因此，快速轮询并不是真正有效或高效的方法，因此，在数据更新中的细小间隙对您的应用程序来说不是问题的情况下，最好使用轮询。</p><p>例如，如果您构建了一个Uber克隆，则可能让驾驶员端应用程序每5秒发送一次驾驶员位置数据，并且让驾驶员方应用程序每5秒轮询一次驾驶员的位置。</p><h3 id="流媒体"><a href="#流媒体" class="headerlink" title="流媒体"></a>流媒体</h3><p>流式传输解决了不断轮询的问题。如果有必要不断命中服务器，那么最好使用称为<a href="https://en.wikipedia.org/wiki/WebSocket">web-sockets的</a>东西。</p><p>这是一种旨在通过TCP工作的网络通信协议。它在客户端和服务器之间打开双向专用通道（套接字），有点像两个端点之间的开放热线。</p><p>与通常的TCP / IP通信不同，这些套接字是“长期存在的”，因此它向服务器发出的单个请求打开了此热线以进行双向数据传输，而不是多个单独的请求。长期而言，我们的意思是机器之间的套接字连接将持续到双方将其关闭或网络断开为止。</p><p>您可能还记得我们在IP，TCP和HTTP上的讨论，它们通过为每个请求-响应周期发送数据“数据包”来进行操作。Web套接字意味着只有一个请求-响应交互（如果您考虑的话，实际上不是一个循环！），这打开了以“流”形式发送两个数据的通道。</p><p>轮询和所有基于“常规” IP的通信的最大区别在于，尽管轮询使客户端以固定的时间间隔向服务器请求数据（“拉动”数据），但在流传输中，客户端处于“待命”状态，等待服务器以其方式“推送”一些数据。服务器将在数据更改时发送数据，客户端始终在监听数据。因此，如果数据变化是恒定的，则它将变成“流”，这可能会更好地满足用户的需求。  </p><p>例如，在使用<a href="https://www.freecodecamp.org/news/p/51a1d601-c57e-48cf-8f8d-9bb1c333d64d/repl.it">协作编码IDE时</a>，当两个用户中的任何一个键入内容时，它都可以显示在另一个上，并且这是通过网络套接字完成的，因为您希望进行实时协作。如果在您尝试键入相同的内容后或等待3分钟之后才想知道我在做什么，那么我输入的内容会显示在屏幕上会很糟！</p><p>或想到在线多人游戏-这是在玩家之间流式传输游戏数据的完美用例！</p><p>总之，用例确定了轮询和流式传输之间的选择。通常，如果您的数据是“实时”的，则希望流式传输，并且如果可以有滞后时间（即使只有15秒仍是滞后时间），那么轮询可能是一个不错的选择。但这全取决于您有多少同时用户以及他们是否希望数据是即时的。流服务的一个常用示例是<a href="https://en.wikipedia.org/wiki/Apache_Kafka">Apache Kafka</a>。</p><h2 id="第11节：端点保护"><a href="#第11节：端点保护" class="headerlink" title="第11节：端点保护"></a>第11节：端点保护</h2><p>当您构建大型系统时，保护系统免受过多的操作（使用系统实际上不需要进行此类操作）变得很重要。现在听起来很抽象。但是，请考虑一下-您几次疯狂地单击按钮，认为它将使系统响应速度更快？想象一下，如果这些按钮中的每个按钮都单击ping服务器，而该服务器试图全部处理它们！如果由于某种原因（例如服务器在异常负载下挣扎），系统的吞吐量较低，那么每次单击都会使系统变得更慢，因为它必须处理所有这些！</p><p>有时甚至与保护系统无关。有时您想限制操作，因为这是服务的一部分。例如，您可能在第三方API服务上使用了免费套餐，其中每30分钟间隔仅允许您发出20个请求。如果您在30分钟的间隔内发出21或300个请求，则在前20个之后，该服务器将停止处理您的请求。</p><p>这就是所谓的限速。使用速率限制，服务器可以在给定的时间范围内限制客户端尝试的操作次数。可以根据用户，请求，时间，有效负载或其他事物来计算速率限制。通常，一旦在时间窗口中超过了限制，则对于该窗口的其余时间，服务器将返回错误。</p><p>好的，现在您可能会认为端点“保护”是一种夸张。您只是在限制用户从端点获取某些东西的能力。的确如此，但是当用户（客户端）是恶意的时（例如说是破坏您的端点的机器人），它也是一种保护。为什么会这样？因为向服务器泛滥的请求超出其处理能力，这是恶意人员用来关闭该服务器的策略，从而有效地关闭了该服务。这正是<a href="https://en.wikipedia.org/wiki/Denial-of-service_attack">拒绝服务（D0S）攻击的本质</a>。</p><p>尽管可以通过这种方式防御DoS攻击，但速率限制本身并不能保护您免受DoS攻击的复杂版本-<em>分布式</em>DoS的攻击。这里的分布只是意味着攻击来自看似无关的多个客户端，并且没有真正的方法将其识别为受单个恶意代理控制。需要使用其他方法来防止这种协调的分布式攻击。</p><p>但是无论如何，对于不太可怕的用例，速率限制都是有用且流行的，例如我提到的API限制。考虑到速率限制的工作原理，由于服务器必须首先检查限制条件并在必要时强制执行限制条件，因此您需要考虑要使用哪种数据结构和数据库来使这些检查超快，以便如果请求在允许的范围内，则不会减慢处理请求的速度。另外，如果您将其存储在服务器本身的内存中，则需要保证来自给定客户端的所有请求都将到达该服务器，以便它可以正确实施限制。要处理这种情况，通常使用单独的<a href="https://en.wikipedia.org/wiki/Redis">Redis服务</a> 位于服务器外部，但将用户的详细信息保留在内存中，并且可以快速确定用户是否在允许的范围内。</p><p>速率限制可以和您要执行的规则一样复杂，但是上一节应涵盖基本知识和最常见的用例。</p><h2 id="第12节：消息和发布订阅"><a href="#第12节：消息和发布订阅" class="headerlink" title="第12节：消息和发布订阅"></a>第12节：消息和发布订阅</h2><p>当您设计和构建大型<a href="https://blog.stackpath.com/distributed-system/">分布式系统时</a>，要使该系统凝聚而流畅地工作，就必须在组成系统的组件和服务之间交换信息。但是，正如我们之前所看到的那样，依赖网络的系统与网络具有同样的弱点-它们非常脆弱。网络发生故障，这种情况很少发生。当网络出现故障时，系统中的组件无法通信可能会降低系统性能（最佳情况）或导致系统完全故障（最坏情况）。因此，即使系统中组件之间存在“任意分区”（即故障），分布式系统也需要可靠的机制来确保通信在中断处继续进行或恢复。</p><p>举例来说，假设您正在预订机票。您将获得一个不错的价格，选择您的座位，确认预订，甚至还使用信用卡付款。现在，您正在等待票证PDF到达收件箱。您等待，再等待，它永远不会到来。在某个地方，发生了无法处理或无法正确恢复的系统故障。预订系统通常会与航空公司和定价API连接，以处理实际的航班选择，票价摘要，航班日期和时间等。所有这些操作都是在您单击网站的预订UI时完成的。但是，几分钟后，它不必将票证的PDF发送给您。取而代之的是，UI可以简单地确认您的预订已完成，并且您可以很快在收件箱中找到门票。那’ 这是一种合理且通用的预订用户体验，因为付款的时刻和票证的接收不必同时进行-这两个事件可以是异步的。这样的系统需要进行消息传递以确保异步生成PDF的服务（服务器端点）收到已确认的付费预订以及所有详细信息的通知，然后可以自动生成PDF并通过电子邮件发送给您。但是，如果该消息传递系统发生故障，则电子邮件服务将永远不会知道您的预订，并且不会生成任何票证。和所有详细信息，然后可以自动生成PDF并通过电子邮件发送给您。但是，如果该消息传递系统发生故障，则电子邮件服务将永远不会知道您的预订，并且不会生成任何票证。和所有详细信息，然后可以自动生成PDF并通过电子邮件发送给您。但是，如果该消息传递系统发生故障，则电子邮件服务将永远不会知道您的预订，并且不会生成任何票证。</p><p><strong>发布者/订阅者消息</strong></p><p>这是一个非常流行的消息传递范例（模型）。关键概念是发布者“发布”消息，而订阅者订阅消息。为了提供更大的粒度，消息可以属于某个“主题”，就像一个类别。这些主题就像专用的“渠道”或管道，其中每个管道互斥处理属于特定主题的消息。订阅者选择他们想要订阅的主题，并获得该主题中消息的通知。该系统的优势在于，发布者和订阅者可以完全分离，即他们不需要彼此了解。发布者宣布，订阅者收听其正在寻找的主题的通告。</p><p>服务器通常是消息的发布者，通常有多个主题（渠道）被发布到。特定主题的使用者订阅了这些主题。服务器（发布者）和订户（可以是另一台服务器）之间没有直接通信。唯一的交互作用是发布者和主题之间以及主题和订阅者之间。</p><p>主题中的消息只是需要传达的数据，并且可以采用您需要的任何形式。这样一来，您可以在发布/订阅中获得四个角色：发布者，订阅者，主题和消息。</p><h3 id="比数据库更好"><a href="#比数据库更好" class="headerlink" title="比数据库更好"></a>比数据库更好</h3><p>那么，为什么要为此烦恼呢？为什么不将所有数据持久保存到数据库并直接从那里使用呢？嗯，您需要一个系统来使消息排队，因为每个消息都对应于一个需要根据该消息的数据完成的任务。因此，在我们的票务示例中，如果100个人在35分钟内完成预订，那么将所有内容都放入数据库中并不能解决通过电子邮件发送这100个人的问题。它只存储100个事务。发布/订阅系统处理通信，任务排序<em>和</em>消息将保留在数据库中。因此，系统可以提供有用的功能，例如“至少一次”传递（消息不会丢失），持久存储，消息排序，消息“重试”，“可重播”等。如果没有此系统，仅将消息存储在数据库中将无法帮助您确保消息已传递（使用）并已采取行动成功完成任务。  </p><p>有时，同一条消息可能会被订户消耗一次以上-通常是由于网络暂时中断，尽管订户消耗了该消息，但并没有让发布者知道。因此，发布者只需将其重新发送给订阅者即可。这就是为什么保证是“至少一次”而不是“一次且只有一次”的原因。在分布式系统中，这是不可避免的，因为网络本质上是不可靠的。这可能会带来复杂性，其中消息会在订户侧触发操作，并且该操作可能会更改数据库中的内容（更改整个应用程序中的状态）。如果单个操作被重复多次，并且应用程序的状态每次更改都会怎样？</p><h3 id="控制结果-一个或多个结果？"><a href="#控制结果-一个或多个结果？" class="headerlink" title="控制结果-一个或多个结果？"></a>控制结果-一个或多个结果？</h3><p>解决这个新问题的方法称为幂等性（幂等性），这是一个很重要的概念，但在前几次检查时并不直观。这个概念可能看起来很复杂（特别是如果您阅读了Wikipedia条目），因此出于当前目的，这是<a href="https://stackoverflow.com/questions/1077412/what-is-an-idempotent-operation">StackOverflow的</a>一种用户友好的简化形式：</p><blockquote><p><em>在计算中，幂等运算是指如果使用相同的输入参数多次调用幂等运算，则不会产生任何其他影响。</em></p></blockquote><p>因此，当订户处理一条消息两次或三遍时，应用程序的总体状态恰好是<em>第</em>一次处理该消息后的状态。例如，如果在预订机票结束时并且输入了信用卡详细信息之后，由于系统运行缓慢，您单击了“立即付款”三次，则您不想支付3倍的机票价格。 ？您需要具有幂等性，以确保<em>第</em>一次点击后的每次点击都不会再次进行购买，并且会多次向您的信用卡收费。相反，您可以在最好的朋友的新闻提要上发表相同评论N次。它们都将显示为单独的注释，除了令人讨厌之外，这实际上不是<em>错误的。</em>另一个示例是在“中”帖子上提供“拍手”-每个拍手都是为了增加拍手的数量，而不是一个，只能一个。后两个示例不需要幂等，但付款示例需要。</p><p>消息传递系统有许多种风格，系统的选择取决于要解决的用例。人们经常会提到“基于事件”的体系结构，这意味着系统依赖于有关“事件”的消息（例如为票证付款）来处理操作（例如通过电子邮件发送票证）。真正经常谈论的服务是Apache Kafka，RabbitMQ，Google Cloud Pub / Sub，AWS SNS / SQS。</p><h2 id="第13节：较小的必需品"><a href="#第13节：较小的必需品" class="headerlink" title="第13节：较小的必需品"></a>第13节：较小的必需品</h2><h3 id="记录中"><a href="#记录中" class="headerlink" title="记录中"></a>记录中</h3><p>随着时间的流逝，您的系统将收集大量数据。这些数据大部分非常有用。它可以使您了解系统的运行状况，性能和问题。它还可以为您提供有价值的见解，以了解谁使用您的系统，他们如何使用它，多久使用一次，或多或少使用哪些部分等等。  </p><p>这些数据对于分析，性能优化和产品改进非常有价值。这对于调试非常有价值，不仅在开发过程中登录到控制台时，而且在寻找测试和生产环境中的错误时，都非常有用。因此，日志也有助于跟踪和审核。  </p><p>记录日志时要记住的关键技巧是将其视为一系列连续事件，这意味着数据成为时间序列数据，并且应特别设计使用的工具和数据库来帮助处理此类数据。</p><h3 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h3><p>这是登录后的下一步。它回答了“如何处理所有记录数据？”的问题。您监视并分析它。您构建或使用工具和服务来解析这些数据，并为您提供仪表板或图表或以其他人类可读的方式理解这些数据的方法。</p><p>通过将数据存储在专门用于处理此类数据（时间序列数据）的数据库中，您可以插入基于该数据结构和意图构建的其他工具。</p><h3 id="警示"><a href="#警示" class="headerlink" title="警示"></a>警示</h3><p>当您积极监视时，还应该放置一个系统，以提醒您发生重大事件。就像对股票价格超过某个上限或低于某个阈值发出警报一样，如果您正在观察的某些指标过高或过低，则可能会发送警报。如果响应时间（延迟）或错误和失败超过“可接受的”水平，则可以设置警报。</p><p>良好的日志记录和监视的关键是确保您的数据在一段时间内相当一致，因为使用不一致的数据可能会导致缺少字段，从而破坏分析工具或降低日志记录的好处。</p><h2 id="资源资源"><a href="#资源资源" class="headerlink" title="资源资源"></a>资源资源</h2><p>如所承诺的，一些有用的资源如下：</p><ol><li>精彩的<a href="https://github.com/donnemartin/system-design-primer">Github回购</a>，其中包含概念，图表和学习准备</li><li>Tushar Roy对<a href="https://www.youtube.com/watch?v=UzLMhqg3_Wc">系统设计</a>的介绍</li><li>Gaurav Sen的<a href="https://www.youtube.com/watch?v=quLrc3PbuIw&list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX">YouTube播放列表</a></li><li><a href="https://www.sitepoint.com/sql-vs-nosql-differences/">SQL与NoSQL</a></li></ol><p>希望您喜欢这份长篇指南！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Host &#39;192.168.＊.＊&#39; is not allowed to connect to this MariaDB server</title>
      <link href="/2017/06/23/db/mysql%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/"/>
      <url>/2017/06/23/db/mysql%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>＃报错:”Host ‘192.168.＊.＊’ is not allowed to connect to this MariaDB server”</p><p>两种解决方法：</p><ol><li>改表法。</li></ol><p>可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”, 使得可以在远程访问到mysql。</p><p>mysql -u root -pvmwaremysql&gt;use mysql;</p><p>mysql&gt;update user set host = ‘%’ where user = ‘root’;</p><p>mysql&gt;select host, user from user;</p><p>mysql&gt;FLUSH RIVILEGES</p><span id="more"></span><ol start="2"><li>授权法。</li></ol><p>例如，你想myuser使用mypassword从 <code>任何主机</code> 连接到mysql服务器的话。</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’%’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从ip为<code>192.168.1.3</code>的主机连接到mysql服务器，并使用mypassword作为密码</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’192.168.1.3’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从ip为<code>192.168.1.3</code>的主机连接到mysql服务器的dk数据库，并使用mypassword作为密码</p><p>GRANT ALL PRIVILEGES ON dk.* TO ‘myuser‘@’192.168.1.3’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从<code>局域网中某个ip</code>的主机连接到mysql服务器的数据库，并使用mypassword作为密码；你要使用%通配符比如你有192.168.0.* 和 192.168.1.* 两个网段,要两个网段都可以访问你要’192.168.%’， 只要一个可以访问可以向下面例子这样。</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’192.168.1.%’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;<br>FLUSH   PRIVILEGES;</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime text3 快捷键</title>
      <link href="/2017/06/23/tools/sublime_text3_%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2017/06/23/tools/sublime_text3_%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>#sublime text3 快捷键</p><p>Sublime Text 是一款流行的文本编辑器软件，有点类似于TextMate，跨平台，可运行在Linux，Windows和Mac OS X。也是许多程序员喜欢使用的一款文本编辑器软件。本文将简单介绍 Sublime Text 3 的快捷键操作。</p><span id="more"></span><table><thead><tr><th align="center">快捷键分类</th><th align="left">功能说明</th><th align="left">mac</th><th align="left">win</th><th align="left">Linux</th></tr></thead><tbody><tr><td align="center">界面控制</td><td align="left">标签控制,前后标签切换</td><td align="left">cmd+alt+左右箭头</td><td align="left">NA</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">在打开的文件中搜索关键字</td><td align="left">cmd+p</td><td align="left">ctrl+p</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">一行接一行选择光标处相同的词，后续可以统一修改</td><td align="left">cmd+d</td><td align="left">ctrl+d</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">一次性选中与光标处相同的全部词，统一修改</td><td align="left">cmd+ctrl+g</td><td align="left">alt+F3</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">跳转到对应括号</td><td align="left">Ctrl+M</td><td align="left">Ctrl+M</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">按行选择</td><td align="left">cmd+l</td><td align="left">ctrl+l</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">选择光标出的词，或空格，同时标记上下文相同内容</td><td align="left">cmd+l</td><td align="left">ctrl+l</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">删除(剪切)当前行</td><td align="left">cmd+x</td><td align="left">Ctrl+X</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">删除当前行光标之后的字符</td><td align="left">cmd+K+K</td><td align="left">Ctrl+K+K</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">在当前行之前插入新行</td><td align="left">cmd+Shift+Enter</td><td align="left">Ctrl+Shift+Enter</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">在当前行之后插入新行</td><td align="left">cmd+Enter</td><td align="left">Ctrl+Enter</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">复制当前行并在插入</td><td align="left">cmd+shift+D</td><td align="left">ctrl+shift+D</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">上下移动行光标所在行</td><td align="left">cmd+ctrl+上下</td><td align="left">ctrl+shift+上下</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">* 多个光标（选择）</td><td align="left">cmd+alt+鼠标左键（拖动）</td><td align="left">NA</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">* 多个光标</td><td align="left">cmd + 需要放光标的位置鼠标左键</td><td align="left">ctrl+ 需要放光标的位置鼠标左键</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">光标定位：</td><td align="left">cmd+方向键 可定位光标到页面开始、结束，行开始、结束</td><td align="left"></td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">快速跳转到某一行</td><td align="left">ctrl＋G</td><td align="left"></td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">多行缩紧</td><td align="left">cmd＋] &amp; cmd+[</td><td align="left">ctrl＋] &amp; ctrl+[</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">转换为大写</td><td align="left">Cmd + K + U</td><td align="left">ctrl＋K + U</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">转换为小写</td><td align="left">Cmd + K + L</td><td align="left">ctrl＋K + L</td><td align="left"></td></tr></tbody></table><p>注：标＊的非常常用，尤其是在批量编辑和插入时。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hibernate could not resolve property_ provinceId of 错误</title>
      <link href="/2017/05/27/devlang/%E5%85%B3%E4%BA%8Ehibernate_could_not_resolve_property_provinceid_of_%E9%94%99%E8%AF%AF/"/>
      <url>/2017/05/27/devlang/%E5%85%B3%E4%BA%8Ehibernate_could_not_resolve_property_provinceid_of_%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="关于hibernate-could-not-resolve-property-：-provinceId-of-错误"><a href="#关于hibernate-could-not-resolve-property-：-provinceId-of-错误" class="headerlink" title="关于hibernate could not resolve property ： provinceId of 错误"></a>关于hibernate could not resolve property ： provinceId of 错误</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.hibernate.QueryException: could not resolve property: provinceId of: com.petewell.assess.hb.model.HBExameResult</span><br></pre></td></tr></table></figure><p>这个错误是说，在ExameResult 中没有找到proviceId属性，通常情况下我们在ExameResult中添加相应的属性就可以了。<br>但此次报的错误没有你想象的那么简单，首先我的provinceId属性已经在BaseExameResult中定义。定义的关系如下：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//////////////////////</span><br><span class="line">//  BaseExameResult //     -----&gt; BaseExameResult.hbm.xml</span><br><span class="line">//////////////////////</span><br><span class="line">∆</span><br><span class="line">|</span><br><span class="line">//////////////////////</span><br><span class="line">//    HBExameResult   //     -----&gt; ExameResult.hbm.xml</span><br><span class="line">//////////////////////</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在上面的这种情况下，hibernate查找映射关系时，会直接查找子类而不会找父类。那么我们这样实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">////////////////////////////</span><br><span class="line">//  BaseExameResult       //     -----&gt; BaseExameResult.hbm.xml</span><br><span class="line">////////////////////////////</span><br><span class="line">∆                   ∆               </span><br><span class="line">|                  |</span><br><span class="line">///////////////////     ///////////////////////</span><br><span class="line">HBExameResult.hbm.xml&lt;-// HBExameResult //     ///  CMExameResult   //--&gt; CMExameResult.hbm.xml</span><br><span class="line">///////////////////     //////////////////////</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hibernate ORM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quartz CronExpression表达式</title>
      <link href="/2017/05/17/devlang/quartz_cronexpression%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2017/05/17/devlang/quartz_cronexpression%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>##quartz CronExpression表达式</p><p>一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。按顺序依次为1.秒（0<del>59）2.分钟（0</del>59）3.小时（0<del>23）4.天（月）（0</del>31，但是你需要考虑你月的天数）5.月（0<del>11）6.天（星期）（1</del>7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）7.年份（1970－2099）</p><p>其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于”月份中的日期”和”星期中的日期”这两个元素互斥的,必须要对其中一个设置?.</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 10,14,16 * * ? 每天上午10点，下午2点，4点</span><br><span class="line">0 0/30 9-17 * * ??? 朝九晚五工作时间内每半小时</span><br><span class="line">0 0 12 ? * WED 表示每个星期三中午12点</span><br></pre></td></tr></table></figure><ul><li><p>有些子表达式能包含一些范围或列表例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”</p></li><li><p>“<em>”字符代表所有可能的值因此，“</em>”在子表达式（月）里表示每个月的含义，“*”在子表达式（天（星期））表示星期的每一天</p></li><li><p>“/”字符用来指定数值的增量例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟 ;在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”</p></li><li><p>“L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写。但是它在两个子表达式里的含义是不同的。<br>在天（月）子表达式中，“L”表示一个月的最后一天 ,在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT. 如果在“L”前有具体的内容，它就具有其他的含义了</p><p>  例如：“6L”表示这个月的倒数第６天，“ＦＲＩＬ”表示这个月的最后一个星期五</p></li></ul><p>注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题</p><p>============================================</p><p>CronTrigger配置完整格式为： [秒] [分] [小时] [日] [月] [周] [年]</p><table><thead><tr><th>序号</th><th align="center">说明</th><th>是否必填</th><th>允许填写的值</th><th>允许的通配符</th></tr></thead><tbody><tr><td>1</td><td align="center">秒</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>2</td><td align="center">分</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>3</td><td align="center">小时</td><td>是</td><td>0-23</td><td>, - * /</td></tr><tr><td>4</td><td align="center">日</td><td>是</td><td>1-31</td><td>, - * ? / L W</td></tr><tr><td>5</td><td align="center">月</td><td>是</td><td>1-12 or JAN-DEC</td><td>, - * /</td></tr><tr><td>6</td><td align="center">周</td><td>是</td><td>1-7 or SUN-SAT</td><td>, - * ? / L #</td></tr><tr><td>7</td><td align="center">年</td><td>否</td><td>empty 或 1970-2099</td><td>, - * /</td></tr></tbody></table><h4 id="通配符说明"><a href="#通配符说明" class="headerlink" title="通配符说明:"></a>通配符说明:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*表示所有值. 例如:在分的字段上设置 &quot;*&quot;,表示每一分钟都会触发。</span><br><span class="line">? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为&quot;?&quot; 具体设置为 0 0 0 10 * ?</span><br><span class="line">- 表示区间。例如 在小时上设置 &quot;10-12&quot;,表示 10,11,12点都会触发。</span><br><span class="line">, 表示指定多个值，例如在周字段上设置 &quot;MON,WED,FRI&quot; 表示周一，周三和周五触发</span><br><span class="line">/ 用于递增触发。如在秒上面设置&quot;5/15&quot; 表示从5秒开始，每增15秒触发(5,20,35,50)。 在月字段上设置&#x27;1/3&#x27;所示每月1号开始，每隔三天触发一次。</span><br><span class="line">L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于&quot;7&quot;或&quot;SAT&quot;。如果在&quot;L&quot;前加上数字，则表示该数据的最后一个。例如在周字段上设置&quot;6L&quot;这样的格式,则表示“本月最后一个星期五&quot; </span><br><span class="line">W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置&quot;15W&quot;，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 &quot;1W&quot;,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，&quot;W&quot;前只能设置具体的数字,不允许区间&quot;-&quot;).</span><br><span class="line"># 序号(表示每月的第几个周几)，例如在周字段上设置&quot;6#3&quot;表示在每月的第三个周六.注意如果指定&quot;#5&quot;,正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了) ；小提示：&#x27;L&#x27;和 &#x27;W&#x27;可以一组合使用。如果在日字段上设置&quot;LW&quot;,则表示在本月的最后一个工作日触发；周字段的设置，若使用英文字母是不区分大小写的，即MON与mon相同；</span><br></pre></td></tr></table></figure><h4 id="常用示例"><a href="#常用示例" class="headerlink" title="常用示例:"></a>常用示例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">0 12 * * ?    每天12点触发    </span><br><span class="line">15 10 ? * *    每天10点15分触发    </span><br><span class="line">15 10 * * ?    每天10点15分触发    </span><br><span class="line">15 10 * * ? *    每天10点15分触发    </span><br><span class="line">15 10 * * ? 2005    2005年每天10点15分触发    </span><br><span class="line">* 14 * * ?    每天下午的 2点到2点59分每分触发    </span><br><span class="line">0/5 14 * * ?    每天下午的 2点到2点59分(整点开始，每隔5分触发)    </span><br><span class="line">0/5 14,18 * * ?    每天下午的 2点到2点59分、18点到18点59分(整点开始，每隔5分触发)    </span><br><span class="line">0-5 14 * * ?    每天下午的 2点到2点05分每分触发    </span><br><span class="line">10,44 14 ? 3 WED    3月分每周三下午的 2点10分和2点44分触发    </span><br><span class="line">15 10 ? * MON-FRI    从周一到周五每天上午的10点15分触发    </span><br><span class="line">15 10 15 * ?    每月15号上午10点15分触发    </span><br><span class="line">15 10 L * ?    每月最后一天的10点15分触发    </span><br><span class="line">15 10 ? * 6L    每月最后一周的星期五的10点15分触发    </span><br><span class="line">15 10 ? * 6L 2002-2005    从2002年到2005年每月最后一周的星期五的10点15分触发    </span><br><span class="line">15 10 ? * 6#3    每月的第三周的星期五开始触发    </span><br><span class="line">0 12 1/5 * ?    每月的第一个中午开始每隔5天触发一次    </span><br><span class="line">11 11 11 11 ?    每年的11月11号 11点11分触发(光棍节)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> quartz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper 安装和配置</title>
      <link href="/2017/05/12/devlang/zookeeper%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/05/12/devlang/zookeeper%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>zookeeper 安装和配置</p><p>1.什么是zookeeper<br>　　引用官方的说法：“Zookeeper是一个高性能，分布式的，开源分布式应用协调服务。它提供了简单原始的功能，分布式应用可以基于它实现更高级的服务，比如同步，配置管理，集群管理，名空间。它被设计为易于编程，使用文件系统目录树作为数据模型。服务端跑在java上，提供java和C的客户端API”。</p><p>2.设计目标<br>Zookeeper服务自身组成一个集群(2n+1个服务允许n个失效)。Zookeeper服务有两个角色，一个是leader，负责写服务和数据同步，剩下的是follower，提供读服务，leader失效后会在follower中重新选举新的leader<br>Zookeeper逻辑图如下，<br><img src="/images/zookeeper/zkservice.jpg" alt="zookeeper service"></p><span id="more"></span><p>客户端可以连接到每个server，每个server的数据完全相同。<br>每个follower都和leader有连接，接受leader的数据更新操作。<br>Server记录事务日志和快照到持久存储。<br>大多数server可用，整体服务就可用</p><p>3.zookeeper能做什么<br>Zookeeper的主流应用场景实现思路（除去官方示例）<br>(1)配置管理<br>集中式的配置管理在应用集群中是非常常见的，一般商业公司内部都会实现一套集中的配置管理中心，应对不同的应用集群对于共享各自配置的需求，并且在配置变更时能够通知到集群中的每一个机器。</p><p>(2)集群管理<br>应用集群中，我们常常需要让每一个机器知道集群中（或依赖的其他某一个集群）哪些机器是活着的，并且在集群机器因为宕机，网络断链等原因能够不在人工介入的情况下迅速通知到每一个机器。</p><p>(3)数据发布与订阅 （我的业务用到这个特性，后面会有详细介绍）<br>应用配置集中到节点上，应用启动时主动获取，并在节点上注册一个watcher，每次配置更新都会通知到应用。</p><p>(4)名空间服务<br>分布式命名服务，创建一个节点后，节点的路径就是全局唯一的，可以作为全局名称使用。</p><p>(5)分布式通知/协调<br>不同的系统都监听同一个节点，一旦有了更新，另一个系统能够收到通知。</p><p>(6)分布式锁<br>Zookeeper能保证数据的强一致性，用户任何时候都可以相信集群中每个节点的数据都是相同的。一个用户创建一个节点作为锁，另一个用户检测该节点，如果存在，代表别的用户已经锁住，如果不存在，则可以创建一个节点，代表拥有一个锁。</p><p>zookeeper 安装<br>1、首选安装java运行环境。如果不知如何按照可以参加我的JAVA环境配置这篇文章，也可百度搜索。<br>2、下载zookeeper，目前最新的稳定版本为3.4.10；<a href="http://zookeeper.apache.org/">zookeeper</a>官网下载<br>linux下可以使用wget命令下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##下载</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/stable/zookeeper-3.4.10.tar.gz</span><br><span class="line"></span><br><span class="line">##然后解压：</span><br><span class="line">tar -xzvf zookeeper-3.4.10.tar.gz</span><br></pre></td></tr></table></figure><p>##运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">### 1启动zookeeper</span><br><span class="line"># bin/zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line"></span><br><span class="line">### 2查看状态</span><br><span class="line"># bin/zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Mode: standalone</span><br><span class="line"></span><br><span class="line">### 3停止zookeeper</span><br><span class="line"># bin/zkServer.sh stop</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br><span class="line"></span><br><span class="line">### 4 重启</span><br><span class="line"># bin/zkServer.sh restart</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><h3 id="管理zookeeper存储"><a href="#管理zookeeper存储" class="headerlink" title="管理zookeeper存储"></a>管理zookeeper存储</h3><p>对于长时间运行的生产系统，必须从外部(dataDir和日志)管理ZooKeeper的存储。有关更多细节，请参阅<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#sc_maintenance">维护部分</a>。</p><h4 id="连接Zookeeper"><a href="#连接Zookeeper" class="headerlink" title="连接Zookeeper"></a>连接Zookeeper</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ./zkCli.sh -server 127.0.0.1:2181</span><br></pre></td></tr></table></figure><p>这样可以执行简单的文件操作。<br>连接后，你将看到类似下面的输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Connecting to 127.0.0.1:2181</span><br><span class="line">2017-05-11 20:21:23,599 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT</span><br><span class="line">2017-05-11 20:21:23,605 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=localhost</span><br><span class="line">2017-05-11 20:21:23,605 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.8.0_91</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.home=/usr/local/jdk/jdk1.8.0_91/jre</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.class.path=/gzdata/zookeeper/zookeeper-3.4.10/bin/../build/classes:/gzdata/zookeeper/zookeeper-3.4.10/bin/../build/lib/*.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/slf4j-log4j12-1.6.1.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/slf4j-api-1.6.1.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/netty-3.10.5.Final.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/log4j-1.2.16.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/jline-0.9.94.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../zookeeper-3.4.10.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../src/java/lib/*.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../conf:.:/usr/local/jdk/jdk1.8.0_91/lib/dt.jar:/usr/local/jdk/jdk1.8.0_91/lib/tools.jar</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=&lt;NA&gt;</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=amd64</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=3.10.0-514.2.2.el7.x86_64</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=root</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/root</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/gzdata/zookeeper/zookeeper-3.4.10/bin</span><br><span class="line">2017-05-11 20:21:23,610 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@42110406</span><br><span class="line">2017-05-11 20:21:23,641 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@1032] - Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">JLine support is enabled</span><br><span class="line">2017-05-11 20:21:23,809 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@876] - Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTING) 0] 2017-05-11 20:21:23,998 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@1299] - Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x15bf77496660000, negotiated timeout = 30000</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br></pre></td></tr></table></figure><p>shell中输入help命令，可以获取一个命令列表，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">help</span><br><span class="line">ZooKeeper -server host:port cmd args</span><br><span class="line">        stat path [watch]</span><br><span class="line">        set path data [version]</span><br><span class="line">        ls path [watch]</span><br><span class="line">        delquota [-n|-b] path</span><br><span class="line">        ls2 path [watch]</span><br><span class="line">        setAcl path acl</span><br><span class="line">        setquota -n|-b val path</span><br><span class="line">        history</span><br><span class="line">        redo cmdno</span><br><span class="line">        printwatches on|off</span><br><span class="line">        delete path [version]</span><br><span class="line">        sync path</span><br><span class="line">        listquota path</span><br><span class="line">        rmr path</span><br><span class="line">        get path [watch]</span><br><span class="line">        create [-s] [-e] path data acl</span><br><span class="line">        addauth scheme auth</span><br><span class="line">        quit</span><br><span class="line">        getAcl path</span><br><span class="line">        close</span><br><span class="line">        connect host:port</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 1]</span><br></pre></td></tr></table></figure><p>在这，你可以尝试着输入一些简单的命令来体验下。首先，我们输入ls 命令，来看下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 3] ls /</span><br><span class="line">[zookeeper]</span><br></pre></td></tr></table></figure><p>接下来，我们通过 create /zk_test mydata 命令创建一个新的znode。新创建的znode将于字符串“mydata”关联起来，你应看到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 4] create /zk_test mydata</span><br><span class="line">Created /zk_test</span><br></pre></td></tr></table></figure><p>我们用ls /命令来查看刚创建好的znode。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 5] ls /</span><br><span class="line">[zookeeper, zk_test]</span><br></pre></td></tr></table></figure><p>注意：上面的zk_test目录是我们刚刚创建的。</p><p>接下来，我们通过get命令验证数据是否与znode关联，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 6] get /zk_test</span><br><span class="line">mydata</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x2</span><br><span class="line">mtime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 7</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>我们通过set命令改变zk_test节点上关联的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 8] set /zk_test hello,world</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x3</span><br><span class="line">mtime = Thu May 11 20:55:08 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 11</span><br><span class="line">numChildren = 0</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 9] get /zk_test</span><br><span class="line">hello,world</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x3</span><br><span class="line">mtime = Thu May 11 20:55:08 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 11</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>注意：修改时一定要指明相应路径 ，如： /zk_test .我们通过get命令查看到数据确实发生了变化。</p><p>最后，我们来用delete删除节点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 10] delete /zk_test</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 11] ls /</span><br><span class="line">[zookeeper]</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 12]</span><br></pre></td></tr></table></figure><p>###<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperStarted.html">复制模式</a>：</p><p>在zookeeper默认是运行在单机模式下以满足评估、开发、测试的需要。但生产环境中，你必须运行在复制模式下，在同一应用内的一个复制组成为quorum，在复制模式中，quorum中的所有服务器都有相同配置文件的副本。</p><p>注意：<br>For replicated mode, a minimum of three servers are required, and it is strongly recommended that you have an odd number of servers. If you only have two servers, then you are in a situation where if one of them fails, there are not enough machines to form a majority quorum. Two servers is inherently less stable than a single server, because there are two single points of failure.</p><p>The required conf/zoo.cfg file for replicated mode is similar to the one used in standalone mode, but with a few differences. Here is an example:</p><p>tickTime=2000<br>dataDir=/var/lib/zookeeper<br>clientPort=2181<br>initLimit=5<br>syncLimit=2<br>server.1=zoo1:2888:3888<br>server.2=zoo2:2888:3888<br>server.3=zoo3:2888:3888</p><p>The new entry, initLimit is timeouts ZooKeeper uses to limit the length of time the ZooKeeper servers in quorum have to connect to a leader. The entry syncLimit limits how far out of date a server can be from a leader.</p><p>With both of these timeouts, you specify the unit of time using tickTime. In this example, the timeout for initLimit is 5 ticks at 2000 milleseconds a tick, or 10 seconds.</p><p>The entries of the form server.X list the servers that make up the ZooKeeper service. When the server starts up, it knows which server it is by looking for the file myid in the data directory. That file has the contains the server number, in ASCII.</p><p>Finally, note the two port numbers after each server name: “ 2888” and “3888”. Peers use the former port to connect to other peers. Such a connection is necessary so that peers can communicate, for example, to agree upon the order of updates. More specifically, a ZooKeeper server uses this port to connect followers to the leader. When a new leader arises, a follower opens a TCP connection to the leader using this port. Because the default leader election also uses TCP, we currently require another port for leader election. This is the second port in the server entry.</p><p>Note<br>If you want to test multiple servers on a single machine, specify the servername as localhost with unique quorum &amp; leader election ports (i.e. 2888:3888, 2889:3889, 2890:3890 in the example above) for each server.X in that server’s config file. Of course separate dataDirs and distinct clientPorts are also necessary (in the above replicated example, running on a single localhost, you would still have three config files).</p><p>Please be aware that setting up multiple servers on a single machine will not create any redundancy. If something were to happen which caused the machine to die, all of the zookeeper servers would be offline. Full redundancy requires that each server have its own machine. It must be a completely separate physical server. Multiple virtual machines on the same physical host are still vulnerable to the complete failure of that host.</p><p>参考：<br><a href="http://coolxing.iteye.com/blog/1871009">http://coolxing.iteye.com/blog/1871009</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java环境配置</title>
      <link href="/2017/05/12/tools/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/05/12/tools/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.linuxidc.com/Linux/2016-06/132678.htm">http://www.linuxidc.com/Linux/2016-06/132678.htm</a><br>下载：<br>下载 jdk-8u91-linux-x64.tar.gz：<br> wget –no-check-certificate –no-cookies –header “Cookie: Oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm">http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm</a><br> wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz">http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz</a><br> wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm">http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm</a><br> wget –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie;” <a href="http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar">http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar</a></p><span id="more"></span><h3 id="mac-os"><a href="#mac-os" class="headerlink" title="mac os"></a>mac os</h3><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>JAVA_HOME=/usr/local/jdk/jdk1.8.0_91<br> JRE_HOME=$JAVA_HOME/jre<br> PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin<br> CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar<br> export JAVA_HOME JRE_HOME PATH CLASSPATH</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#vi /etc/profile</span><br><span class="line">#source /etc/profile</span><br><span class="line">#java -version</span><br><span class="line">java version &quot;1.8.0_91&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_91-b14)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> java安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ORA-12518, TNS:listener could not hand off client connection 解决方案</title>
      <link href="/2017/05/06/db/ORA-12518-%20TNS-listener%20could%20not%20hand%20off%20client%20connection/"/>
      <url>/2017/05/06/db/ORA-12518-%20TNS-listener%20could%20not%20hand%20off%20client%20connection/</url>
      
        <content type="html"><![CDATA[<p>##ORA-12518, TNS:listener could not hand off client connection 解决方案：</p><p>问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">org.apache.cxf.interceptor.Fault: Hibernate operation: Cannot open connection; uncategorized SQLException for SQL [???]; SQL state [66000]; error code [12518]; Listener refused the connection with the following error:</span><br><span class="line">ORA-12518, TNS:listener could not hand off client connection</span><br><span class="line"> ; nested exception is java.sql.SQLException: Listener refused the connection with the following error:</span><br><span class="line">ORA-12518, TNS:listener could not hand off client connection</span><br><span class="line"> </span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)</span><br><span class="line">        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:213)</span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)</span><br><span class="line">        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.invoke(AbstractJAXWSMethodInvoker.java:178)</span><br><span class="line">        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:64)</span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)</span><br><span class="line">        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)</span><br><span class="line">        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)</span><br><span class="line">        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</span><br><span class="line">        at java.util.concurrent.FutureTask.run(FutureTask.java:138)</span><br><span class="line">        ......</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>数据库系统环境说明：<br>IBM 3850 M2 ／ x3950 M2<br>cpu 8<br>内存 16G<br>win2003 enterprise Edition （5.2.3790 sp2）<br>oracle 11g （11.1.0.6.0）版本</p><p>分析问题：<br>遇到问题可以百度搜索，根据你的实际情况分析具体原因，并以最小的代价解决问题。<br>网上提到导致 ORA－12518错误的可能原因为：</p><p>一是session值过小，或用尽。</p><p>二是processes值设的过小，</p><p>三是需要增加参数DISPATCHERS。</p><p>首先获取上述中提及的参数值。</p><p>1）、查看session会话数：</p><p>select count(*) from v$session; –取得数据库目前的会话数。<br>select value from v$parameter where name = ‘sessions’; –取得会话数的上限。<br>select ＊ from v$session; –查看会话连接情况<br>查看当前process和sessions是否接近上限值。若接近，可以将其增大。</p><p>当前session数   140<br>会话数的上限     170</p><p>确认当前session数的连接情况，都有哪些连接。<br>其中101条为JDBC Thin Client   46条为plsqldev.exe连接。</p><p>2）、使用plsql连接到oracle，查看process进程数：</p><p>select count(*) from v$process; –取得数据库目前的进程数。<br>select value from v$parameter where name = ‘processes’;     –取得进程数的上限。 </p><p>目前的进程数：147<br>进程数的上限 :150</p><p>3）、采用专有连接方式<br>DISPATCHERS涉及到连接方式问题，这里默认采用专有连接方式。 关于连接方式参见 资料2</p><p>第二，存在问题：<br>1、session 与process 配置不合理。<br>2、非生产应用程序占用session。<br>注：在访问量不大时，150左右是问题不大的。访问量大时需要增加。</p><p>第三，处理方案：</p><p>1、关闭非生产应用占用的连接，如：plsqldev。 关闭后，测试验证问题消失。</p><p>2、调整process和session数。</p><p>  1).调整这两个参数值大小。<br>   系统进程数process和系统会话数session之间存在一个关系：<br>   process数=session数*1.1+5<br>   我们在配置时参考该规律进行设定。</p><p> a)  修改process值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter system set processes=1000 scope=spfile;   --将process值改为1000</span><br></pre></td></tr></table></figure><p> b)  修改session值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter system set sessions=1105 scope=spfile;    --将sessions值改为1105</span><br></pre></td></tr></table></figure><p>2). 备份pfile，重启oracle</p><p>  a) 修改完成后，备份pfile</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create pfile from spfile;   --从spfile（运行时配置）创建pfile（系统配置）</span><br></pre></td></tr></table></figure><p>c)  重启oracle</p><p>重启的方法有很多种，可以重启oracle服务，或者重启数据库。Windows下可以直接重启服务。</p><p>在修改process遇到问题 “ORA-32001: 已请求写入 SPFILE, 但是在启动时未指定 SPFILE” 参考资料3</p><p>参考资料：</p><p>1、问题处理方案<br>    <a href="http://blog.csdn.net/estelle_belle/article/details/40621245">http://blog.csdn.net/estelle_belle/article/details/40621245</a><br>    <a href="http://www.cnblogs.com/chinhr/archive/2011/10/11/2207528.html">http://www.cnblogs.com/chinhr/archive/2011/10/11/2207528.html</a><br>    <a href="http://blog.csdn.net/yanyaocrystal/article/details/52105846">http://blog.csdn.net/yanyaocrystal/article/details/52105846</a></p><p>2、关于连接方式<br>     <a href="http://www.2cto.com/database/201504/391158.html">http://www.2cto.com/database/201504/391158.html</a><br>     <a href="http://blog.sina.com.cn/s/blog_6d6e54f70100z12o.html">http://blog.sina.com.cn/s/blog_6d6e54f70100z12o.html</a><br>3、ORA-32001: 已请求写入 SPFILE, 但是在启动时未指定 SPFILE<br>    <a href="http://blog.csdn.net/haiross/article/details/41696035">http://blog.csdn.net/haiross/article/details/41696035</a></p><p>4、关于spfile 与pfile<br>    <a href="http://www.cnblogs.com/kerrycode/p/3254154.html">http://www.cnblogs.com/kerrycode/p/3254154.html</a><br>    <a href="http://blog.csdn.net/test_me/article/details/5678316">http://blog.csdn.net/test_me/article/details/5678316</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> oracle </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis: Can’t save in background: fork: Cannot allocate memory</title>
      <link href="/2017/04/28/devlang/Redis-Can%E2%80%99t-save-in-background-fork-Cannot-allocate-memory/"/>
      <url>/2017/04/28/devlang/Redis-Can%E2%80%99t-save-in-background-fork-Cannot-allocate-memory/</url>
      
        <content type="html"><![CDATA[<p>Redis: “Can’t save in background: fork: Cannot allocate memory”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis.clients.jedis.exceptions.JedisDataException: MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. </span><br><span class="line">for details about the error.</span><br><span class="line">redis.clients.jedis.Protocol.processError(Protocol.java:127)</span><br><span class="line">redis.clients.jedis.Protocol.process(Protocol.java:161)</span><br><span class="line">redis.clients.jedis.Protocol.read(Protocol.java:215)</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><span id="more"></span><p>今天项目现场反馈说工单提交不了了，查看日志发现时 “Redis “MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk”的问题。这个错误信息是Redis客户端工具在保存数据时候抛出的异常信息。</p><p>网上查了一下，很多人都是建议“config set stop-writes-on-bgsave-error no”。这样做其实是不好的，这仅仅是让程序忽略了这个异常，使得程序能够继续往下运行，但实际上数据还是会存储到硬盘失败！：</p><p>百度了下 查到了<a href="http://blog.csdn.net/whycold/article/details/21388455">有关linux下redis overcommit_memory的问题</a> ,提供了三种修改方案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">有三种方式修改内核参数方式，但要有root权限：</span><br><span class="line"></span><br><span class="line">  （1）编辑/etc/sysctl.conf ，改vm.overcommit_memory=1，然后sysctl -p 使配置文件生效</span><br><span class="line"></span><br><span class="line">  （2）sysctl vm.overcommit_memory=1</span><br><span class="line"></span><br><span class="line">  （3）echo 1 &gt; /proc/sys/vm/overcommit_memory</span><br></pre></td></tr></table></figure><p>修改后重启，总是提示 “Fatal error, can’t open config file”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server stop</span><br><span class="line">redis-server restart</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br></pre></td></tr></table></figure><p>上面删除方法都试过了，无法停止。无奈只有重启解决之。</p><p>参考：<a href="https://pydelion.com/2013/05/27/redis-cant-save-in-background-fork-cannot-allocate-memory/">Redis: “Can’t save in background: fork: Cannot allocate memory”</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱眼护眼操</title>
      <link href="/2017/02/14/life/%E7%94%9F%E6%B4%BB-%E7%9C%BC%E4%BF%9D%E5%81%A5%E6%93%8D/"/>
      <url>/2017/02/14/life/%E7%94%9F%E6%B4%BB-%E7%9C%BC%E4%BF%9D%E5%81%A5%E6%93%8D/</url>
      
        <content type="html"><![CDATA[<p>爱眼护眼操<br>尽管有好的眼镜可以帮助近视的我们看清物体，不过平时我们还是得多注意休息，做做眼保健操之类的，说不定就有用了呢。今天在网上偶然看到，与我之前练习的完全一样，也能预防近视，缓解眼睛疲劳哦！这个方法还能帮你恢复视力，前提是（500度以下）。天天看手机、电脑，眼睛会很受伤！为了你的眼睛，拒绝近视！赶紧好好的动起来吧！ </p><span id="more"></span><p>转换焦点<br><img src="/images/life/541187689d4cf8fcc3b8e52b5dfb2f28.gif" alt="转换焦点"><br>视线上下左右移动<br><img src="/images/life/497a6d0ad39ea66c4dc30cd3f227cbf0.gif" alt="视线上下左右移动"><br>眯眼睛<br><img src="/images/life/03a5297a204e30e4b6b17f933cb70547.gif" alt="眯眼睛"><br>用目光画正方形<br><img src="/images/life/85a929f8683a66a1746df2696f20a002.gif" alt="用目光画正方形"><br>眨眼睛<br><img src="/images/life/ac5f5bb502e41345534633053395d84f.gif" alt="眨眼睛"><br>用目光画圆形<br><img src="/images/life/787bb5a4f91a5bf3aa85f61101d98c56.jpg" alt="用目光画圆形"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.nginx+tomcat+redis实现集群环境的session共享。</title>
      <link href="/2017/01/17/devlang/02.nginx_tomcat_redis/"/>
      <url>/2017/01/17/devlang/02.nginx_tomcat_redis/</url>
      
        <content type="html"><![CDATA[<h2 id="02-nginx-tomcat-redis实现集群环境的session共享。"><a href="#02-nginx-tomcat-redis实现集群环境的session共享。" class="headerlink" title="02.nginx+tomcat+redis实现集群环境的session共享。"></a>02.nginx+tomcat+redis实现集群环境的session共享。</h2><p>注：tomcat-redis-session-manager 仅对tomcat8.0.39以下版支持。8.5.9这个版本不支持，缺少LifecycleSupport 相关类。</p><span id="more"></span><h3 id="nginx-tomcat-集群配置"><a href="#nginx-tomcat-集群配置" class="headerlink" title="nginx tomcat 集群配置"></a>nginx tomcat 集群配置</h3><p>参考：</p><p><a href="http://blog.csdn.net/zht666/article/details/38515147">Nginx+Tomcat7+Mencached负载均衡集群部署笔记</a></p><p><a href="http://www.cnblogs.com/chihirotan/p/5791401.html">Nginx-tomcat-redis——负载均衡以及session共享</a></p><p>nginx\tomcat 采用集群方式，部署在一台window机器上192.168.0.20。redis 部署在一台centos下，ip为192.168.0.21；</p><p>配置步骤如下：<br>1、安装nginx及单机测试，这里就不多说了，不会的同学可以百度下，很多。<br>2、安装tomcat 从官网下载tomcat7。注：在同一机器上部署需要修改端口，否则可能因端口冲突无法启动；我的端口分别设置为8080，8081，8082<br>3、nginx集群配置<br>修改nginx安装目录下的conf/nginx.conf 文件。修改部分如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">   #设定负载均衡的服务器列表，可以设置多个upstream，但mysvr名字要区分</span><br><span class="line">   upstream myClusterServer1 &#123;</span><br><span class="line">      #weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">      #本机上的Squid开启3128端口</span><br><span class="line">      server 127.0.0.1:8080  weight=5;</span><br><span class="line">      server 127.0.0.1:8081  weight=5;</span><br><span class="line">      server 127.0.0.1:8082  weight=5;</span><br><span class="line">   &#125;</span><br><span class="line">   server &#123;</span><br><span class="line">       ...</span><br><span class="line">       location / &#123;</span><br><span class="line">           root   html;</span><br><span class="line">           index  index.html index.htm index.jsp;</span><br><span class="line">           #请求转向mysvr 定义的服务器列表</span><br><span class="line">           proxy_pass    http://myClusterServer1;</span><br><span class="line">           proxy_redirect default;</span><br><span class="line">           #跟代理服务器连接的超时时间，必须留意这个time out时间不能超过75秒，当一台服务器当掉时，过10秒转发到另外一台服务器。</span><br><span class="line">       proxy_connect_timeout 10;</span><br><span class="line">       &#125;</span><br><span class="line">       ...</span><br><span class="line">   &#125;</span><br><span class="line">   ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、启动3个tomcat和nginx。<br>5、测试，编写一个简单jsp进行测试。放到tomcat下，然后<a href="http://localhost/test.jsp">http://localhost/test.jsp</a>访问,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=iso-8859-1&quot;/&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;/&gt;&lt;!-- HTTP 1.0 --&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;h1&gt;Session&lt;/h1&gt;</span><br><span class="line">   &lt;table style=&quot;text-align: left;&quot; border=&quot;0&quot;&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session Id&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getSession().hashCode()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session IP&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getServerName()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session port&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getServerPort()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;server&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;this is Tomcat Server 8080&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">   &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="redis实现session共享"><a href="#redis实现session共享" class="headerlink" title="redis实现session共享"></a>redis实现session共享</h3><p>参考：<a href="http://blog.csdn.net/chszs/article/details/42610365">用Redis存储Tomcat集群的Session</a></p><p>redis安装这里就不多说了。参见我的<a href="">redis3.2.6_安装及分布配置</a></p><p>1、准备tomcat-redis-session-manager包</p><p>注：tomcat-redis-session-manager仅支持tomcat8.0.39以下版本，并按网上提供的方法修改时没有问题的。对8.5以上版本依然没用。</p><p>你要到<a href="https://github.com/jcoleman/tomcat-redis-session-manager">tomcat-redis-session-manager</a>下载源码编译。</p><p>在配置gradle时会遇到“No such property: sonatypeUsername错误”</p><p>解决方法：<br>在项目根目录下创建gradle.properties文件，文件中添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sonatypeUsername=</span><br><span class="line">sonatypePassword=</span><br><span class="line">sonatypeRepo=</span><br></pre></td></tr></table></figure><p>编译成功后将commons-pool2-2.4.2.jar、jedis-2.9.0.jar、tomcat-redis-session-manager-2.0.0.jar 放到tomcat的lib目录下。</p><p>2、在tomcat context.xml 文件中增加先内容。</p><p>单机redis缓存（master -slave模式）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--单点配置--&gt;</span><br><span class="line">&lt;Valve className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; /&gt;</span><br><span class="line">&lt;Manager className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot;</span><br><span class="line">         host=&quot;192.168.100.194&quot;</span><br><span class="line">         port=&quot;6379&quot;</span><br><span class="line">         database=&quot;0&quot;</span><br><span class="line">         maxInactiveInterval=&quot;60&quot;</span><br><span class="line">         /&gt;</span><br></pre></td></tr></table></figure><p>Sentinel 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- Sentinel 配置 --&gt;</span><br><span class="line"> &lt;Valve className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; /&gt;</span><br><span class="line"> &lt;Manager className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot;</span><br><span class="line">   maxInactiveInterval=&quot;60&quot;</span><br><span class="line">sentinelMaster=&quot;mymaster&quot;</span><br><span class="line">   sentinels=&quot;192.168.0.194:26379,192.168.0.194:36379,192.168.0.194:46379&quot;/&gt;</span><br></pre></td></tr></table></figure><p>3、编写测试jsp。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%=session.getId()%&gt;&lt;br&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        String msg = (String) session.getAttribute(&quot;msg&quot;);</span><br><span class="line">        if (null == msg) &#123;</span><br><span class="line">            session.setAttribute(&quot;msg&quot;, &quot;Hello!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            session.setAttribute(&quot;msg&quot;, msg + 0);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%=session.getAttribute(&quot;msg&quot;)%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>分别部署到tomcat下</p><p>4、启动nginx和tomcat</p><p>分别启动tomcat和nginx后，然后访问<a href="http://localhost/test.jsp">http://localhost/test.jsp</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B1ACBA61EEB15371A3896FCEA5FAF69D</span><br><span class="line">Hello!0000</span><br></pre></td></tr></table></figure><p>若出现DENIED Redis is running in protected mode because protected mode is enabled问题<br>具体提示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis.clients.jedis.exceptions.JedisDataException: DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions:</span><br><span class="line">1) Just disable protected mode sending the command &#x27;CONFIG SET protected-mode no&#x27; from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent.</span><br><span class="line">2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to &#x27;no&#x27;, and then restarting the server.</span><br><span class="line">3) If you started the server manually just for testing, restart it with the &#x27;--protected-mode no&#x27; option.</span><br><span class="line">4) Setup a bind address or an authentication password. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</span><br></pre></td></tr></table></figure><p>你可以根据你的实际情况做出处理。<br>我这里是临时测试，在启动时把protected-mode 设置为no</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># redis-server ./redis.conf --protected-mode no</span><br></pre></td></tr></table></figure><p>如果生产环境建议绑定一个地址或通过密码访问。</p><p>单机方式下上面的方式很容易解决。但集群方式存在一个很大的坑， one client（nginx+tomcat 集群） + one server（redis+sentinel集群）下。无论是关闭protected-mode 还是 bind address 和auth pass 都无效。</p><p>redis集群方式配置失败！！！！</p><p>参考：<br><a href="http://www.cnblogs.com/interdrp/p/4868740.html">redis + Tomcat 8 的session共享解决</a></p><p>分布式集群Session共享 简单多tomcat8+redis的session共享实现<br><a href="http://blog.csdn.net/jerome_s/article/details/52658946">http://blog.csdn.net/jerome_s/article/details/52658946</a><br><a href="http://blog.csdn.net/chszs/article/details/42610365">用Redis存储Tomcat集群的Session</a><br><a href="http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2">02.Redis主从集群的Sentinel配置</a><br><a href="http://debugo.com/redis-sentinel/?utm_source=tuicool&utm_medium=referral">Redis Sentinel配置小记</a><br><a href="http://www.cnblogs.com/LiZhiW/p/4851640.html">sentinel.conf配置详解</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01. Redis3.2.6 安装及分布式配置</title>
      <link href="/2017/01/17/devlang/01.redis3.2.6_%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/01/17/devlang/01.redis3.2.6_%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="01-Redis3-2-6-安装及分布式配置"><a href="#01-Redis3-2-6-安装及分布式配置" class="headerlink" title="01.Redis3.2.6 安装及分布式配置"></a>01.Redis3.2.6 安装及分布式配置</h2><p>参考<a href="http://blog.csdn.net/miyatang/article/details/47257209">redis3.0.3 安装与配置</a></p><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p>####1.1 mac 上安装redis</p><p>1）官网 <a href="https://redis.io/">https://redis.io/</a> 下载最新的稳定版本，我下的是3.2.6</p><p>2）sudo tar -zxf redis-3.2.6.zip 解压文件</p><p>3）进入解压后的目录 cd redis－3.2.6</p><ol start="4"><li>sudo make test 测试编译</li></ol><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  21 seconds - integration/convert-zipmap-hash-on-load</span><br><span class="line">  85 seconds - unit/dump</span><br><span class="line">  8 seconds - unit/limits</span><br><span class="line">  14 seconds - unit/introspection-2</span><br><span class="line">  78 seconds - integration/replication-2</span><br><span class="line">  93 seconds - unit/sort</span><br><span class="line">  14 seconds - unit/bitfield</span><br><span class="line">  100 seconds - unit/type/list-3</span><br><span class="line">  41 seconds - unit/maxmemory</span><br><span class="line">  43 seconds - unit/bitops</span><br><span class="line">  56 seconds - unit/scripting</span><br><span class="line">  128 seconds - unit/type/list-2</span><br><span class="line">  43 seconds - unit/memefficiency</span><br><span class="line">  135 seconds - integration/replication</span><br><span class="line">  79 seconds - unit/obuf-limits</span><br><span class="line">  148 seconds - integration/replication-3</span><br><span class="line">  75 seconds - unit/hyperloglog</span><br><span class="line">  162 seconds - integration/replication-4</span><br><span class="line">  104 seconds - unit/geo</span><br><span class="line">  182 seconds - integration/replication-psync</span><br><span class="line"></span><br><span class="line">\o/ All tests passed without errors!</span><br><span class="line"></span><br><span class="line">Cleanup: may take some time... OK</span><br></pre></td></tr></table></figure><p>5)、sudo make install</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">localhost:redis-3.2.6 xingzhe$ sudo make install</span><br><span class="line">Password:</span><br><span class="line">cd src &amp;&amp; /Applications/Xcode.app/Contents/Developer/usr/bin/make install</span><br><span class="line"></span><br><span class="line">Hint: It&#x27;s a good idea to run &#x27;make test&#x27; ;)</span><br><span class="line"></span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br></pre></td></tr></table></figure><p>至此，你已成功安装redis！</p><p>####1.2 centos7 上安装redis</p><p>1)、安装前，升级系统<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><br>2)、官网下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-3.2.6.tar.gz</span><br></pre></td></tr></table></figure><p>3)、解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis-3.2.6.tar.gz redis-3.2.6</span><br></pre></td></tr></table></figure><p>4)、进入解压后的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd redis-3.2.6</span><br></pre></td></tr></table></figure><p>5)、运行runtest</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ./runtest</span><br><span class="line"> You need tcl 8.5 or newer in order to run the Redis test</span><br></pre></td></tr></table></figure><p>如果提示 需要安装tcl，执行6步，否则跳过。<br>6)、安装tcl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install tcl</span><br></pre></td></tr></table></figure><p>7)、编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># make</span><br><span class="line">cd src &amp;&amp; make all</span><br><span class="line">make[1]: 进入目录“/tdata/redis-3.2.6/src”</span><br><span class="line">rm -rf redis-server redis-sentinel redis-cli redis-benchmark redis-check-rdb redis-check-aof *.o *.gcda *.gcno *.gcov redis.info lcov-html</span><br><span class="line">(cd ../deps &amp;&amp; make distclean)</span><br><span class="line">make[2]: 进入目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(cd hiredis &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd linenoise &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd lua &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd geohash-int &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd jemalloc &amp;&amp; [ -f Makefile ] &amp;&amp; make distclean) &gt; /dev/null || true</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">make[2]: 离开目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">echo STD=-std=c99 -pedantic -DREDIS_STATIC=&#x27;&#x27; &gt;&gt; .make-settings</span><br><span class="line">echo WARN=-Wall -W &gt;&gt; .make-settings</span><br><span class="line">echo OPT=-O2 &gt;&gt; .make-settings</span><br><span class="line">echo MALLOC=jemalloc &gt;&gt; .make-settings</span><br><span class="line">echo CFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo LDFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo REDIS_CFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo REDIS_LDFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo PREV_FINAL_CFLAGS=-std=c99 -pedantic -DREDIS_STATIC=&#x27;&#x27; -Wall -W -O2 -g -ggdb   -I../deps/geohash-int -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include &gt;&gt; .make-settings</span><br><span class="line">echo PREV_FINAL_LDFLAGS=  -g -ggdb -rdynamic &gt;&gt; .make-settings</span><br><span class="line">(cd ../deps &amp;&amp; make hiredis linenoise lua geohash-int jemalloc)</span><br><span class="line">make[2]: 进入目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(cd hiredis &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd linenoise &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd lua &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd geohash-int &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd jemalloc &amp;&amp; [ -f Makefile ] &amp;&amp; make distclean) &gt; /dev/null || true</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">(echo &quot;&quot; &gt; .make-cflags)</span><br><span class="line">(echo &quot;&quot; &gt; .make-ldflags)</span><br><span class="line">MAKE hiredis</span><br><span class="line">cd hiredis &amp;&amp; make static</span><br><span class="line">make[3]: 进入目录“/tdata/redis-3.2.6/deps/hiredis”</span><br><span class="line">gcc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  net.c</span><br><span class="line">make[3]: gcc：命令未找到</span><br><span class="line">make[3]: *** [net.o] 错误 127</span><br><span class="line">make[3]: 离开目录“/tdata/redis-3.2.6/deps/hiredis”</span><br><span class="line">make[2]: *** [hiredis] 错误 2</span><br><span class="line">make[2]: 离开目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">make[1]: [persist-settings] 错误 2 (忽略)</span><br><span class="line">    CC adlist.o</span><br><span class="line">/bin/sh: cc: 未找到命令</span><br><span class="line">make[1]: *** [adlist.o] 错误 127</span><br><span class="line">make[1]: 离开目录“/tdata/redis-3.2.6/src”</span><br><span class="line">make: *** [all] 错误 2</span><br></pre></td></tr></table></figure><p>若出现上面错误，说明缺少编译环境，需要安装gcc。否则跳过8步。<br>如果出现如下错误,请看第9步，否则跳过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd src &amp;&amp; make all</span><br><span class="line">make[1]: 进入目录“/tdata/redis-3.2.6/src”</span><br><span class="line">    CC adlist.o</span><br><span class="line">In file included from adlist.c:34:0:</span><br><span class="line">zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录</span><br><span class="line"> #include &lt;jemalloc/jemalloc.h&gt;</span><br><span class="line">                               ^</span><br><span class="line">编译中断。</span><br><span class="line">make[1]: *** [adlist.o] 错误 1</span><br><span class="line">make[1]: 离开目录“/tdata/redis-3.2.6/src”</span><br><span class="line">make: *** [all] 错误 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8)、安装gcc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install gcc</span><br></pre></td></tr></table></figure><p>安装成功转到6步，执行make命令。<br>9)、zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录<br>在make 后面增加 MALLOC=libc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># make MALLOC=libc</span><br></pre></td></tr></table></figure><p>10)、安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># make install</span><br></pre></td></tr></table></figure><p>注：在编译时，出现“../deps/geohash-int/geohash.h:78:18: 附注：‘longitude’在此声明” 警告；还有一个变量未定义。不清楚是否会有影响。目前，安装后运行测试都正常。</p><p><a href="https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe">Redis Desktop Manager</a></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>1)、启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure><p> <a href="http://www.cnblogs.com/GoQC/p/5764201.html">Redis 安装 启动 连接 配置 重启</a></p><p>2)、测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt; set foo bar</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get foo</span><br><span class="line">&quot;bar&quot;</span><br></pre></td></tr></table></figure><p>恭喜你，已经成功安装！</p><h3 id="2、分布式配置"><a href="#2、分布式配置" class="headerlink" title="2、分布式配置"></a>2、分布式配置</h3><p>参考[1]:<a href="http://www.redis.cn/topics/cluster-tutorial.html">Redis Cluster搭建方法简介</a></p><p>参考[2]:<a href="http://blog.csdn.net/weiguolong0306/article/details/51586557"> Centos7 搭建Redis3.2.0版本集群环境</a></p><p>准备ruby环境,后续redis-trib.rb会用到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yum install ruby</span><br><span class="line"># yum install rubygems</span><br><span class="line"># gem install redis</span><br></pre></td></tr></table></figure><h4 id="搭建并使用Redis集群"><a href="#搭建并使用Redis集群" class="headerlink" title="搭建并使用Redis集群[]"></a>搭建并使用Redis集群[]</h4><p>1、准备redis.conf配置文件<br>redis.conf配置如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">port 7000</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>2、创建目录后分别启动<br>创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir cluster-test</span><br><span class="line">cd cluster-test</span><br><span class="line">mkdir 7000 7001 7002 7003 7004 7005</span><br></pre></td></tr></table></figure><p>在文件夹 7000 至 7005 中， 各创建一个 redis.conf 文件,文件中的端口与文件加相同。<br>启动,因文件夹加多启动比较繁琐。可用写个简单的脚本执行,注意一定是在文件夹内执行命令。<br>vi runcluster.sh 将下面内容cp进去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd 7000/</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7001</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7002</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7003</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7004</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7005</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br></pre></td></tr></table></figure><p>nohup redis-server ./redis.conf &gt; /cluster-test/log/redis-7000.log 2&gt;&amp;1 &amp;</p><p>chomd +X runcluster.sh //添加执行权限<br>然后,./runcluster.sh  运行。这样就全都启动了。</p><p>3、搭建集群<br>redis-trib 位于 Redis 源码的 src 文件夹中,你要把它cp到cluster-test目录下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-trib.rb create --replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005</span><br></pre></td></tr></table></figure><p>注意:在执行时会出现”All nodes agree about slots configuration”提示,不能直接回车,一定输入yes再回车。<br>当出现下面的说明配置完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">12400:S 12 Jan 14:45:21.671 * Background AOF rewrite finished successfully</span><br><span class="line">12397:M 12 Jan 14:45:22.055 # Cluster state changed: ok</span><br><span class="line">12398:M 12 Jan 14:45:22.155 # Cluster state changed: ok</span><br><span class="line">12399:M 12 Jan 14:45:22.189 # Cluster state changed: ok</span><br></pre></td></tr></table></figure><p>4、检验是否配置成功<br>./redis-trib.rb check :7000<br>你也可用通过客户端连接上测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -c -p 7000</span><br><span class="line">127.0.0.1:7000&gt; cluster nodes</span><br><span class="line">1577e1769a77367dd4a626b316f4191224f726c6 127.0.0.1:7005 slave 8da8517b0edd30f30104e091d782d40803c0723d 0 1484203764628 6 connected</span><br><span class="line">7436728328935447bccc1c1b54e6eab372b8c4e1 127.0.0.1:7000 myself,master - 0 0 1 connected 0-5460</span><br><span class="line">8da8517b0edd30f30104e091d782d40803c0723d 127.0.0.1:7002 master - 0 1484203766133 3 connected 10923-16383</span><br><span class="line">3a3e3c8407ee19f9f762c3a7496fc0d213ee452d 127.0.0.1:7001 master - 0 1484203765631 2 connected 5461-10922</span><br><span class="line">48302b26e73b33da61914a33d62865ba0e83f6cb 127.0.0.1:7003 slave 7436728328935447bccc1c1b54e6eab372b8c4e1 0 1484203764127 4 connected</span><br><span class="line">5b75f1ce4b70e3a780016d3a77daea7adde432ce 127.0.0.1:7004 slave 3a3e3c8407ee19f9f762c3a7496fc0d213ee452d 0 1484203765129 5 connected</span><br><span class="line">127.0.0.1:7000&gt; cluster info</span><br><span class="line">cluster_state:ok</span><br><span class="line">cluster_slots_assigned:16384</span><br><span class="line">cluster_slots_ok:16384</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6</span><br><span class="line">cluster_size:3</span><br><span class="line">cluster_current_epoch:6</span><br><span class="line">cluster_my_epoch:1</span><br><span class="line">cluster_stats_messages_sent:1169</span><br><span class="line">cluster_stats_messages_received:1169</span><br><span class="line">127.0.0.1:7000&gt; set name hello</span><br><span class="line">-&gt; Redirected to slot [5798] located at 127.0.0.1:7001</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">redis-cli -c -p 7003</span><br><span class="line">127.0.0.1:7003&gt; get name</span><br><span class="line">-&gt; Redirected to slot [5798] located at 127.0.0.1:7001</span><br><span class="line">&quot;hello&quot;</span><br></pre></td></tr></table></figure><p>5、 <a href="http://blog.csdn.net/daiyudong2020/article/details/51674169">redis集群设置密码</a><br>注意事项：<br>1.如果是使用redis-trib.rb工具构建集群，集群构建完成前不要配置密码，集群构建完毕再通过config set + config rewrite命令逐个机器设置密码<br>2.如果对集群设置密码，那么requirepass和masterauth都需要设置，否则发生主从切换时，就会遇到授权问题，可以模拟并观察日志<br>3.各个节点的密码都必须一致，否则Redirected就会失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config set masterauth abc</span><br><span class="line">config set requirepass abc</span><br><span class="line">config rewrite</span><br></pre></td></tr></table></figure><p>config set masterauth “simonzhang”<br>config set requirepass “simonzhang”<br>config rewrite</p><p>密码方式访问：</p><p>redis-cli -p 7000 -a abc   //abc is password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#客户端关闭</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6380 shutdown</span><br><span class="line">#启动</span><br><span class="line">redis-server redis6379.conf &amp;</span><br><span class="line">redis-server redis6380.conf &amp;</span><br></pre></td></tr></table></figure><p>??? 主从切换<br><a href="http://www.2cto.com/database/201502/377061.html"></a></p><h3 id="3、搭建前哨sentinel"><a href="#3、搭建前哨sentinel" class="headerlink" title="3、搭建前哨sentinel"></a>3、搭建前哨sentinel</h3><p>配置<br>redis-sentinel ./sentinel001.conf &amp;<br>redis-sentinel ./sentinel002.conf &amp;<br>redis-sentinel ./sentinel003.conf &amp;</p><p>注：sentinel.conf中要指定redis服务器的网络ip地址.不能为本机地址（127.0.0.1/localhost）。这是在单机部署时一定要注意的。</p><p>在有sentinel的集群环境中报：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions:</span><br><span class="line">1) Just disable protected mode sending the command &#x27;CONFIG SET protected-mode no&#x27; from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent.</span><br><span class="line">2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to &#x27;no&#x27;, and then restarting the server.</span><br><span class="line">3) If you started the server manually just for testing, restart it with the &#x27;--protected-mode no&#x27; option.</span><br><span class="line">4) Setup a bind address or an authentication password.</span><br><span class="line"> NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</span><br></pre></td></tr></table></figure><h3 id="4、主从配置"><a href="#4、主从配置" class="headerlink" title="4、主从配置"></a>4、主从配置</h3><p>master 部署在192.168.0.99上，配置文件为redis.conf;slave部署在192.168.0.100上，从master上复制一份配置文件命名为redis-slave.conf,如果你是单机部署需要修改ip和端口号。<br>再在redis-slav.conf配置文件中增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slaveof 192.168.0.99 6379</span><br></pre></td></tr></table></figure><h3 id="5、配置文件"><a href="#5、配置文件" class="headerlink" title="5、配置文件"></a>5、配置文件</h3><p><a href="http://blog.csdn.net/u012173245/article/details/52041882">http://blog.csdn.net/u012173245/article/details/52041882</a><br><a href="http://yijiebuyi.com/blog/bc2b3d3e010bf87ba55267f95ab3aa71.html">http://yijiebuyi.com/blog/bc2b3d3e010bf87ba55267f95ab3aa71.html</a><br><a href="https://raw.githubusercontent.com/antirez/redis/3.0/redis.conf">https://raw.githubusercontent.com/antirez/redis/3.0/redis.conf</a></p><h3 id="6、参考资料"><a href="#6、参考资料" class="headerlink" title="6、参考资料"></a>6、参考资料</h3><p><a href="http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2">http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2</a><br><a href="http://blog.csdn.net/donggang1992/article/details/50981341">http://blog.csdn.net/donggang1992/article/details/50981341</a><br><a href="http://blog.csdn.net/zyz511919766/article/details/42268219">http://blog.csdn.net/zyz511919766/article/details/42268219</a><br><a href="http://www.cnblogs.com/stupidMartian/p/5904030.html">http://www.cnblogs.com/stupidMartian/p/5904030.html</a></p><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#修改为守护模式</span><br><span class="line">daemonize yes</span><br><span class="line">#设置进程锁文件</span><br><span class="line">pidfile /usr/local/redis/redis.pid</span><br><span class="line">#端口</span><br><span class="line">port 6379</span><br><span class="line">#客户端超时时间</span><br><span class="line">timeout 300</span><br><span class="line">#日志级别</span><br><span class="line">loglevel debug</span><br><span class="line">#日志文件位置</span><br><span class="line">logfile /usr/local/redis/log-redis.log</span><br><span class="line">#设置数据库的数量，默认数据库为0，可以使用SELECT &lt;dbid&gt;命令在连接上指定数据库id</span><br><span class="line">databases 8</span><br><span class="line">##指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</span><br><span class="line">#save &lt;seconds&gt; &lt;changes&gt;</span><br><span class="line">#Redis默认配置文件中提供了三个条件：</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">#指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，</span><br><span class="line">#可以关闭该#选项，但会导致数据库文件变的巨大</span><br><span class="line">rdbcompression yes</span><br><span class="line">#指定本地数据库文件名</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">#指定本地数据库路径</span><br><span class="line">dir /usr/local/redis/db/</span><br><span class="line">#指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能</span><br><span class="line">#会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有</span><br><span class="line">#的数据会在一段时间内只存在于内存中</span><br><span class="line">appendonly no</span><br><span class="line">#指定更新日志条件，共有3个可选值：</span><br><span class="line">#no：表示等操作系统进行数据缓存同步到磁盘（快）</span><br><span class="line">#always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）</span><br><span class="line">#everysec：表示每秒同步一次（折衷，默认值）</span><br><span class="line">appendfsync everysec</span><br></pre></td></tr></table></figure><h3 id="6、文档"><a href="#6、文档" class="headerlink" title="6、文档"></a>6、文档</h3><ul><li><a href="http://doc.redisfans.com/#">Redis 命令参考</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03. spring与jedis整合使用</title>
      <link href="/2017/01/17/devlang/03.spring%E4%B8%8EJedis%E6%95%B4%E5%90%88%E4%BD%BF%E7%94%A8/"/>
      <url>/2017/01/17/devlang/03.spring%E4%B8%8EJedis%E6%95%B4%E5%90%88%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>##03. spring与jedis整合使用</p><h3 id="spring-redis"><a href="#spring-redis" class="headerlink" title="spring redis"></a>spring redis</h3><ul><li><a href="http://www.cnblogs.com/LiZhiW/p/4853486.html">04.spring-data-redis与Jedis整合使用</a></li><li><a href="https://github.com/kangyonggan/spring-redis">spring整合redis实现无侵入式的缓存管理</a></li><li><a href="http://blog.csdn.net/u013725455/article/details/52129283">Spring集成Redis使用注解</a></li><li><a href="http://phipray.iteye.com/blog/2248352">SpringMVC+Shiro+RedisCluster搭建session统一管理</a></li><li><a href="https://github.com/alexxiyang/shiro-redis">shiro-redis</a><span id="more"></span></li></ul><h3 id="ehcache"><a href="#ehcache" class="headerlink" title="ehcache"></a>ehcache</h3><p>*<a href="http://elim.iteye.com/blog/2123030">Spring使用Cache、整合Ehcache</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于spring jpa 多表关系查询时，自定义返回对象</title>
      <link href="/2017/01/16/devlang/%E5%85%B3%E4%BA%8Espring-jpa-%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%9F%A5%E8%AF%A2%E6%97%B6%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1/"/>
      <url>/2017/01/16/devlang/%E5%85%B3%E4%BA%8Espring-jpa-%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%9F%A5%E8%AF%A2%E6%97%B6%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>比如在获取用户资料时，我们不想把密码等重要信息全部带出。那时，我们就要用到jpa query 返回指定字段。</p><p>我要在网上查找了下都是比较基础的单表查询。好了，如何写呢？</p><p>例如，下面的我们会将user的所有属性都会带出来，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> @Query(&quot;SELECT u FROM BaseUser u JOIN u.roles roles WHERE roles.roleCode = :roleCode)</span><br><span class="line"></span><br><span class="line"> List&lt;BaseUser&gt; findUserByRoleCode(@Param(&quot;roleCode&quot;) String roleCode);</span><br><span class="line"></span><br><span class="line"> ⚠：上面select 后面的 “u” 是一个BaseUser，包括所有的属性。这是我们所不需要的，它泄漏了太多的信息。</span><br></pre></td></tr></table></figure><span id="more"></span><p> 我们要指定字段，怎么定义呢？前面试了两次都失败了，最后参考<a href="https://my.oschina.net/u/1045177/blog/550173">Spring Data Jpa 查询返回自定义对象</a> 才解决，非常感谢。也分享下我的经验。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 1、 @Query(&quot;SELECT name,id,org FROM BaseUser u JOIN u.roles roles WHERE roles.roleCode = :roleCode)</span><br><span class="line"></span><br><span class="line"> ⚠ 这个根本就不能编译通过。</span><br><span class="line"></span><br><span class="line"> 2、 @Query(&quot;SELECT u.name,u.id,u.org  FROM BaseUser u JOIN u.roles roles WHERE roles.roleCode = :roleCode)</span><br><span class="line"></span><br><span class="line"> ⚠ 这个可以编译通过 但返回的不是BaseUser对象，只包括name，id属性和 org对象。不符合我的条件。</span><br><span class="line"></span><br><span class="line">3、@Query(&quot;SELECT new BaseUser(u.id,u.loginname,u.roles,u.org)  FROM BaseUser u JOIN u.roles roles WHERE roles.roleCode = :roleCode)</span><br></pre></td></tr></table></figure><p>只有这个是正确的，返回了baseUser对象。这个要注意的是必须在实体baseuser中创建相应的构造方法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 快捷键 mac版本</title>
      <link href="/2017/01/16/tools/idea_%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2017/01/16/tools/idea_%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA-快捷键［mac版本］"><a href="#IDEA-快捷键［mac版本］" class="headerlink" title="IDEA 快捷键［mac版本］"></a>IDEA 快捷键［mac版本］</h1><p>Mac键盘符号和修饰键说明</p><pre><code>⌘ Command⇧ Shift⌥ Option⌃ Control↩︎ Return/Enter⌫ Delete⌦ 向前删除键（Fn+Delete）↑ 上箭头↓ 下箭头← 左箭头→ 右箭头⇞ Page Up（Fn+↑）⇟ Page Down（Fn+↓）Home Fn + ←End Fn + →⇥ 右制表符（Tab键）⇤ 左制表符（Shift+Tab）⎋ Escape (Esc)</code></pre><span id="more"></span><p>##一、Editing（编辑）</p><pre><code>⌃Space 基本的代码补全（补全任何类、方法、变量）⌃⇧Space 智能代码补全（过滤器方法列表和变量的预期类型）⌘⇧↩ 自动结束代码，行末自动添加分号⌘P 显示方法的参数信息⌃J, Mid. button click 快速查看文档⇧F1 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）⌘+鼠标放在代码上 显示代码简要信息⌘F1 在错误或警告处显示具体描述信息⌘N, ⌃↩, ⌃N 生成代码（getter、setter、构造函数、hashCode/equals,toString）⌃O 覆盖方法（重写父类方法）⌃I 实现方法（实现接口中的方法）⌘⌥T 包围代码（使用if..else, try..catch, for, synchronized等包围选中的代码）⌘/ 注释/取消注释与行注释⌘⌥/ 注释/取消注释与块注释⌥↑ 连续选中代码块⌥↓ 减少当前选中的代码块⌃⇧Q 显示上下文信息⌥↩ 显示意向动作和快速修复代码⌘⌥L 格式化代码⌃⌥O 优化import⌃⌥I 自动缩进线⇥ / ⇧⇥ 缩进代码 / 反缩进代码⌘X 剪切当前行或选定的块到剪贴板⌘C 复制当前行或选定的块到剪贴板⌘V 从剪贴板粘贴⌘⇧V 从最近的缓冲区粘贴⌘D 复制当前行或选定的块⌘⌫ 删除当前行或选定的块的行⌃⇧J 智能的将代码拼接成一行⌘↩ 智能的拆分拼接的行⇧↩ 开始新的一行⌘⇧U 大小写切换⌘⇧] / ⌘⇧[ 选择直到代码块结束/开始⌥⌦ 删除到单词的末尾（⌦键为Fn+Delete）⌥⌫ 删除到单词的开头⌘+ / ⌘- 展开 / 折叠代码块⌘⇧+ 展开所以代码块⌘⇧- 折叠所有代码块⌘W 关闭活动的编辑器选项卡</code></pre><p>##二、Search/Replace（查询/替换）<br>    Double ⇧ 查询任何东西<br>    ⌘F 文件内查找<br>    ⌘G 查找模式下，向下查找<br>    ⌘⇧G 查找模式下，向上查找<br>    ⌘R 文件内替换<br>    ⌘⇧F 全局查找（根据路径）<br>    ⌘⇧R 全局替换（根据路径）<br>    ⌘⇧S 查询结构（Ultimate Edition 版专用，需要在Keymap中设置）<br>    ⌘⇧M 替换结构（Ultimate Edition 版专用，需要在Keymap中设置）<br>##三、Usage Search（使用查询）<br>    ⌥F7 / ⌘F7 在文件中查找用法 / 在类中查找用法<br>    ⌘⇧F7 在文件中突出显示的用法<br>    ⌘⌥F7 显示用法<br>##四、Compile and Run（编译和运行）<br>    ⌘F9  编译Project<br>    ⌘⇧F9 编译选择的文件、包或模块<br>    ⌃⌥R  弹出 Run 的可选择菜单<br>    ⌃⌥D  弹出 Debug 的可选择菜单<br>    ⌃R   运行<br>    ⌃D   调试<br>    ⌃⇧R, ⌃⇧D  从编辑器运行上下文环境配置<br>##五、Debugging（调试）<br>    F8     进入下一步，如果当前行断点是一个方法，则不进入当前方法体内<br>    F7     进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中<br>    ⇧F7 智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法<br>    ⇧F8 跳出<br>    ⌥F9 运行到光标处，如果光标前有其他断点会进入到该断点<br>    ⌥F8 计算表达式（可以更改变量值使其生效）<br>    ⌘⌥R 恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上<br>    ⌘F8 切换断点（若光标当前行有断点则取消断点，没有则加上断点）<br>    ⌘⇧F8 查看断点信息<br>##六、Navigation（导航）<br>    ⌘O 查找类文件<br>    ⌘⇧O 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/<br>    ⌘⌥O 前往指定的变量 / 方法<br>    ⌃← / ⌃→ 左右切换打开的编辑tab页<br>    F12 返回到前一个工具窗口<br>    ⎋ 从工具窗口进入代码文件窗口<br>    ⇧⎋ 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口<br>    ⌘⇧F4 关闭活动run/messages/find/… tab<br>    ⌘L 在当前文件跳转到某一行的指定处<br>    ⌘E 显示最近打开的文件记录列表<br>    ⌘⌥← / ⌘⌥→ 退回 / 前进到上一个操作的地方<br>    ⌘⇧⌫ 跳转到最后一个编辑的地方<br>    ⌥F1 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的Finder)<br>    ⌘B / ⌘ 鼠标点击 进入光标所在的方法/变量的接口或是定义处<br>    ⌘⌥B 跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口<br>    ⌥ Space, ⌘Y 快速打开光标所在方法、类的定义<br>    ⌃⇧B 跳转到类型声明处<br>    ⌘U 前往当前光标所在方法的父类的方法 / 接口定义<br>    ⌃↓ / ⌃↑ 当前光标跳转到当前文件的前一个/后一个方法名位置<br>    ⌘] / ⌘[ 移动光标到当前所在代码的花括号开始/结束位置<br>    ⌘F12 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）<br>    ⌃H 显示当前类的层次结构<br>    ⌘⇧H 显示方法层次结构<br>    ⌃⌥H 显示调用层次结构<br>    F2 / ⇧F2 跳转到下一个/上一个突出错误或警告的位置<br>    F4 / ⌘↓ 编辑/查看代码源<br>    ⌥ Home 显示到当前文件的导航条<br>    F3选中文件/文件夹/代码行，添加/取消书签<br>    ⌥F3 选中文件/文件夹/代码行，使用助记符添加/取消书签<br>    ⌃0…⌃9 定位到对应数值的书签位置<br>    ⌘F3 显示所有书签<br>##七、Refactoring（重构）<br>    F5 复制文件到指定目录<br>    F6 移动文件到指定目录<br>    ⌘⌫ 在文件上为安全删除文件，弹出确认框<br>    ⇧F6 重命名文件<br>    ⌘F6 更改签名<br>    ⌘⌥N 一致性<br>    ⌘⌥M 将选中的代码提取为方法<br>    ⌘⌥V 提取变量<br>    ⌘⌥F 提取字段<br>    ⌘⌥C 提取常量<br>    ⌘⌥P 提取参数<br>##八、VCS/Local History（版本控制/本地历史记录）<br>    ⌘K 提交代码到版本控制器<br>    ⌘T 从版本控制器更新代码<br>    ⌥⇧C 查看最近的变更记录<br>    ⌃C 快速弹出版本控制器操作面板<br>##九、Live Templates（动态代码模板）<br>    ⌘⌥J 弹出模板选择窗口，将选定的代码使用动态模板包住<br>    ⌘J 插入自定义动态代码模板<br>##十、General（通用）<br>    ⌘1…⌘9 打开相应编号的工具窗口<br>    ⌘S 保存所有<br>    ⌘⌥Y 同步、刷新<br>    ⌃⌘F 切换全屏模式<br>    ⌘⇧F12 切换最大化编辑器<br>    ⌥⇧F 添加到收藏夹<br>    ⌥⇧I 检查当前文件与当前的配置文件<br>    §⌃, ⌃` 快速切换当前的scheme（切换主题、代码样式等）<br>    ⌘, 打开IDEA系统设置<br>    ⌘; 打开项目结构对话框<br>    ⇧⌘A 查找动作（可设置相关选项）<br>    ⌃⇥ 编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上delete，则是关闭对应选中的窗口）<br>##十一、Other（一些官方文档上没有体现的快捷键）<br>    ⌘⇧8 竖编辑模式</p><p>##导航<br>    ⌘O 查找类文件 Ctrl + N<br>    ⌘⌥O 前往指定的变量 / 方法 Ctrl + Shift + Alt + N<br>    ⌃← / ⌃→ 左右切换打开的编辑tab页 Alt← / Alt→<br>    ⎋ 从工具窗口进入代码文件窗口 ESC<br>    ⌘L 在当前文件跳转到某一行的指定处 Ctrl + G<br>    ⌘E 显示最近打开的文件记录列表 Ctrl + E<br>    ⌘⌥← / ⌘⌥→ 退回 / 前进到上一个操作的地方 Ctrl + Alt + ← Ctrl + Alt + →<br>    ⌘⇧⌫ 跳转到最后一个编辑的地方<br>    ⌃H 显示当前类的层次结构 Ctrl + H<br>    ⌘⇧H 显示方法层次结构<br>    ⌃⌥H 显示调用层次结构<br>    F4 / ⌘↓ 编辑/查看代码源<br>    ⌘⌥U 显示类UML图<br>    ⌃J 查看注释</p><p>##编辑<br>    ⌥⌦ 删除到单词的末尾（⌦键为Fn+Delete）<br>    ⌥⌫ 删除到单词的开头<br>    ⌘+ / ⌘- 展开 / 折叠代码块<br>    ⌘F1 在错误或警告处显示具体描述信息<br>    ⌘⌥L 格式化代码<br>    ⌃⌥O 优化import<br>    ⇧↩ 开始新的一行<br>    ⌘⇧↩ 自动结束代码，行末自动添加分号<br>    ⌃I 实现方法（实现接口中的方法）<br>    ⇧F6 重命名文件或者变量<br>    ⌘N, ⌃↩, ⌃N 生成代码（getter、setter、构造函数、hashCode/equals,toString）<br>    ⌘P 显示方法的参数信息</p><p>##查找<br>    Double⇧ 查找任何东西<br>    ⌘⇧F 全局查找（根据路径）<br>    ⌘F 文件内查找<br>    ⌘G 查找模式下，向下查找<br>    ⌘⇧G 查找模式下，向上查找</p><p>##导航<br>    ⌘⌥B 跳转到接口的实现<br>    ⌘U 查看接口定义<br>    ⌘⌥← / ⌘⌥→ 退回 / 前进到上一个操作的地方<br>    ⌘B / ⌘ 鼠标点击 进入光标所在的方法/变量的接口或是定义处<br>    ⌃⇧B 跳转到类型声明处<br>    ⌥ Space, ⌘Y 快速打开光标所在方法、类的定义<br>    ⌘O 查找类文件<br>    ⌘⇧O 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/<br>    F12 返回到前一个工具窗口<br>    ⎋ 从工具窗口进入代码文件窗口<br>    ⇧⎋ 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口<br>    F3选中文件/文件夹/代码行，添加/取消书签<br>    ⌥F3 选中文件/文件夹/代码行，使用助记符添加/取消书签<br>    ⌃0…⌃9 定位到对应数值的书签位置<br>    ⌘F3 显示所有书签<br>    ⌥F1 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的Finder)<br>    ⌘F12 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</p><p>##通用<br>    ⌃⌘F 切换全屏模式</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sonar 配置服务默认路径问题</title>
      <link href="/2017/01/05/tools/sonar-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
      <url>/2017/01/05/tools/sonar-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>sonar 配置后台服务时，出现“Temp directory is not writable” 问题解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">WrapperSimpleApp: Encountered an error running main: java.lang.IllegalStateException: Temp directory is not writable: C:\Windows\system32\config\systemprofile\AppData\Local\Temp\</span><br><span class="line">java.lang.IllegalStateException: Temp directory is not writable: C:\Windows\system32\config\systemprofile\AppData\Local\Temp\</span><br><span class="line">at org.sonar.process.MinimumViableSystem.checkWritableDir(MinimumViableSystem.java:60)</span><br><span class="line">at org.sonar.process.MinimumViableSystem.checkWritableTempDir(MinimumViableSystem.java:52)</span><br><span class="line">at org.sonar.process.MinimumViableSystem.check(MinimumViableSystem.java:45)</span><br><span class="line">at org.sonar.application.App.main(App.java:108)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:597)</span><br><span class="line">at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)</span><br><span class="line">at java.lang.Thread.run(Thread.java:619)</span><br><span class="line">Caused by: java.io.IOException: 系统找不到指定的路径。</span><br><span class="line">at java.io.WinNTFileSystem.createFileExclusively(Native Method)</span><br><span class="line">at java.io.File.checkAndCreate(File.java:1704)</span><br><span class="line">at java.io.File.createTempFile(File.java:1792)</span><br><span class="line">at org.sonar.process.MinimumViableSystem.checkWritableDir(MinimumViableSystem.java:57)</span><br><span class="line">... 9 more</span><br><span class="line">&amp;lt;-- Wrapper Stopped</span><br><span class="line">The SonarQube service was launched, but failed to start.</span><br></pre></td></tr></table></figure><span id="more"></span><p>解决办法如下：</p><p>在conf目录找到wrapper.conf文件，打开。<br>在“wrapper.java.additional.1=-Djava.awt.headless=true”下增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###set temp dir ,solve Temp directory is not writable</span><br><span class="line">wrapper.java.additional.2=-Djava.io.tmpdir=../../temp`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于arcgis server性能优化</title>
      <link href="/2017/01/05/devlang/%E5%85%B3%E4%BA%8Earcgis-server%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
      <url>/2017/01/05/devlang/%E5%85%B3%E4%BA%8Earcgis-server%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>arcgis server安装后，池化“最大实例数”默认为2。可在“服务属性”对话框的池化选项卡中设置最大实例数，调整的原则为：首先应将实例数设置为等于 N+1，其中 N 是计算机上 CPU 核的数量。在个别情况下，如果您发现计算机上的 CPU 利用率未接近 90%，则可以考虑添加更多实例。</p><p><a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/00530000009r000000/">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/00530000009r000000/</a></p><span id="more"></span><p>其他的部署及参数要求可参考：</p><p><a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/000400000006000000/">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/000400000006000000/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> GIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于各项目临时表空间占用磁盘空间比较大，并且再持续增长的解决方案</title>
      <link href="/2017/01/05/db/%E5%85%B3%E4%BA%8E%E5%90%84%E9%A1%B9%E7%9B%AE%E4%B8%B4%E6%97%B6%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8D%A0%E7%94%A8%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%AF%94%E8%BE%83%E5%A4%A7%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%86%8D%E6%8C%81%E7%BB%AD%E5%A2%9E%E9%95%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2017/01/05/db/%E5%85%B3%E4%BA%8E%E5%90%84%E9%A1%B9%E7%9B%AE%E4%B8%B4%E6%97%B6%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%8D%A0%E7%94%A8%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%AF%94%E8%BE%83%E5%A4%A7%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%86%8D%E6%8C%81%E7%BB%AD%E5%A2%9E%E9%95%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h3 id="一、临时表空间的作用"><a href="#一、临时表空间的作用" class="headerlink" title="一、临时表空间的作用"></a>一、临时表空间的作用</h3><p>Oracle临时表空间主要用来做查询和存放一些缓冲区数据。临时表空间消耗的主要原因是需要对查询的中间结果进行排序，下面的操作都会<br>使用大量的temporary段 ：<br>索引create或rebuild；<br>Order by 或 group by；<br>Distinct 操作；<br>Union 或 intersect 或 minus；<br>Sort-merge joins；<br>IMP/EXP操作；</p><span id="more"></span><h3 id="二、临时表空间建多大合适，个人建议"><a href="#二、临时表空间建多大合适，个人建议" class="headerlink" title="二、临时表空间建多大合适，个人建议"></a>二、临时表空间建多大合适，个人建议</h3><p>1.一般的业务系统频繁使用临时段的需要单独创建临时表空间<br>2.临时表空间的太大或太小都会影响数据库性能，一般建议根据业务系统一天产生的大小作为初始大小。<br>3.临时表空间需要定期维护</p><h3 id="三、oracle11g-临时表空间收缩（只针对oracle11g以后版本）"><a href="#三、oracle11g-临时表空间收缩（只针对oracle11g以后版本）" class="headerlink" title="三、oracle11g 临时表空间收缩（只针对oracle11g以后版本）"></a>三、oracle11g 临时表空间收缩（只针对oracle11g以后版本）</h3><ol><li>常用查询临时表空间视图</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from v$datafile //查询数据文件</span><br><span class="line">select * from v$tablespace //查询表空间信息</span><br><span class="line">select * from v$tempfile //查询临时文件信息</span><br><span class="line">select S.tablespace_name,S.TABLESPACE_SIZE/1024/1024 TSIZE,S.ALLOCATED_SPACE/1024/1024 USIZE,S.FREE_SPACE/1024/1024 FFIZE from dba_temp_free_space S //查询临时表空间使用情况</span><br></pre></td></tr></table></figure><ol start="2"><li>临时表空间收缩</li></ol><p>收缩临时表空间：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace USER_TEMP_TBS shrink space keep 200M;</span><br></pre></td></tr></table></figure><p>收缩临时文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLESPACE USER_TEMP_TBS SHRINK TEMPFILE &#x27;/opt/oracle/oradata/user_temp_tbs01.dbf&#x27; keep 200M;</span><br></pre></td></tr></table></figure><p>以上操作已经在测试环境中验证过，可以立即收缩空间，对数据库无太大影响，如果是生产库建议晚上做以上操作，否则会出现等待事件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习实践指南</title>
      <link href="/2017/01/05/devlang/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2017/01/05/devlang/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="机器学习实践指南"><a href="#机器学习实践指南" class="headerlink" title="机器学习实践指南"></a>机器学习实践指南</h2><p><a href="http://blog.jobbole.com/112569/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts">http://blog.jobbole.com/112569/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts</a></p><p>你可能在各种应用中听说过机器学习machine learning（ML），比如垃圾邮件过滤、光学字符识别（OCR）和计算机视觉。</p><p>开启机器学习之旅是一个涉及多方面的漫长旅途。对于新手，有很多的书籍，有学术论文，有指导练习，有独立项目。在这些众多的选择里面，很容易迷失你最初想学习的目标。</p><p>所以在今天的文章中，我会列出 7 个步骤（和 50 多个资源）帮助你开启这个令人兴奋的计算机科学领域的大门，并逐渐成为一个机器学习高手。</p><p>请注意，这个资源列表并不详尽，只是为了让你入门。 除此之外，还有更多的资源。</p><span id="more"></span><h4 id="1、-学习必要的背景知识"><a href="#1、-学习必要的背景知识" class="headerlink" title="1、 学习必要的背景知识"></a>1、 学习必要的背景知识</h4><p>你可能还记得 DataCamp 网站上的学习数据科学这篇文章里面的信息图：数学和统计学是开始机器学习（ML）的关键。 基础可能看起来很容易，因为它只有三个主题。 但不要忘记这些实际上是三个广泛的话题。</p><p>在这里需要记住两件非常重要的事情：</p><p>首先，你一定会需要一些进一步的指导，以了解开始机器学习需要覆盖哪些知识点。<br>其次，这些是你进一步学习的基础。 不要害怕花时间，有了这些知识你才能构建一切。<br>第一点很简单：学习线性代数和统计学是个好主意。这两门知识是必须要理解的。但是在你学习的同时，也应该尝试学习诸如最优化和高等微积分等主题。当你越来越深入 ML 的时候，它们就能派上用场。</p><p>如果是从零开始的，这里有一些入门指南可供参考：</p><ul><li>Khan 学院 对于初学者是非常好的资源，可以考虑学习他们的<a href="http://open.163.com/special/Khan/linearalgebra.html">线性代数－网易</a>和<a href="http://open.163.com/special/Khan/differentialcalculus.html">微积分－网易</a>课程。</li><li>在 麻省理工学院 OpenCourseWare 网站上学习<a href="http://open.163.com/special/opencourse/daishu.html">线性代数－网易</a>、<a href="http://open.163.com/special/opencourse/weijifen.html">微积分－网易</a> 课程。</li><li>Coursera course 网站上对描述<a href="http://open.163.com/special/Khan/khstatistics.html">统计学</a>、<a href="http://open.163.com/special/Khan/probability.html">概率论</a>和推论统计学的介绍内容。</li></ul><p>图：统计学是学习 ML 的关键之一</p><p>如果你更多喜欢阅读书籍，请参考以下内容：</p><ul><li><a href="https://www.amazon.com/Linear-Algebra-Its-Applications-4th/dp/0030105676">线性代数及其应用</a>Linear Algebra and Its Applications</li><li><a href="https://www.amazon.com/Applied-Linear-Algebra-3rd-Noble/dp/0130412600">应用线性代数</a>Applied Linear Algebra</li><li><a href="https://www.amazon.de/Solved-Problems-Linear-Algebra-Schaums/dp/0070380236">线性代数解决的 3000 个问题</a>3,000 Solved Problems in Linear Algebra</li><li><a href="https://ocw.mit.edu/courses/online-textbooks/">麻省理工学院在线教材</a></li></ul><p>然而，在大多数情况下，你已经对统计学和数学有了一个初步的了解。很有可能你已经浏览过上面列举的的那些资源。</p><p>在这种情况下，诚实地回顾和评价你的知识是一个好主意，是否有一些领域是需要复习的，或者现在掌握的比较好的？</p><p>如果你一切都准备好了，那么现在是时候使用 R 或者 Python 应用这些知识了。作为一个通用的指导方针，选择一门语言开始是个好主意。另外，你仍然可以将另一门语言加入到你的技能池里。</p><p>为什么这些编程知识是必需的？</p><p>嗯，你会看到上面列出的课程（或你在学校或大学学习的课程）将为你提供关于数学和统计学主题的更理论性的介绍（而不是应用性的）。 然而，ML 非常便于应用，你需要能够应用你所学到的所有主题。 所以最好再次复习一遍之前的材料，但是这次需要付诸应用。</p><p>如果你想掌握 R 和 Python 的基础，可以看以下课程：</p><ul><li>DataCamp 上关于 Python 或者 R 的介绍性课程： <a href="https://www.datacamp.com/courses/intro-to-python-for-data-science">Python 语言数据科学介绍</a> 或者 <a href="https://www.datacamp.com/courses/free-introduction-to-r">R 语言编程介绍</a>。</li><li>Edx 上关于 Python 或者 R 的介绍性课程： <a href="https://www.edx.org/course/introduction-python-data-science-microsoft-dat208x-5">Python 语言数据科学介绍</a> 和 <a href="https://www.edx.org/course/introduction-r-data-science-microsoft-dat204x-4">R 语言数据科学介绍</a>。</li><li>还有很多其他免费的课程。查看 <a href="http://www.coursera.org/">Coursera</a> 或者 <a href="https://www.codecademy.com/">Codeacademy</a> 了解更多。</li></ul><p>当你打牢基础知识后，请查看 DataCamp 上的博客 <a href="https://www.datacamp.com/community/tutorials/python-statistics-data-science">Python 统计学：40+ 数据科学资源</a>。 这篇文章提供了统计学方面的 40 多个资源，这些资源都是你开始数据科学（以及 ML）需要学习的。</p><p>还要确保你查看了关于向量和数组的 <a href="https://www.datacamp.com/community/tutorials/python-scipy-tutorial">这篇 SciPy 教程</a>文章，以及使用 Python 进行科学计算的<a href="http://www.math.pitt.edu/~siam/workshops/python10/python.pdf">研讨会</a>。</p><p>要使用 Python 和微积分进行实践，你可以了解下 <a href="http://docs.sympy.org/latest/tutorial/calculus.html">SymPy 软件包</a>。</p><h4 id="2、-不要害怕在-ML-的“理论”上浪费时间"><a href="#2、-不要害怕在-ML-的“理论”上浪费时间" class="headerlink" title="2、 不要害怕在 ML 的“理论”上浪费时间"></a>2、 不要害怕在 ML 的“理论”上浪费时间</h4><p>很多人并不会花很多精力去浏览理论材料，因为理论是枯燥的、无聊的。但从长远来看，在理论知识上投入时间是至关重要的、非常值得的。 你将会更好地了解机器学习的新进展，也能和背景知识结合起来。 这将有助于你保持学习积极性。</p><p>此外，理论并不会多无聊。 正如你在介绍中所看到的，你可以借助非常多的资料深入学习。</p><p>书籍是吸收理论知识的最佳途径之一。 它们可以让你停下来想一会儿。 当然，看书是一件非常平静的事情，可能不符合你的学习风格。 不过，请尝试阅读下列书籍，看看它是否适合你：</p><ul><li><a href="http://www.cs.cmu.edu/~tom/mlbook.html">机器学习教程</a>Machine Learning textbook， Tom Mitchell 著，书可能比较旧，但是却很经典。这本书很好的解释介绍了机器学习中最重要的课题，步骤详尽，逐层深入。</li><li>机器学习: 使数据有意义的算法艺术和科学Machine Learning: The Art and Science of Algorithms that Make Sense of Data（你可以在<a href="http://www.cs.bris.ac.uk/~flach/mlbook/materials/mlbook-beamer.pdf">这里</a>看到这本书的幻灯片版本）：这本书对初学者来说非常棒。 里面讨论了许多实践中的应用程序，其中有一些是在 Tom Mitchell 的书中缺少的。</li><li><a href="http://www.mlyearning.org/">机器学习之向往</a>Machine Learning Yearning ：这本书由吴恩达Andrew Ng编写的，仍未完本，但对于那些正在学习 ML 的学生来说，这一定是很好的参考资料。</li><li><a href="https://www.amazon.com/Algorithms-Data-Structures-Applications-Practitioner/dp/0134894286">算法与数据结构</a>Algorithms and Data Structures  由 Jurg Nievergelt 和 Klaus Hinrichs 著。</li><li>也可以参阅 Matthew North 的<a href="https://www.amazon.com/Data-Mining-Masses-Matthew-North/dp/0615684378">面向大众的数据挖掘</a>Data Mining for the Masses。 你会发现这本书引导你完成一些最困难的主题。</li><li><a href="http://alex.smola.org/drafts/thebook.pdf">机器学习介绍</a>Introduction to Machine Learning  由 Alex Smola 和 S.V.N. Vishwanathan 著。</li></ul><p>花些时间看书并研究其中涵盖的资料</p><p>视频和慕课对于喜欢边听边看来学习的人来说非常棒。 慕课和视频非常的多，多到可能你都很难找到适合你的。 下面列出了最知名的几个：</p><ul><li><a href="https://www.coursera.org/learn/machine-learning">这个著名的机器学习慕课</a>，是吴恩达Andrew Ng讲的，介绍了机器学习及其理论。 别担心，这个慕课讲的非常好，一步一步深入，所以对初学者来说非常适用。</li><li><a href="https://youtu.be/TjZBTDzGeGg?list=PLnvKubj2-I2LhIibS8TOGC42xsD3-liux">麻省理工学院 Open Courseware 的 6034 课程的节目清单</a>，已经有点前沿了。 在你开始本系列之前，你需要做一些 ML 理论方面的准备工作，但是你不会后悔的。</li></ul><p>在这一点上，重要的是要将各种独立的技术融会贯通，形成整体的结构图。 首先了解关键的概念：监督学习supervised learning和无监督学习unsupervised learning的区别、分类和回归等。 手动（书面）练习可以派上用场，能帮你了解算法是如何工作的以及如何应用这些算法。 在大学课程里你经常会找到一些书面练习，可以看看波特兰州立大学的 <a href="http://web.cecs.pdx.edu/~mm/MachineLearningSpring2017/">ML 课程</a>。</p><h4 id="3、-开始动手"><a href="#3、-开始动手" class="headerlink" title="3、 开始动手"></a>3、 开始动手</h4><p>通过看书和看视频了解理论和算法都非常好，但是需要超越这一阶段，就要开始做一些练习。你要学着去实现这些算法，应用学到的理论。</p><p>首先，有很多介绍 Python 和 R 方面的机器学习的基础知识。当然最好的方法就是使用交互式教程：</p><ul><li><a href="https://www.datacamp.com/community/tutorials/machine-learning-python">Python 机器学习：Scikit-Learn 教程</a>，在这篇教程里面，你可以学到使用 Scikit-Learn 构建模型的 KMeans 和支持向量机（SVM）相关的知名算法。</li><li><a href="https://www.datacamp.com/community/tutorials/machine-learning-in-r">给初学者的 R 语言机器学习教程</a> 用 R 中的类和 caret 包介绍机器学习。</li><li>[<a href="https://www.datacamp.com/community/tutorials/deep-learning-python">Keras 教程：Python 深度学习25</a> 涵盖了如何一步一步的为分类和回归任务构建多层感知器（MLP）。</li></ul><p>还请查看以下静态的（非互动的）教程，这些需要你在 IDE 中操作：</p><ul><li><a href="http://machinelearningmastery.com/machine-learning-in-python-step-by-step/">循序渐进：Python 机器学习</a>： 一步一步地学习 Scikit-Learn。</li><li><a href="http://machinelearningmastery.com/tutorial-first-neural-network-python-keras/">循序渐进：使用 Keras 开发你的第一个神经网络</a>： 按这个教程一步一步地使用 Keras 开发你的第一个神经网络。</li><li>你可以考虑看更多的教程，但是<a href="http://www.machinelearningmastery.com/">机器学习精要</a>这篇教程是非常好的。</li></ul><p>除了教程之外，还有一些课程。参加课程可以帮助你系统性地应用学到的概念。 经验丰富的导师很有帮助。 以下是 Python 和机器学习的一些互动课程：</p><ul><li><a href="https://www.datacamp.com/courses/supervised-learning-with-scikit-learn">用 scikit-learn 做监督学习</a>： 学习如何构建预测模型，调整参数，并预测在未知数据上执行的效果。你将使用 Scikit-Learn 操作真实世界的数据集。</li><li><a href="https://www.datacamp.com/courses/unsupervised-learning-in-python">用 Python 做无监督学习</a>： 展示给你如何从未标记的数据集进行聚类、转换、可视化和提取关键信息。 在课程结束时，还会构建一个推荐系统。</li><li><a href="https://www.datacamp.com/courses/deep-learning-in-python">Python 深度学习</a>： 你将获得如何使用 Keras 2.0 进行深度学习的实践知识，Keras 2.0 是前沿的 Python 深度学习库 Keras 的最新版本。</li><li><a href="https://www.coursera.org/learn/python-machine-learning">在 Python 中应用机器学习</a>： 将学习者引入到机器学习实践中，更多地关注技术和方法，而不是这些方法背后的统计学知识。</li></ul><p>视频课程：<br><a href="http://open.163.com/special/opencourse/machinelearning.html">斯坦福大学公开课 ：机器学习课程</a><br><a href="https://study.163.com/topics/deepLearning/?utm_source=baidu&utm_medium=cpc&utm_campaign=affiliate&utm_term=DeepLearning03&utm_content=SEM">人工智能</a></p><p>理论学习之后，花点时间来应用你所学到的知识。</p><p>对于那些正在学习 R 语言机器学习的人，还有这些互动课程：</p><ul><li><a href="https://www.datacamp.com/courses/introduction-to-machine-learning-with-r">机器学习介绍</a> 可以让你宏观了解机器学习学科最常见的技术和应用，还可以更多地了解不同机器学习模型的评估和训练。这门课程剩下的部分重点介绍三个最基本的机器学习任务： 分类、回归和聚类。</li><li><a href="https://www.datacamp.com/courses/unsupervised-learning-in-r">R 语言无监督学习</a> ，用 R 语言从 ML 角度提供聚类和降维的基本介绍。 可以让你尽快获得数据的关键信息。</li><li><a href="https://www.coursera.org/learn/practical-machine-learning">实操机器学习</a>涵盖了构建和应用预测功能的基本组成部分，其重点是实际应用。</li></ul><p>最后，还有很多书籍以偏向实践的方式介绍了 ML 主题。 如果你想借助书籍内容和 IDE 来学习，请查看这些书籍：</p><ul><li><a href="https://github.com/rasbt/python-machine-learning-book">Python 机器学习</a>Python Machine Learning Book，Sebastian Raschka 著。</li><li><a href="https://github.com/rasbt/deep-learning-book">人工神经网络与深度学习导论：Python 应用实用指南</a>Introduction to Artificial Neural Networks and Deep Learning: A Practical Guide with Applications in Python，Sebastian Raschka 著。</li><li><a href="https://books.google.be/books/about/Machine_Learning_with_R.html?id=ZQu8AQAAQBAJ&amp;amp;amp;amp;amp;source=kp_cover&amp;amp;amp;amp;amp;redir_esc=y">R 语言机器学习</a>Machine Learning with R，Brett Lantz 著。<h4 id="4、-练习"><a href="#4、-练习" class="headerlink" title="4、 练习"></a>4、 练习</h4></li></ul><p>实践比使用 Python 进行练习和修改材料更重要。 这一步对我来说可能是最难的。 在做了一些练习后看看其他人是如何实现 ML 算法的。 然后，开始你自己的项目，阐述你对 ML 算法和理论的理解。</p><p>最直接的方法之一就是将练习的规模做得更大些。 要做一个更大的练习，就需要你做更多的数据清理和功能工程。</p><ul><li>从 <a href="http://www.kaggle.com/">Kaggle</a> 开始。 如果你需要额外的帮助来征服所谓的“数据恐惧”，请查看 <a href="https://www.datacamp.com/community/open-courses/kaggle-python-tutorial-on-machine-learning">Kaggle 的 Python 机器学习教程</a> 和 <a href="https://www.datacamp.com/community/open-courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic">Kaggle 的 R 语言机器学习教程</a>。 这些将带给您快速的提升。</li><li>此后，你也可以自己开始挑战。 查看这些网站，您可以在其中找到大量的 ML 数据集：<a href="http://archive.ics.uci.edu/ml/">UCI 机器学习仓库</a>，<a href="http://homepages.inf.ed.ac.uk/rbf/IAPR/researchers/MLPAGES/mldat.htm">用于机器学习的公开数据集</a> 和 <a href="https://data.world/">data.world</a>。</li></ul><p>熟能生巧。</p><h4 id="5、-项目"><a href="#5、-项目" class="headerlink" title="5、 项目"></a>5、 项目</h4><p>虽然做一些小的练习也不错，但是在最后，您需要做一个项目，可以在其中展示您对使用到的 ML 算法的理解。</p><p>最好的练习是实现你自己的 ML 算法。 您可以在以下页面中阅读更多关于为什么您应该做这样的练习，以及您可以从中学到什么内容：</p><ul><li><a href="https://www.quora.com/Why-is-there-a-need-to-manually-implement-machine-learning-algorithms-when-there-are-many-advanced-APIs-like-tensorflow-available">为什么有许多先进的 API，比如 tensorflow，还需要自己手动实现机器学习的算法？</a></li><li><a href="http://www.kdnuggets.com/2016/05/implement-machine-learning-algorithms-scratch.html">为什么要从头开始实现机器学习算法？</a></li><li><a href="http://www.jeannicholashould.com/what-i-learned-implementing-a-classifier-from-scratch.html">使用 Python 从头开始实现一个分类器，我能从中学到什么？</a></li></ul><p>接下来，您可以查看以下文章和仓库。 可以从中获得一些灵感，并且了解他们是如何实现 ML 算法的。</p><ul><li><a href="http://machinelearningmastery.com/how-to-implement-a-machine-learning-algorithm/">如何实现机器学习算法</a></li><li><a href="https://github.com/eriklindernoren/ML-From-Scratch">从头开始学习机器学习</a></li><li><a href="https://github.com/madhug-nadig/Machine-Learning-Algorithms-from-Scratch">从头开始学习机器学习算法</a></li></ul><p>开始时项目可能会很难，但是可以极大增加你的理解。</p><h4 id="6、-不要停止"><a href="#6、-不要停止" class="headerlink" title="6、 不要停止"></a>6、 不要停止</h4><p>对 ML 的学习永远不能停止，即使你在这个领域工作了十年，总是有新的东西要学习，许多人都将会证实这一点。</p><p>例如，ML 趋势，比如深度学习deep learning现在就很受欢迎。你也可以专注于那些现在不怎么火，但是将来会火的话题上。如果你想了解更多，可以看看<a href="https://www.quora.com/Should-I-quit-machine-learning">这个有趣的问题和答案</a>。</p><p>当你苦恼于掌握基础知识时，你最先想到的可能不是论文。 但是它们是你紧跟最新研究的一个途径。 论文并不适合刚刚开始学习的人，但是绝对适合高级人员。</p><ul><li><a href="http://www.kdnuggets.com/2017/04/top-20-papers-machine-learning.html">20 篇最新的机器学习和深度学习领域的顶级研究论文</a></li><li><a href="http://www.jmlr.org/">机器学习研究杂志</a></li><li><a href="https://github.com/terryum/awesome-deep-learning-papers">优秀的深度学习论文</a></li><li><a href="https://www.quora.com/What-are-some-of-the-best-research-papers-books-for-Machine-learning">机器学习的一些最好的研究论文和书籍</a></li></ul><p>其他技术也是需要考虑的。 但是当你刚开始学习时，不要担心这些。 例如，您可以专注于 Python 或 R 语言 （取决于你已经知道哪一个），并把它到你的技能池里。 你可以通过这篇文章来查找一些感兴趣的资源。</p><p>如果您还想转向大数据，您可以考虑研究 Spark。 这里有一些有趣的资源：</p><ul><li><p><a href="https://www.datacamp.com/courses/introduction-to-spark-in-r-using-sparklyr">在 R 语言中使用 sparklyr 来了解 Spark</a></p></li><li><p><a href="https://www.edx.org/xseries/data-science-engineering-apache-spark">Spark 数据科学与工程</a></p></li><li><p><a href="https://www.edx.org/course/introduction-apache-spark-uc-berkeleyx-cs105x">介绍 Apache Spark</a></p></li><li><p><a href="https://www.edx.org/course/distributed-machine-learning-apache-uc-berkeleyx-cs120x">Apache Spark 分布式机器学习</a></p></li><li><p><a href="https://www.edx.org/course/big-data-analysis-apache-spark-uc-berkeleyx-cs110x">用 Apache Spark 进行大数据分析</a></p></li><li><p><a href="https://www.datacamp.com/community/tutorials/apache-spark-python">初学者指南：用 Python 操作 Apache Spark</a></p></li><li><p><a href="https://www.datacamp.com/community/blog/pyspark-cheat-sheet-python">PySpark RDD 速查表</a></p></li><li><p><a href="https://www.datacamp.com/community/blog/pyspark-sql-cheat-sheet">PySpark SQL 速查表</a><br>其他编程语言，比如 Java、JavaScript、C 和 C++ 在 ML 中越来越重要。 从长远来看，您可以考虑将其中一种语言添加到学习列表中。 你可以使用这些博客文章来指导你选择：</p></li><li><p><a href="https://fossbytes.com/popular-top-programming-languages-machine-learning-data-science/">机器学习和数据科学最流行的编程语言</a></p></li><li><p><a href="http://www.kdnuggets.com/2017/01/most-popular-language-machine-learning-data-science.html">机器学习和数据科学最流行的语言是…</a></p></li></ul><p>学无止境。</p><h4 id="7、-利用一切可以利用的资源"><a href="#7、-利用一切可以利用的资源" class="headerlink" title="7、 利用一切可以利用的资源"></a>7、 利用一切可以利用的资源</h4><p>机器学习是一个充满难度的话题，有时候可能会让你失去动力。 或者也许你觉得你需要点改变。 在这种情况下，请记住，有很多资源可以让你打消掉这种想法。 查看以下资源：</p><p>播客是可以让你继续你的 ML 旅程，紧跟这个领域最新的发展的伟大资源：</p><ul><li><a href="http://www.thetalkingmachines.com/">谈论机器</a></li><li><a href="https://dataskeptic.com/">数据怀疑论者</a></li><li><a href="http://lineardigressions.com/">线性化</a></li><li><a href="https://twimlai.com/">本周的机器学习及 AI</a></li><li><a href="http://www.learningmachines101.com/">机器学习 101</a></li></ul><p>当然，还有更多的播客。</p><p><strong>文档和软件包源代码</strong>是深入了解 ML 算法的实现的两种方法。 查看这些仓库：</p><ul><li><a href="https://github.com/scikit-learn/scikit-learn">Scikit-Learn</a>：知名的 Python ML 软件包</li><li><a href="http://www.github.com/fchollet/keras">Keras</a>： Python 深度学习软件包</li><li><a href="http://topepo/caret">caret</a>： 非常受欢迎的用于分类和回归训练 R 软件包</li></ul><p>可视化是深入 ML 理论的最新也是最流行的方式之一。 它们对初学者来说非常棒，但对于更高级的学习者来说也是非常有趣的。 你肯定会被下面这些可视化资源所吸引，它们能让你更加了解 ML 的工作原理：</p><ul><li><a href="http://www.r2d3.us/visual-intro-to-machine-learning-part-1/">机器学习的可视化介绍</a></li><li><a href="http://distill.pub/">Distill</a> 使 ML 研究清晰，动态和生动。</li><li>如果你想玩下神经网络架构，可以看下 <a href="http://playground.tensorflow.org/">Tensorflow – 神经网络游乐场</a>。</li><li>更多的看这里：<a href="https://www.quora.com/What-are-the-best-visualizations-of-machine-learning-algorithms">机器学习算法最佳的可视化方法是什么？</a></li></ul><p>学习中的一些变化更加能激励你。</p><p>现在你可以开始了</p><p>现在一切都取决于你自己了。学习机器学习是一个持续的过程，所以开始的越早就会越好。 运用你手边的一切工具开始吧。 祝你好运，并确保让我们知道你的进步。<br>这篇文章是我基于 Quora 问题（<a href="https://www.quora.com/How-does-a-total-beginner-start-to-learn-machine-learning/answer/Karlijn-Willems-1">小白该如何开始机器学习</a>）给出的答案。</p><h3 id="小白该如何开始机器学习"><a href="#小白该如何开始机器学习" class="headerlink" title="小白该如何开始机器学习"></a>小白该如何开始机器学习</h3><p>考虑到我自己没有任何数学或统计背景，我大约两年前开始学习机器。开始时很难，但考虑到你已经有了一些编程经验，一定会有优势的。</p><p>这里有一些学习机器学习的技巧：</p><p>1.<strong>评估，刷新和学习数学和统计数据</strong>。这可能是一个很难的，因为我真的没有想法要找什么。如今，我建议您通过这个列表（40+ Python数据科学资源统计），并通过使用Python应用程序尽可能多地学习。对于数学，我考虑在汗学院学习线性代数。</p><p>2.<strong>不要害怕投资“理论”</strong>。我听到很多的是，人们不会努力通过一些更干燥/理论的材料。但是，从长远来看，这是非常有价值的。我经历了机器学习教科书，同时我看了机器学习 - 斯坦福大学的视频 Coursera。我认为这些都是非常有启发性的，并从中获得了坚实的基础。</p><p>3.<strong>获取动手</strong>。我提到的这些材料是建立基础的好东西，但你也应该能够应用你所学到的概念。您可以考虑参加机器学习课程介绍 Udacity，还可以看看在Python中使用scikit学习和无监督学习的监督学习。</p><p>4.<strong>实践</strong>。但是，比使用Python进行实践和修改材料更重要，正在练习。这一步对我来说可能是最难的。我没有找到任何我喜欢的材料，那就是我的水平，所以我不得不自己做大部分的事情。最近，我为初学者编写了一个Python机器学习教程：Python机器学习：Scikit学习教程。我也推荐Kaggle Python教程机器学习。</p><p>5.<strong>不要害怕项目</strong>。之后，请考虑通过您的数据科学家开始一些项目。确保把你的代码放在Github上，让别人看到你的进度和讨论。</p><p>6.<strong>不要停止</strong> 总有新材料出现，如果您正在关注机器学习播客，您将始终掌握最新消息。我也考虑进入R进行机器学习。以下课程可以帮助您做到这一点：免费介绍R编程在线课程，OpenIntro，数据分析和统计推理，基本统计或统计与R Track | DataCamp的基础和统计与R和机器学习介绍 - 在线课程，R：无人值守学习和机器学习在R初学者机器学习。</p><p>7.<strong>利用所有在那里的材料</strong>。除了播客之外，还有很好的文档，这绝对会帮助你摆脱困境，并征服数据恐惧：scikit学习：Python中的机器学习，Keras文档和作弊表，如选择正确的估计器，Scikit-Learn作弊表：Python机器学习，Keras作弊表：Python中的神经网络，或其他材料，如机器学习的视觉介绍，与GIF集成的Scikit。<br>祝你好运！</p><p>视频：<br>网易和MOOC上适合电气工程及其自动化专<br>MOOC</p><ul><li><p><a href="http://mooc.guokr.com/course/1304/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%EF%BC%88%E4%B8%80%EF%BC%89/">高等数学（一）</a>（5.20开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1479/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%EF%BC%88%E4%BA%8C%EF%BC%89/">高等数学（二）</a>（7.22开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1480/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%EF%BC%88%E4%B8%89%EF%BC%89/">高等数学（二）</a>（10.8开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1481/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%EF%BC%88%E5%9B%9B%EF%BC%89/">高等数学（二）</a>（5.20开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1482/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%EF%BC%88%E4%BA%94%EF%BC%89/">高等数学（二）</a>（7.22开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1040/%E5%BE%AE%E7%A7%AF%E5%88%86B-1-/">微积分B(1)</a>（9.22开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1525/%E5%BE%AE%E7%A7%AF%E5%88%86-1/">微积分-1</a>（9.22开课）<br>Calculus: </p></li><li><p><a href="http://mooc.guokr.com/course/236/Calculus--Single-Variable/">Single Variable单变量微积分</a>（9.8开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1472/2014%E5%BE%AE%E7%A9%8D%E5%88%86%E5%B0%8E%E8%AB%96/">微积分导论</a>（7.14开课）<br><a href="http://mooc.guokr.com/course/523/Calculus-One/">Calculus One微积分基础</a></p></li><li><p><a href="http://mooc.guokr.com/course/558/Calculus-Two--Sequences-and-Series/">Calculus Two: Sequences andSeries微积分（二）：数列与级数</a>（3.1开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1282/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-1-/">线性代数(1)</a>（9.25开课）</p></li><li><p><a href="http://mooc.guokr.com/course/791/Linear-Algebra---Foundations-to-Frontiers/">Linear Algebra - Foundationsto Frontiers线性代数-从基础到前沿</a>（1.15开课）</p></li><li><p><a href="http://mooc.guokr.com/course/145/Introduction-to-Statistics--Probability/">统计学导论：概率</a>（4.14开课）</p></li><li><p><a href="http://mooc.guokr.com/course/881/Introduction-to-Probability---The-Science-of-Uncertainty/">Introduction to Probability -The Science of Uncertainty概率论入门：不确定性</a>（2.4开课）</p></li><li><p><a href="http://mooc.guokr.com/course/107/Elementary-Statistics/">Elementary Statistics统计学基础</a></p></li><li><p><a href="http://mooc.guokr.com/course/1438/%E7%94%B5%E8%B7%AF%E5%8E%9F%E7%90%86/">电路原理</a>（9.15开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1597/%E7%94%B5%E8%B7%AF/">电路</a>（9.16开课）</p></li><li><p><a href="http://mooc.guokr.com/course/565/Principles-of-Electric-Circuits--Part-1/">电路原理1</a></p></li><li><p><a href="http://mooc.guokr.com/course/814/%E7%94%B5%E8%B7%AF%E5%8E%9F%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89/">电路原理2</a></p></li><li><p><a href="https://www.edx.org/course/mitx/mitx-6-002x-circuits-electronics-2606#.U8YYZ_mSxSU/">Circuits and Electronics电路与电子学</a>（8.25开课）</p></li><li><p><a href="http://mooc.guokr.com/course/550/Introduction-to-Power-Electronics/">Introduction to PowerElectronics电力电子学</a>（9.1开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1602/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%863%EF%BC%9A%E7%94%B5%E7%A3%81%E5%AD%A6/">大学物理3：电磁学</a>（9.16开课）</p></li><li><p><a href="http://mooc.guokr.com/course/557/Electricity-and-Magnetism/">Electricity and Magnetism电磁学</a>(13年开课)</p></li><li><p><a href="http://mooc.guokr.com/course/1526/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%862--%E7%94%B5%E7%A3%81%E5%AD%A6%E3%80%81%E5%85%89%E5%AD%A6%E5%92%8C%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86-/">大学物理2 (电磁学、光学和量子物理)</a>（10.6开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1305/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86-%E7%94%B5%E7%A3%81%E5%AD%A6/">大学物理-电磁学</a>（5.20开课）</p></li><li><p><a href="http://mooc.guokr.com/course/123/Electricity---Magnetism/">Electricity &amp; Magnetism电磁学</a>（1.13开课）</p></li><li><p><a href="http://mooc.guokr.com/course/1446/Electrify--An-Introduction-to-Electrical-and-Electronic-Engineering/">Electrify: An Introduction toElectrical and Electronic Engineering电气化：电气和电子工程</a>（9.22开课）</p></li><li><p><a href="http://mooc.guokr.com/course/684/Modelling-and-Simulation-using-MATLAB/">Modelling and Simulation usingMATLAB用MATLAB建模和仿真</a>（4.22开课）</p></li><li><p><a href="http://mooc.guokr.com/course/884/Discrete-Time-Signals-and-Systems/">Discrete Time Signals andSystems离散时间信号与系统</a>（2.14开课）</p></li></ul><p>网易：</p><ul><li><a href="http://v.163.com/special/opencourse/daishu.html">麻省理工公开课：线性代数</a>本课程共35集翻译完</li><li><a href="http://v.163.com/special/Khan/linearalgebra.html">可汗学院公开课：线性代数</a>本课程共143集翻译完</li><li><a href="http://v.163.com/special/Khan/precalculus.html">可汗学院公开课：微积分预备</a>本课程共44集网易正在翻译37-44集</li><li><a href="http://v.163.com/special/Khan/differentialcalculus.html">可汗学院公开课：微积分-微分学</a>本课程共57集网易正在翻译5-57集</li><li><a href="http://v.163.com/special/opencourse/equations.html">麻省理工学院公开课：微分方程</a>本课程共33集(缺18集) 翻译完</li><li><a href="http://v.163.com/special/Khan/differential.html">可汗学院公开课：微分方程</a>本课程共45集翻译完</li><li><a href="http://v.163.com/special/opencourse/weijifen.html">麻省理工学院公开课：微积分重点</a>本课程共18集翻译完</li><li><a href="http://v.163.com/special/opencourse/calculus.html">麻省理工学院公开课：单变量微积分习题课</a>本课程共87集网易正在翻译75-87集</li><li><a href="http://v.163.com/special/opencourse/multivariable.html">麻省理工学院公开课：多变量微积分</a>本课程共35集翻译完</li><li><a href="http://v.163.com/special/opencourse/fouriertransforms.html">斯坦福大学公开课：傅里叶变换及其应用</a>本课程共30集翻译完</li><li><a href="http://v.163.com/special/Khan/probability.html">可汗学院公开课：概率</a>本课程共55集翻译完</li><li><a href="http://v.163.com/special/Khan/khstatistics.html">可汗学院公开课：统计学</a>本课程共85集翻译完</li><li><a href="http://v.163.com/special/fundamentalsofphysics/">耶鲁大学开放课程：基础物理</a>本课程共24集翻译完</li><li><a href="http://v.163.com/special/opencourse/circuits.html">麻省理工公开课：电路和电子学</a>本课程共25集翻译完</li><li><a href="http://v.163.com/special/opencourse/signals.html">麻省理工学院公开课：信号与系统：模拟与数字信号处理</a>本课程共26集网易正在翻译19-26集</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac OS X上安装配置apache服务器</title>
      <link href="/2016/06/16/devlang/mac%20os%20%E5%AE%89%E8%A3%85apache/"/>
      <url>/2016/06/16/devlang/mac%20os%20%E5%AE%89%E8%A3%85apache/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac-OS-X上安装配置apache服务器"><a href="#Mac-OS-X上安装配置apache服务器" class="headerlink" title="Mac OS X上安装配置apache服务器"></a>Mac OS X上安装配置apache服务器</h1><p>说明：Mac在安装完成Mac系统的时候它已经自带了apache服务器，接下来就是配置和将它启动运行了。那么接下来要做的事情就是：</p><pre><code>1.配置apache的配置文件2.设置虚拟主机</code></pre><p>启动并查看apache<br>打开终端输入以下命令：</p><pre><code>$sudo apachectl start$sudo apachectl -v</code></pre><span id="more"></span><p>配置apache主配置文件<br>apache的主配置文件在路径／etc／apache2/下</p><pre><code>先将原来的文件备份$sudo cp /etc/apache2/httpd.conf /etc/apache2/httpd.conf.backup修改主配置文件$vi /etc/apache2/httpd.conf</code></pre><p>要修改的地方如下,为了便于参考默认配置，笔者将只是将修改的地方注释掉</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /&gt;</span><br><span class="line">    #AllowOverride none</span><br><span class="line">    # Require all denied</span><br><span class="line">    Require all granted</span><br><span class="line">    AllowOverride all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"># Virtual hosts</span><br><span class="line">#Include /private/etc/apache2/extra/httpd-vhosts.conf</span><br><span class="line">Include /private/etc/apache2/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>Ps：某些老版本的配置中时allow什么的在网上能找到非常多的教程，在这就不加解释了。</p><p>设置虚拟主机</p><p>apache的默认的根目录在/Library/WebServer/下，配置虚拟主机后可以不用理会默认的网站根目录，根据自己的需要在合适的地方建立不同的网站目录。</p><p>修改httpd-vhosts.conf文件，文件位置在／etc／apache2/extra/下.</p><pre><code>备份原有的文件$sudo cp ／etc／apache2/extra/httpd-vhosts.conf ／etc／apache2/extra/httpd-vhosts.conf.backup$sudo vi ／etc／apache2/extra/httpd-vhosts.conf设置虚拟主机(此站点本机访问域名是mysite.local,根目录是/var/wwwroot/abc)...&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@mysite.local    DocumentRoot &quot;/var/wwwroot/abc&quot;    ServerName mysite.local    ErrorLog &quot;/private/var/log/apache2/mysite.local-error_log&quot;    CustomLog &quot;/private/var/log/apache2/mysite.local-access_log&quot; common&lt;/VirtualHost&gt;...</code></pre><p>修改hosts文件，文件位置在/etc/</p><pre><code>$sudo vi ／etc／hosts将自定义的域名绑定到127.0.0.1...127.0.0.1       localhost mysite.local...</code></pre><p>重新启动Apache服务器</p><pre><code>sudo apachectl restart</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins部署到远程（Linux服务器）</title>
      <link href="/2016/01/22/devlang/Jenkins%E9%83%A8%E7%BD%B2%E5%88%B0%E8%BF%9C%E7%A8%8B%EF%BC%88Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/"/>
      <url>/2016/01/22/devlang/Jenkins%E9%83%A8%E7%BD%B2%E5%88%B0%E8%BF%9C%E7%A8%8B%EF%BC%88Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>参考：<a href="http://www.tuicool.com/articles/buEFfi7">http://www.tuicool.com/articles/buEFfi7</a></p><p>jenkins、ssh实现了远程自动化部署或者发布。一般情况下，我们都会要把项目部署到远程Linux服务器上，所以这节的主要内容是：</p><p>1、部署（发布）开发环境下的Web项目到远程Linux服务器；</p><p>2、实现自动备份；</p><p>当然，发布程序要比部署要简单，不需要执行远程脚步。</p><h4 id="准备环境："><a href="#准备环境：" class="headerlink" title="准备环境："></a>准备环境：</h4><p>jenkins环境，Linux服务器，linux安装tomcat。</p><span id="more"></span><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><p>1、安装插件，登录到Jenkins后台，选择“系统管理”&#8212;&gt;“管理插件”，在可选插件中，选择 <a href="http://wiki.jenkins-ci.org/display/JENKINS/Publish+Over+SSH+Plugin">Publish Over SSH</a> ，安装这个插件；</p><p>2、安装完后，配置这个选项，在系统管理中找到，如下图：</p><p>如果SSH是通过Key来进行验证的这里需要输入相关服务器的Key，要是通过用户名密码进行验证的话，SSH Key的输入栏可以全部置空。</p><p>&nbsp;<br><img src="/images/674c63a970af2ad41c161960683b4034.jpg" alt="Jenkins(Hudson)实现远程部署Web项目 Publish Over SSH Plugin插件"></p><p>我是通过用户名和密码进行验证的，因此SSH Server要配置服务器的信息还有用户名和密码。</p><p>&nbsp;<br><img src="/images/6E07EA50-6687-423E-9AD1-9436F1B68B07.png" alt="Jenkins(Hudson)实现远程部署Web项目 Publish Over SSH Plugin插件"></p><p>这里只说下主要配置项，SSH Server Name，服务器名称，自己随便起个名字即可；Hostname，服务器的IP地址；Username，远程服务器的帐号，这里我用了root；Remote Directory，访问路径，“/”根路径即可。</p><p>其他的选项参考， <a href="http://blog.csdn.net/wangmuming/article/details/22925895">http://blog.csdn.net/wangmuming/article/details/22925895</a>。</p><p>3、这次不用新建项目了，以上次建的项目为基础，做个拷贝，在此基础上修改就行，如图：</p><p><img src="/images/22QBfuI.png" alt="Jenkins(Hudson)实现远程部署Web项目"></p><p>4、上面的都不用动，只修改“构建后操作”，把上次部署war包的方式（Deploy war/ear to a container）删除，添加刚才安装插件后的（Send build artifacts over SSH），配置见图：</p><p><img src="/images/0D8064F6-D0B0-481B-B095-57E49E19A8C6.png" alt="Jenkins(Hudson)实现远程部署Web项目"></p><p>需要注意的地方：Remote directory，这个最好配置为绝对路径，主要是为了临时放置项目的地方，在第5步可以看到；如果只是发布程序，exec command 不需要设置；如果部署，需要设置远程deploy.sh 脚本位置。</p><p>5、增加deploy.sh脚本，新下载的tomcat的bin目录没有该文件，自己新建一个即可，里面的内容如下，根据自己的实际情况进行调整，都是一些常见的shell命令：</p><pre class="prettyprint bash"><span class="shebang">#!/bin/sh</span>export JAVA_HOME=/usr/java/jdk1.7.0_75kill -9 $(ps -aef | grep tomcat | grep -v grep | awk <span class="string">'{print $2}'</span>)cd /app/programs/tomcat_test1/webappsmv ROOT.war ROOT_`date +%Y%m%d%H%M%S`.war.bak<span class="comment">#rm -rf ROOT</span>mv  /app/programs/temp/mvcDemo3*-SNAPSHOT.war ROOT.warcd /app/programs/tomcat_test1/bin./startup.sh</pre><p>6、经过以上配置后，访问测试，运行通过。</p><p>总结：截至到现在，已经完成了自动化部署到本地和远程的全部配置。我这两篇文档主要侧重于操作实现和备忘，一些细节未进行说明，有需要的朋友可以自行往下深入研究，可以一块讨论。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在linux 使用exp导出备份数据时提示EXP-00091: Exporting questionable statistics.</title>
      <link href="/2016/01/05/db/%E5%9C%A8linux-%E4%BD%BF%E7%94%A8exp%E5%AF%BC%E5%87%BA%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E6%97%B6%E6%8F%90%E7%A4%BAEXP-00091-Exporting-questionable-statistics/"/>
      <url>/2016/01/05/db/%E5%9C%A8linux-%E4%BD%BF%E7%94%A8exp%E5%AF%BC%E5%87%BA%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E6%97%B6%E6%8F%90%E7%A4%BAEXP-00091-Exporting-questionable-statistics/</url>
      
        <content type="html"><![CDATA[<p>在linux 使用exp导出备份数据时提示：<br>EXP-00091: Exporting questionable statistics.<br>1.问题产生的原因<br>linux下oracle用户环境变量语言集和oracle数据库中的环境变量语言集不同<br>2.解决方法<br>只要将oracle环境变量语言集改成和数据库环境变量语言集一样的就可以<br>查看服务端字符集</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from nls_database_parameters t where t.parameter=&#x27;NLS_CHARACTERSET&#x27;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from v$nls_parameters where parameter=&#x27;NLS_CHARACTERSET&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[oracle@rac01 ~]$ export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</span><br><span class="line">[oracle@rac01 ~]$ exp tuser/****** tables=UCM_BOARDWS_INSTALLWORK,UCM_BOARDWS_APINSTALL file=/orabak/1015installworkBak.dmp log=/orabak/1015installworkBak.log</span><br><span class="line"></span><br><span class="line">Export: Release 11.2.0.3.0 - Production on Wed Oct 15 10:05:16 2014</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2011, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Connected to: Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production</span><br><span class="line">With the Partitioning, Real Application Clusters, Automatic Storage Management, OLAP,</span><br><span class="line">Data Mining and Real Application Tes</span><br><span class="line">Export done in ZHS16GBK character set and AL16UTF16 NCHAR character set</span><br><span class="line"></span><br><span class="line">About to export specified tables via Conventional Path ...</span><br><span class="line">. . exporting table UCM_BOARDWS_INSTALLWORK 1998871 rows exported</span><br><span class="line">. . exporting table UCM_BOARDWS_APINSTALL 2190269 rows exported</span><br><span class="line">Export terminated successfully without warnings.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>checkstyle检查问题 ot an exception – expecting ‘”‘, found ‘‘</title>
      <link href="/2015/08/06/tools/checkstyle%E6%A3%80%E6%9F%A5%E9%97%AE%E9%A2%98-ot-an-exception-%E2%80%93-expecting-%E2%80%98%E2%80%9D%E2%80%98-found-%E2%80%98%E2%80%98/"/>
      <url>/2015/08/06/tools/checkstyle%E6%A3%80%E6%9F%A5%E9%97%AE%E9%A2%98-ot-an-exception-%E2%80%93-expecting-%E2%80%98%E2%80%9D%E2%80%98-found-%E2%80%98%E2%80%98/</url>
      
        <content type="html"><![CDATA[<p>checkstyle检查问题</p><p>ot an exception &#8211; expecting &#8216;&#8221;&#8216;, found &#8216;&lt;EOF&gt;&#8217;</p><p>解决办法：</p><p>在配置文件的根节点上增加编码的配置。</p><p>&lt;module name=&#8221;Checker&#8221;&gt;</p><p>&lt;property name=&#8221;severity&#8221; value=&#8221;warning&#8221;/&gt;</p><p>&lt;property name=&#8221;charset&#8221; value=&#8221;UTF-8&#8243;/&gt; &lt;!&#8211;新增&#8211;&gt;</p><span id="more"></span><p><a href="http://www.cnblogs.com/bnbqian/p/3451777.html">http://www.cnblogs.com/bnbqian/p/3451777.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea gradle android 开发问题</title>
      <link href="/2015/07/28/tools/Idea-gradle-android-%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
      <url>/2015/07/28/tools/Idea-gradle-android-%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>Idea gradle android 开发问题1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">* What went wrong:</span><br><span class="line"></span><br><span class="line">A problem occurred configuring project &#x27;:app&#x27;.</span><br><span class="line">&amp;gt; Could not resolve all dependencies for configuration &#x27;:app:_debugCompile&#x27;.</span><br><span class="line">   &amp;gt; Could not find com.android.support:support-v4:21.0.3.</span><br><span class="line">     Searched in the following locations:</span><br><span class="line">         http://nexus.cabletech.com.cn/content/groups/public/com/android/support/support-v4/21.0.3/support-v4-21.0.3.pom</span><br><span class="line">         http://nexus.cabletech.com.cn/content/groups/public/com/android/support/support-v4/21.0.3/support-v4-21.0.3.jar</span><br><span class="line">         https://repo1.maven.org/maven2/com/android/support/support-v4/21.0.3/support-v4-21.0.3.pom</span><br><span class="line">         https://repo1.maven.org/maven2/com/android/support/support-v4/21.0.3/support-v4-21.0.3.jar</span><br><span class="line">         https://jcenter.bintray.com/com/android/support/support-v4/21.0.3/support-v4-21.0.3.pom</span><br><span class="line">         https://jcenter.bintray.com/com/android/support/support-v4/21.0.3/support-v4-21.0.3.jar</span><br><span class="line">     Required by:</span><br><span class="line">         workspace:app:unspecified &amp;gt; com.facebook.fresco:fresco:0.5.3 &amp;gt; com.facebook.fresco:drawee:0.5.3</span><br><span class="line">         workspace:app:unspecified &amp;gt; com.facebook.fresco:fresco:0.5.3 &amp;gt; com.facebook.fresco:imagepipeline:0.5.3</span><br></pre></td></tr></table></figure><span id="more"></span><p>解决办法：</p><p>一般都是因为Android SDK Manager中没有下载Extras下的Android Support Repository </p><p>没有下载导致的。</p><p> 参考：<a href="http://vjson.com/wordpress/could-not-find-com-android-support.html">http://vjson.com/wordpress/could-not-find-com-android-support.html</a></p><p>Idea gradle android 开发问题2:</p><ul><li>What went wrong:</li></ul><p>Execution failed for task ‘:app:processArmeabiDebugResources’.</p><p>&gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process ‘command ‘E:\android-sdk\sdk\build-tools\22.0.1\aapt.exe’’ finished with non-zero exit value 1</p><p>解决方法：</p><p>在build.gradle中引入的依赖包中不能使用“+”。</p><p>之前：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    //compile fileTree(dir: &#x27;libs&#x27;, include: [&#x27;*.jar&#x27;])</span><br><span class="line">    compile &#x27;com.android.support:appcompat-v7:22.2.+&#x27;</span><br><span class="line">    compile &#x27;com.google.code.gson:gson:2.3.1&#x27;</span><br><span class="line">    //compile &#x27;com.squareup.picasso:picasso:2.5.2&#x27;</span><br><span class="line">    //compile &#x27;com.nostra13.universalimageloader:universal-image-loader:1.9.3&#x27;</span><br><span class="line">    compile &#x27;de.greenrobot:eventbus:2.4.0&#x27;</span><br><span class="line">    compile &#x27;com.facebook.fresco:fresco:0.5.3&#x27;</span><br><span class="line">    compile &#x27;com.squareup.okhttp:okhttp:2.4.0&#x27;</span><br><span class="line">    //compile &#x27;com.squareup.retrofit:retrofit:1.9.0&#x27;</span><br><span class="line">    compile(&#x27;com.mikepenz:materialdrawer:3.1.2@aar&#x27;) &#123;</span><br><span class="line">        transitive = true</span><br><span class="line">    &#125;</span><br><span class="line">    compile &#x27;com.android.support:design:22.2.+&#x27;</span><br><span class="line">    compile &#x27;com.mikepenz:octicons-typeface:2.2.0@aar&#x27;</span><br><span class="line">    compile &#x27;com.rengwuxian.materialedittext:library:2.1.4@aar&#x27;</span><br><span class="line">    compile files(&#x27;libs/AMap_3DMap_V2.4.1.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Android_Location_V1.3.2.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Android_Navi_V1.1.2.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Msc.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/AMap_Services_V2.4.0.jar&#x27;)</span><br></pre></td></tr></table></figure><p>之后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    //compile fileTree(dir: &#x27;libs&#x27;, include: [&#x27;*.jar&#x27;])</span><br><span class="line">    compile &#x27;com.android.support:appcompat-v7:22.2.0&#x27;</span><br><span class="line">    compile &#x27;com.google.code.gson:gson:2.3.1&#x27;</span><br><span class="line">    //compile &#x27;com.squareup.picasso:picasso:2.5.2&#x27;</span><br><span class="line">    //compile &#x27;com.nostra13.universalimageloader:universal-image-loader:1.9.3&#x27;</span><br><span class="line">    compile &#x27;de.greenrobot:eventbus:2.4.0&#x27;</span><br><span class="line">    compile &#x27;com.facebook.fresco:fresco:0.5.3&#x27;</span><br><span class="line">    compile &#x27;com.squareup.okhttp:okhttp:2.4.0&#x27;</span><br><span class="line">    //compile &#x27;com.squareup.retrofit:retrofit:1.9.0&#x27;</span><br><span class="line">    compile(&#x27;com.mikepenz:materialdrawer:3.1.2@aar&#x27;) &#123;</span><br><span class="line">        transitive = true</span><br><span class="line">    &#125;</span><br><span class="line">    compile &#x27;com.android.support:design:22.2.0&#x27;</span><br><span class="line">    compile &#x27;com.mikepenz:octicons-typeface:2.2.0@aar&#x27;</span><br><span class="line">    compile &#x27;com.rengwuxian.materialedittext:library:2.1.4@aar&#x27;</span><br><span class="line">    compile files(&#x27;libs/AMap_3DMap_V2.4.1.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Android_Location_V1.3.2.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Android_Navi_V1.1.2.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/Msc.jar&#x27;)</span><br><span class="line">    compile files(&#x27;libs/AMap_Services_V2.4.0.jar&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
