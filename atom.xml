<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>缺陷代码</title>
  
  <subtitle>生活不止有眼前的苟且，还有诗和远方...</subtitle>
  <link href="https://groupfusion.github.io/atom.xml" rel="self"/>
  
  <link href="https://groupfusion.github.io/"/>
  <updated>2023-12-15T12:31:37.060Z</updated>
  <id>https://groupfusion.github.io/</id>
  
  <author>
    <name>xmon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nacos项目集中配置管理设置说明</title>
    <link href="https://groupfusion.github.io/2023/10/14/dev/nacos%E9%A1%B9%E7%9B%AE%E9%9B%86%E4%B8%AD%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E8%AE%BE%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
    <id>https://groupfusion.github.io/2023/10/14/dev/nacos%E9%A1%B9%E7%9B%AE%E9%9B%86%E4%B8%AD%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E8%AE%BE%E7%BD%AE%E8%AF%B4%E6%98%8E/</id>
    <published>2023-10-14T07:41:20.000Z</published>
    <updated>2023-12-15T12:31:37.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nacos项目集中配置管理设置说明"><a href="#nacos项目集中配置管理设置说明" class="headerlink" title="nacos项目集中配置管理设置说明"></a>nacos项目集中配置管理设置说明</h1><p>在springboot 微服项目开发中，微服数量不断增加，长期的结果就是配置文件过于分散混乱，难以管理等问题。这里我们使用nacos配置中心为例，实现统一管理项目中所有配置信息。下面让我们开始吧！</p><h2 id="配置依赖引入"><a href="#配置依赖引入" class="headerlink" title="配置依赖引入"></a>配置依赖引入</h2><p>在build.gradle中增加下面依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;com.alibaba.boot:nacos-config-spring-boot-starter:0.2.12&#x27;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="增加生产环境配置文件"><a href="#增加生产环境配置文件" class="headerlink" title="增加生产环境配置文件"></a>增加生产环境配置文件</h2><p>在application-prod.properties增加配置中心设置信息，配置如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">nacos.config.bootstrap.enable</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 生产环境配置中心服务器地址，端口</span></span><br><span class="line"><span class="meta">nacos.config.server-addr</span>=<span class="string">192.168.0.18:8848</span></span><br><span class="line"><span class="meta">nacos.config.username</span>=<span class="string">nacos</span></span><br><span class="line"><span class="meta">nacos.config.password</span>=<span class="string">nacos</span></span><br><span class="line"><span class="comment">#默认为Public命名空间,不需要写，如果加上的话会导致加载不到配置文件</span></span><br><span class="line"><span class="meta">nacos.config.namespace</span>=<span class="string">dev</span></span><br><span class="line"><span class="comment">#指定分组信息</span></span><br><span class="line"><span class="meta">nacos.config.group</span>=<span class="string">ORDER_GROUP</span></span><br><span class="line"><span class="comment"># 配置文件ID data-id</span></span><br><span class="line"><span class="meta">nacos.config.data-ids</span>=<span class="string">db.properties,redis.properties,common.properties,order-xxx.properties</span></span><br><span class="line"><span class="comment"># 配置文件类型</span></span><br><span class="line"><span class="meta">nacos.config.type</span>=<span class="string">properties</span></span><br><span class="line"><span class="comment"># 是否允许动态刷新配置项，这里只是为了演示若能，无强烈要求不要开启</span></span><br><span class="line"><span class="meta">nacos.config.auto-refresh</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#logging.config=classpath:logback-spring.xml</span></span><br><span class="line"><span class="meta">logging.file.name</span>=<span class="string">/temp/logs/order_xxx.log</span></span><br></pre></td></tr></table></figure><h2 id="配置文件ID-根据模块要求定义"><a href="#配置文件ID-根据模块要求定义" class="headerlink" title="配置文件ID 根据模块要求定义"></a>配置文件ID 根据模块要求定义</h2><p>1、在application-prod.properties中“nacos.config.data-ids=”指定从nacos config中要加载的配置文件；<br>2、db.properties,redis.properties 全局默认不需要修改。<br>3、common.properties 为项目通用的配置<br>4、order-xxx.properties 为业务模块独有的配置；命名规则为：模块名+子模块名(可选)</p><p>注：nacos配置中心设置时，nacos.config.data-ids要与nacos配置中心的data-id一致。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;nacos项目集中配置管理设置说明&quot;&gt;&lt;a href=&quot;#nacos项目集中配置管理设置说明&quot; class=&quot;headerlink&quot; title=&quot;nacos项目集中配置管理设置说明&quot;&gt;&lt;/a&gt;nacos项目集中配置管理设置说明&lt;/h1&gt;&lt;p&gt;在springboot 微服项目开发中，微服数量不断增加，长期的结果就是配置文件过于分散混乱，难以管理等问题。这里我们使用nacos配置中心为例，实现统一管理项目中所有配置信息。下面让我们开始吧！&lt;/p&gt;
&lt;h2 id=&quot;配置依赖引入&quot;&gt;&lt;a href=&quot;#配置依赖引入&quot; class=&quot;headerlink&quot; title=&quot;配置依赖引入&quot;&gt;&lt;/a&gt;配置依赖引入&lt;/h2&gt;&lt;p&gt;在build.gradle中增加下面依赖&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;implementation &amp;#x27;com.alibaba.boot:nacos-config-spring-boot-starter:0.2.12&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="nacos" scheme="https://groupfusion.github.io/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之策略模式应用</title>
    <link href="https://groupfusion.github.io/2023/10/13/readbook/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
    <id>https://groupfusion.github.io/2023/10/13/readbook/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%BA%94%E7%94%A8/</id>
    <published>2023-10-13T07:41:20.000Z</published>
    <updated>2023-12-15T12:45:13.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>本篇文章主要介绍策略模式在SpringBoot框架中如何使用。是一篇策略模式的应用实践的文章，需要对设计模式的理论又一定的了解。</p><h3 id="1-1-策略模式简述"><a href="#1-1-策略模式简述" class="headerlink" title="1.1 策略模式简述"></a>1.1 策略模式简述</h3><p>策略模式包含以下3个核心角色：<br>    -  环境（Context）：定义了使用算法的环境，负责将客户端请求委派给具体的策略对象执行。环境类可以通过依赖注入、简单工厂等方式来获取具体策略对象。<br>    -  抽象策略（Abstract Strategy）：定义了策略对象的公共接口或抽象类，规定了具体策略类必须实现的方法。<br>    -  具体策略（Concrete Strategy）：实现了抽象策略定义的接口或抽象类，包含了具体的算法实现。</p><span id="more"></span><h2 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h2><p>作为程序员，无论是在日常开发、学习中，肯定会学习了解各种的设计模式。在开发中我们如果根据需求选择合适的设计模式，使得我们写出的代码更加优雅，且具被拓展性，可读性，是需要我们时刻思考的。</p><p>收到项目现场转来的一个紧急需求，需要解析一批csv格式的文件入库，每个csv文件都对应一套数据，后续跟能还会增加新的数据。看到之前的代码就是一阵无语…，一坨 “if-else” 堆砌代码。</p><h3 id="2-1构建思路"><a href="#2-1构建思路" class="headerlink" title="2.1构建思路"></a>2.1构建思路</h3><p>根据上面的需求不同类型数据文件采用不同的处理方法，对于有经验的程序员，肯定第一个想到的肯定是策略模式。若对设计模式不是很熟，也可根据需求对照设计模式定义挑选。</p><pre><code>- 定义可识别常量：这里根据不同的文件名标识策略类型，使用文件名调用对应的策略实例。- 定义策略接口：每个文件定义一种解析实现，实现对应的解析逻辑，并提取抽接口，定义为对外统一访问入口。- Context设计：通过Map来存储策略定义数据，调用者调用是通过策略标识来获取对应策略实例。在不使用springboot时，需要将策略标识与对应实例直接在代码中写死，这种方式不利于拓展，每次增加策略后都要修改Map。所以强烈建议使用springboot，通过注解方式实现策略的自动注册。新增策略后springboot启动时会扫描策略并对其进行注册，不需要修改旧代码。</code></pre><h3 id="2-2代码实现"><a href="#2-2代码实现" class="headerlink" title="2.2代码实现"></a>2.2代码实现</h3><p>下面我们首先定义策略接口及策略实例,使用springboot框架时只需要在策略实例上增加Component注解，即可将实例注入到Map中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CSVParser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String cvsSplitBy = <span class="string">&quot;\\|&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> br</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileType</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 city_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;City&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CityParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">   </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ParseResult <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;City&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 region_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;Region&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegionParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Region&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其次，编写策略选择器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解析策略选择器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParseStrategyContext</span> </span>&#123;</span><br><span class="line"><span class="comment">//这里springboot会扫描已定义的策略，并注册到selectParser中</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String,CSVParser&gt; selectParser=<span class="keyword">new</span> ConcurrentHashMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据资源类型选择对应的解析策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 资源类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CSVParser <span class="title">select</span><span class="params">(String type)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectParser.get(type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3拓展"><a href="#2-3拓展" class="headerlink" title="2.3拓展"></a>2.3拓展</h3><p>当需求发生变化，需要增加新类型文件时，只需要新增一个策略实例即可，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略实现 room_xxxxxx.csv文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;Room&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoomParser</span> <span class="keyword">implements</span> <span class="title">CSVParser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">(BufferedReader br, String fileType)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Room&quot;</span>);</span><br><span class="line">        <span class="comment">//这里实现csv格式解析以及后续处理，此处省略...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4调用"><a href="#2-4调用" class="headerlink" title="2.4调用"></a>2.4调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewCsvParseTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String filePath = <span class="string">&quot;d://temp&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    ParseStrategySelector strategySelector;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">parseCsv</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        File[] childFiles = file.listFiles();</span><br><span class="line">        BufferedReader br;</span><br><span class="line">        <span class="keyword">for</span> (File childFile : childFiles) &#123;</span><br><span class="line">List&lt;String&gt; fileNameList = Arrays.asList(childFile.getName().split(<span class="string">&quot;_&quot;</span>));</span><br><span class="line">String fileType=fileNameList.get(<span class="number">0</span>);</span><br><span class="line">br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(filePath), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"><span class="comment">//根据文件类型，调用不同的策略实例</span></span><br><span class="line">CSVParser parser = strategySelector.select(fileType);</span><br><span class="line">        ParseResult parseResult = parser.parseCsv(br, fileType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h2><p>通过使用策略模式模式，大大减少了代码中的 if-else 使用，代码更加优雅，便于扩展。其次，springboot框架能够更加高效的完成开发任务。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.概述&quot;&gt;&lt;/a&gt;1.概述&lt;/h2&gt;&lt;p&gt;本篇文章主要介绍策略模式在SpringBoot框架中如何使用。是一篇策略模式的应用实践的文章，需要对设计模式的理论又一定的了解。&lt;/p&gt;
&lt;h3 id=&quot;1-1-策略模式简述&quot;&gt;&lt;a href=&quot;#1-1-策略模式简述&quot; class=&quot;headerlink&quot; title=&quot;1.1 策略模式简述&quot;&gt;&lt;/a&gt;1.1 策略模式简述&lt;/h3&gt;&lt;p&gt;策略模式包含以下3个核心角色：&lt;br&gt;    -  环境（Context）：定义了使用算法的环境，负责将客户端请求委派给具体的策略对象执行。环境类可以通过依赖注入、简单工厂等方式来获取具体策略对象。&lt;br&gt;    -  抽象策略（Abstract Strategy）：定义了策略对象的公共接口或抽象类，规定了具体策略类必须实现的方法。&lt;br&gt;    -  具体策略（Concrete Strategy）：实现了抽象策略定义的接口或抽象类，包含了具体的算法实现。&lt;/p&gt;</summary>
    
    
    
    
    <category term="设计模式" scheme="https://groupfusion.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java 集合stream流操作示例详解</title>
    <link href="https://groupfusion.github.io/2023/09/15/devlang/java/Java%20%E9%9B%86%E5%90%88stream%E6%B5%81%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>https://groupfusion.github.io/2023/09/15/devlang/java/Java%20%E9%9B%86%E5%90%88stream%E6%B5%81%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B%E8%AF%A6%E8%A7%A3/</id>
    <published>2023-09-15T07:41:20.000Z</published>
    <updated>2023-12-15T12:41:17.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-集合stream流操作示例详解"><a href="#Java-集合stream流操作示例详解" class="headerlink" title="Java 集合stream流操作示例详解"></a>Java 集合stream流操作示例详解</h1><p>自java 8 版本起推出集合stream流操作特性，确实非常方便的对list进行各种操作，告别使用for的时代来了。下面总结了一些常用的对List对象进行遍历、过滤、查询、去重、排序、分组、提取等操作示例，；</p><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String sex;</span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line"><span class="keyword">private</span> String department;</span><br><span class="line"><span class="keyword">private</span> BigDecimal salary;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id,String name,String sex,Integer age,String department,BigDecimal salary)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id=id;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.sex=sex;</span><br><span class="line"><span class="keyword">this</span>.age=age;</span><br><span class="line"><span class="keyword">this</span>.department=department;</span><br><span class="line"><span class="keyword">this</span>.salary=salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListStream</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">List&lt;User&gt; userList = getUserList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">1</span>, <span class="string">&quot;黄文隆&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">32</span>, <span class="string">&quot;研发部&quot;</span>, BigDecimal.valueOf(<span class="number">3600</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">2</span>, <span class="string">&quot;江奕云&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">30</span>, <span class="string">&quot;财务部&quot;</span>, BigDecimal.valueOf(<span class="number">3800</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">3</span>, <span class="string">&quot;刘姿婷&quot;</span>, <span class="string">&quot;女&quot;</span>, <span class="number">20</span>, <span class="string">&quot;人事部&quot;</span>, BigDecimal.valueOf(<span class="number">3700</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">4</span>, <span class="string">&quot;夏志豪&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">38</span>, <span class="string">&quot;研发部&quot;</span>, BigDecimal.valueOf(<span class="number">3500</span>)));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;林雅南&quot;</span>, <span class="string">&quot;女&quot;</span>, <span class="number">25</span>, <span class="string">&quot;财务部&quot;</span>, BigDecimal.valueOf(<span class="number">3200</span>)));</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们有一个List<User>类型的列表，可以使用Java8的stream流对它进行遍历、过滤、查询、去重、排序、分组等操作。</p><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userList.forEach(System.out::println);</span><br></pre></td></tr></table></figure><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h2><p>通过filter()进行数据筛选过滤。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取部门为“研发部”的用户列表</span></span><br><span class="line">userList = userList.stream().filter(user -&gt; user.getDepartment() == <span class="string">&quot;研发部&quot;</span>).collect(Collectors.toList());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取组织编号为“黄文隆”的组织信息，如果没有找到则返回null</span></span><br><span class="line">User user = userList.stream().filter(u -&gt; u.getName().equals(<span class="string">&quot;黄文隆&quot;</span>)).findAny().orElse(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><p>使用 distinct() 方法可以去除重复的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取部门列表，并去除重复数据</span></span><br><span class="line">    List&lt;String&gt; departmentList = userList.stream().map(User::getDepartment).distinct().collect(Collectors.toList());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>使用sorted()方法进行数据排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据年龄排序（升序）</span></span><br><span class="line">userList = userList.stream().sorted((u1, u2) -&gt; u1.getAge() - u2.getAge()).collect(Collectors.toList());</span><br><span class="line"><span class="comment">//推荐：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge)).collect(Collectors.toList());</span></span><br><span class="line"><span class="comment">//降序：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge).reversed()).collect(Collectors.toList());</span></span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>使用 groupingBy() 将数据进行分组，最终返回一个 Map 类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据部门对用户列表进行分组</span></span><br><span class="line">Map&lt;String,List&lt;User&gt;&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment));</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据部门和性别对用户列表进行分组</span></span><br><span class="line">Map&lt;String,Map&lt;String,List&lt;User&gt;&gt;&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment,Collectors.groupingBy(User::getSex)));</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据部门进行分组，汇总各个部门用户的平均年龄</span></span><br><span class="line">Map&lt;String, Double&gt; userMap = userList.stream().collect(Collectors.groupingBy(User::getDepartment, Collectors.averagingInt(User::getAge)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h2><p>使用 map() 方法获取用户列表中的名称列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户名称列表</span></span><br><span class="line">List&lt;String&gt; nameList = userList.stream().map(User::getName).collect(Collectors.toList());</span><br><span class="line"><span class="comment">//或者：List&lt;String&gt; nameList = userList.stream().map(user -&gt; user.getName()).collect(Collectors.toList());</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="判断-查找"><a href="#判断-查找" class="headerlink" title="判断(查找)"></a>判断(查找)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断用户列表中是否存在名称为“黄文隆”的数据</span></span><br><span class="line"><span class="keyword">boolean</span> result1 = userList.stream().anyMatch(user -&gt; user.getName().equals(<span class="string">&quot;name_01&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户名称是否都包含“黄”字段</span></span><br><span class="line"><span class="keyword">boolean</span> result2 = userList.stream().allMatch(user -&gt; user.getName().contains(<span class="string">&quot;黄&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户名称是否存在不包含“黄”字段</span></span><br><span class="line"><span class="keyword">boolean</span> result3 = userList.stream().noneMatch(user -&gt; user.getName().contains(<span class="string">&quot;黄&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户列表中年龄的最大值、最小值、总和</span></span><br><span class="line"><span class="keyword">int</span> maxVal = userList.stream().map(User::getAge).reduce(Integer::max).get();</span><br><span class="line"><span class="keyword">int</span> minVal = userList.stream().map(User::getAge).reduce(Integer::min).get();</span><br><span class="line"><span class="keyword">int</span> sumVal = userList.stream().map(User::getAge).reduce(<span class="number">0</span>,Integer::sum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户列表中年龄的最大值、最小值、总和、平均值</span></span><br><span class="line"><span class="keyword">int</span> maxVal = userList.stream().mapToInt(User::getAge).max().getAsInt();</span><br><span class="line"><span class="keyword">int</span> minVal = userList.stream().mapToInt(User::getAge).min().getAsInt();</span><br><span class="line"><span class="keyword">int</span> sumVal = userList.stream().mapToInt(User::getAge).sum();</span><br><span class="line"><span class="keyword">double</span> aveVal =  userList.stream().mapToInt(User::getAge).average().getAsDouble();</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计研发部的人数，使用 counting()方法进行统计</span></span><br><span class="line">Long departCount = userList.stream().filter(user -&gt; user.getDepartment() == <span class="string">&quot;研发部&quot;</span>).collect(Collectors.counting());</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计30岁以上的人数，使用 count()方法进行统计（推荐）</span></span><br><span class="line">Long ageCount = userList.stream().filter(user -&gt; user.getAge() &gt;= <span class="number">30</span>).count();</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计薪资大于1500元的人数</span></span><br><span class="line">Long salaryCount = userList.stream().filter(user -&gt; user.getSalary().compareTo(BigDecimal.valueOf(<span class="number">1500</span>)) == <span class="number">1</span>).count();</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算年龄总和</span></span><br><span class="line"><span class="keyword">int</span> sumAge = userList.stream().collect(Collectors.summingInt(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算平均年龄</span></span><br><span class="line"><span class="keyword">double</span> aveAge = userList.stream().collect(Collectors.averagingDouble(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取IntSummaryStatistics对象</span></span><br><span class="line">IntSummaryStatistics ageStatistics = userList.stream().collect(Collectors.summarizingInt(User::getAge));</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计：最大值、最小值、总和、平均值、总数</span></span><br><span class="line">System.out.println(<span class="string">&quot;最大年龄：&quot;</span> + ageStatistics.getMax());</span><br><span class="line">System.out.println(<span class="string">&quot;最小年龄：&quot;</span> + ageStatistics.getMin());</span><br><span class="line">System.out.println(<span class="string">&quot;年龄总和：&quot;</span> + ageStatistics.getSum());</span><br><span class="line">System.out.println(<span class="string">&quot;平均年龄：&quot;</span> + ageStatistics.getAverage());</span><br><span class="line">System.out.println(<span class="string">&quot;员工总数：&quot;</span> + ageStatistics.getCount());</span><br><span class="line"></span><br><span class="line"><span class="comment">//最高薪资</span></span><br><span class="line">BigDecimal maxSalary = userList.stream().map(User::getSalary).max((x1, x2) -&gt; x1.compareTo(x2)).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//最低薪资</span></span><br><span class="line">BigDecimal minSalary = userList.stream().map(User::getSalary).min((x1, x2) -&gt; x1.compareTo(x2)).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//薪资总和</span></span><br><span class="line">BigDecimal sumSalary = userList.stream().map(User::getSalary).reduce(BigDecimal.ZERO, BigDecimal::add);</span><br><span class="line"></span><br><span class="line"><span class="comment">//平均薪资</span></span><br><span class="line">BigDecimal avgSalary = userList.stream().map(User::getSalary).reduce(BigDecimal.ZERO, BigDecimal::add).divide(BigDecimal.valueOf(userList.size()), <span class="number">2</span>, BigDecimal.ROUND_HALF_UP);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java-集合stream流操作示例详解&quot;&gt;&lt;a href=&quot;#Java-集合stream流操作示例详解&quot; class=&quot;headerlink&quot; title=&quot;Java 集合stream流操作示例详解&quot;&gt;&lt;/a&gt;Java 集合stream流操作示例详解&lt;/h1&gt;&lt;p&gt;自java 8 版本起推出集合stream流操作特性，确实非常方便的对list进行各种操作，告别使用for的时代来了。下面总结了一些常用的对List对象进行遍历、过滤、查询、去重、排序、分组、提取等操作示例，；&lt;/p&gt;</summary>
    
    
    
    
    <category term="java stream" scheme="https://groupfusion.github.io/tags/java-stream/"/>
    
  </entry>
  
  <entry>
    <title>linux swap分区调整</title>
    <link href="https://groupfusion.github.io/2023/09/14/linux/linuxswap/"/>
    <id>https://groupfusion.github.io/2023/09/14/linux/linuxswap/</id>
    <published>2023-09-14T07:41:20.000Z</published>
    <updated>2023-12-15T12:44:58.125Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux-swap分区调整"><a href="#linux-swap分区调整" class="headerlink" title="linux swap分区调整"></a>linux swap分区调整</h1><p>近期安装了一套ubantu系统，因为物理机内存有限，想调整swap分区，顾边学边整理的此篇内容。</p><h2 id="swap分区多大合适"><a href="#swap分区多大合适" class="headerlink" title="swap分区多大合适"></a>swap分区多大合适</h2><p>我们在安装系统的时候已经建立了 swap 分区。swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。<br>那么swap分区到底设置成多大才最优？</p><span id="more"></span><p>以前几乎所有Linux 系统管理的书上都推荐设置交换分区大小为内存的2倍。这些建议到了现在就是也适用，具体情况还是要根据实际情况作出调整。</p><p>首先看下Redhat官方的文档中关于swap分区大小设置的建议：</p><table><thead><tr><th>物理内存</th><th align="center">建议的交换空间大小</th><th align="center">如果开启休眠功能建议的教会空间大小</th></tr></thead><tbody><tr><td>&lt;= 2GB</td><td align="center">内存的2倍</td><td align="center">内存的3倍</td></tr><tr><td>&gt;2GB-8GB</td><td align="center">等于内存大小</td><td align="center">内存的2倍</td></tr><tr><td>&gt;8GB-64GB</td><td align="center">至少4G</td><td align="center">内存的1.5倍</td></tr><tr><td>&gt;64GB</td><td align="center">至少4G</td><td align="center">不建议使用休眠</td></tr></tbody></table><p>实际上，系统中交换分区的大小并不取决于物理内存的量，而是取决于系统中内存的负荷，所以在安装系统时要根据具体的业务来设置SWAP的值。</p><p>一般都需要配置一点swap分区，桌面配置多一点，服务器配置少一点。而对于swap分区的具体使用细节，由一个叫swappiness参数来控制。</p><h2 id="Swappiness"><a href="#Swappiness" class="headerlink" title="Swappiness"></a>Swappiness</h2><p>实际上，并不是等所有的物理内存都消耗完毕之后，才去使用swap的空间，什么时候使用是由swappiness 参数值控制。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat procsysvmswappiness</span><br></pre></td></tr></table></figure><p>在ubuntu上默认是60,一般大部分都有应该是这个值，也有一些linux版本作出了优化调整。<br>swappiness=0的时候表示最大限度使用物理内存，然后才是 swap空间，<br>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面</p><h2 id="swap分区调整步骤"><a href="#swap分区调整步骤" class="headerlink" title="swap分区调整步骤"></a>swap分区调整步骤</h2><p>1、我们使用free -m 查看交换空间的大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubtu:~$ free -m</span><br><span class="line">               total        used        free      shared  buffcache   available</span><br><span class="line">内存：       7904        4423         120         371        3360        2817</span><br><span class="line">交换：       2047          55        1992</span><br></pre></td></tr></table></figure><p>2、使用swapon -s 查看交换空间文件挂载的对应的文件<br>如下swapfile既是挂载的文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubtu:~$ swapon -s</span><br><span class="line">FilenameTypeSizeUsedPriority</span><br><span class="line">swapfile                               file209714857144-2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、停掉挂载的交换空间的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff swapfile</span><br></pre></td></tr></table></figure><p>4、删除交换空间文件 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm swapfile</span><br></pre></td></tr></table></figure><p>5、创建新的挂载文件以及设置大小,可参考上面进行设置，因为我的是8G内存，这里交换空间设置8G。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 8G swapfile</span><br></pre></td></tr></table></figure><p>设置完成，可以使用ls -l swapfile 查看创建的swapfile有没有权限。<br>授权如果不为 -rw——- ，请执行 sudo chmod 600 swapfile 给文件赋权。<br>若漏掉则在挂载时会有提示：mkswap: swapfile: insecure permissions 0644, fix with: chmod 0600 swapfile</p><p>6、将文件挂载到交换空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap swapfile</span><br></pre></td></tr></table></figure><p>挂载成功提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正在设置交换空间版本 1，大小 = 8 GiB (8589930496  个字节)</span><br><span class="line">无标签， UUID=08420c82-ecbd-4628-96c5-78270950edf8</span><br></pre></td></tr></table></figure><p>7、启动交换空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon  swapfile</span><br></pre></td></tr></table></figure><p>可以free -m 或sudo swapon –show 查看是否设置成功。</p><p>8、若要长久生效，还要使用sudo vi etcfstab 将默认的swapfile 那行注释掉，在最后面增加下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapfileswapswapdefault00</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;linux-swap分区调整&quot;&gt;&lt;a href=&quot;#linux-swap分区调整&quot; class=&quot;headerlink&quot; title=&quot;linux swap分区调整&quot;&gt;&lt;/a&gt;linux swap分区调整&lt;/h1&gt;&lt;p&gt;近期安装了一套ubantu系统，因为物理机内存有限，想调整swap分区，顾边学边整理的此篇内容。&lt;/p&gt;
&lt;h2 id=&quot;swap分区多大合适&quot;&gt;&lt;a href=&quot;#swap分区多大合适&quot; class=&quot;headerlink&quot; title=&quot;swap分区多大合适&quot;&gt;&lt;/a&gt;swap分区多大合适&lt;/h2&gt;&lt;p&gt;我们在安装系统的时候已经建立了 swap 分区。swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。&lt;br&gt;那么swap分区到底设置成多大才最优？&lt;/p&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://groupfusion.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>reids 持久化学习笔记</title>
    <link href="https://groupfusion.github.io/2022/11/14/dev/Redis%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://groupfusion.github.io/2022/11/14/dev/Redis%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-11-14T07:41:20.000Z</published>
    <updated>2023-12-15T12:39:38.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="reids-持久化学习笔记"><a href="#reids-持久化学习笔记" class="headerlink" title="reids 持久化学习笔记"></a>reids 持久化学习笔记</h1><h2 id="RDB快照-snapshot"><a href="#RDB快照-snapshot" class="headerlink" title="RDB快照 (snapshot)"></a>RDB快照 (snapshot)</h2><p>在默认情况下，Redis将内存数据库快照保存在名字为dump.rdb 的二进制文件中。你可以对 Redis进行设置，让它在“N秒内数据集至少有M个改动”这一条件被满足时，自动保存一次数据集.<br>比如说，以下设置会让 Redis 在满足“60 秒内有至少有1000 个键被改动”这一条件时，自动保存一次数据集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#save 60 1000 /关闭RDB只需要将所有的save保存策略注释掉即可</span><br></pre></td></tr></table></figure><p>还可以手动执行命令生成RDB快照，进入redis客户端执行命令<strong>save</strong>或<strong>bgsave</strong>可以生成dump.rdb文件，每次命令执行都会将所有redis内存快照到一个新的rdb文件里，并覆盖原有rdb快照文件。</p><span id="more"></span><h3 id="bgsave的写时复制-COW-机制"><a href="#bgsave的写时复制-COW-机制" class="headerlink" title="bgsave的写时复制(COW)机制"></a>bgsave的写时复制(COW)机制</h3><p>Redis 借助操作系统提供的写时复制技术(Copy-0n-Write,COW)，在生成快照的同时，依然可以正常处理写命令。简单来说，bgsave 子讲程是由主线程 fork 生成的，可以共享主线程的所有内存数据。bgsave 子进程运行后，开始读取主线程的内存数据，并把它们写入 RDB 文件。此时，如果主线程对这些数据也都是读操作，那么，主线程和 bgsave 子进程相与不影响。但是，如果主线程要修改块数据，那么，这块数据就会被复制一份，生成该数据的副本。然后，bgsave 子进程会把这个副本数据写入 RDB 文件，而在这个过程中，主线程仍然可以直接修改原来的数据。</p><p><strong>save与bqsave对比:</strong></p><table><thead><tr><th>命令</th><th>save</th><th>bgsave</th></tr></thead><tbody><tr><td>IO类型</td><td>同步</td><td>异步</td></tr><tr><td>是否阻塞redis其它命令</td><td>是</td><td>否（在生成子进程执行调用fork函数时会有短暂阻塞）</td></tr><tr><td>复杂度</td><td>O(n)</td><td>O(n)</td></tr><tr><td>优点</td><td>不会消耗额外内存</td><td>不阻塞客户端命令</td></tr><tr><td>缺点</td><td>阻塞客户端命令</td><td>需要fork子进程，消耗内存</td></tr></tbody></table><p><strong>配置自动生成rdb文件后台使用的是bgsave方式</strong></p><h2 id="AOF-append-only-file"><a href="#AOF-append-only-file" class="headerlink" title="AOF (append-only file)"></a>AOF (append-only file)</h2><p>快照功能并不是非常耐久 (durable): 如果 Redis 因为某些原因而造成故障停机，那么服务器将丢失最近写入、且仍未保存到快照中的那些数据。从1.1 版本开始，Redis 增加了一种完全耐久的持久化方式:AOF 持久化，将修改的每一条指令记录进文件appendonly.aof中(先写入os cache，每隔一段时间fsync到磁盘)你可以通过修改配置文件来打开AOF功能:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#appendonly yes</span><br></pre></td></tr></table></figure><p>从现在开始，每当Redis 执行一个改变数据集的命令时(比如 SET)，这个命令就会被加到AOF 文件的末尾这样的话，当Redis 重新启动时，程序就可以通过重新执行AOF文件中的命令来达到重建数据集的目的你可以配置Redis多久才将数据fsync到磁盘一次。<br>有三个选项:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">appendfsync always: 每次有新命令退到 AOF 文件时就执行次 fsync ，非常慢，也非常安全</span><br><span class="line">appendfsync everysec: 每秒 fsync 一次，足够快，并且在故障时只会丢失 1 秒钟的数据.</span><br><span class="line">appendfsync no:从不 fsync ，将数据交给操作系统来处理。更快，也更不安全的选择。</span><br></pre></td></tr></table></figure><p>推荐(并且也是默认)的措施为每秒fsync一次，这种fsync 策略可以兼顾速度和安全性.</p><h3 id="AOF重写"><a href="#AOF重写" class="headerlink" title="AOF重写"></a>AOF重写</h3><p>AOF文件里可能有太多没用指令，所以AOF会定期根据内存的最新数据生成aof文件.例如，执行了如下几条命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; incr readcount</span><br><span class="line">(integer) 3</span><br></pre></td></tr></table></figure><p>重写后AOF文件里变成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*3</span><br><span class="line">$3</span><br><span class="line">SET</span><br><span class="line">$9</span><br><span class="line">readcount</span><br><span class="line">$l</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>如下两个配置可以控制AOF自动重写频率</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># auto-aof-rewrite-min-size 64mb //aof文件至少要达到64M才会自动重写，文件太小恢复速度本来就很快，重写的意义不.</span><br><span class="line"># auto-aof-rewrite-percentage 100 //aof文件自上一次重写后文件大小增长了10%则再次触发重写</span><br></pre></td></tr></table></figure><p>当然AOF还可以手动重写，进入redis客户端执行命令 <strong>bgrewriteaof</strong> 重写AOF.</p><p>注意，<strong>AOF重写redis会fork出一个子进程去做(与bgsave命令类似)，不会对redis正常命令处理有太多影响</strong></p><h3 id="RDB和AOF，我应该用哪一个"><a href="#RDB和AOF，我应该用哪一个" class="headerlink" title="RDB和AOF，我应该用哪一个?"></a>RDB和AOF，我应该用哪一个?</h3><table><thead><tr><th>命令</th><th>RDB</th><th>AOF</th></tr></thead><tbody><tr><td>启动优先级</td><td>低</td><td>高</td></tr><tr><td>体积</td><td>小</td><td>大</td></tr><tr><td>恢复速度</td><td>快</td><td>慢</td></tr><tr><td>数据安全性</td><td>容易丢数据</td><td>根据策略决定</td></tr></tbody></table><p>生产环境可以都启用，redis启动时如果既有rdb文件又有aof文件则优先选择aof文件恢复数据，因为aof一般来说数据更全一点.</p><h2 id="Redis-4-0-混合持久化"><a href="#Redis-4-0-混合持久化" class="headerlink" title="Redis 4.0 混合持久化"></a>Redis 4.0 混合持久化</h2><p>重启 Redis 时，我们很少使用 RDB来恢复内存状态，因为会丢失大量数据。我们通常使用 AOF 日志重放，但是重放 AOF 日志性能术对RDB来说要慢很多，这样在 Redis实例很大的情况下，启动需要花费很长的时间。Redis 4.0 为了解决这个问题，带来了一个新的久化选项 — 混合持久化。<br>通讨如下配置可以开启混合持久化(必须先开启aof)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># aof-use-rdb-preamble yes</span><br></pre></td></tr></table></figure><p>如果开启混合持久化，<strong>AOF在重写时</strong>，不再是单纯将内存数据转换为RESP命令写入AOF文件，而是将重写<strong>这一刻之前</strong>的内存做RDB快照处理，并且将RDB、内容和增量的AOF修改内存数据的命令存在一起，都写入新的AOF文件，新的文件一开始不叫 apendonly.aof ，等到重写完新的AOF文件才会进行改名，覆盖原有的AOF文件，完成新旧两个AOF文件的替换。于是在 Redis 重启的时候，可以先加载 RDB 的内容，然后再重放增量 AOF 日志就可以完全替代之前的 AOF 全量文件重放，因此重启效率大幅得到提升。</p><p>混合持久化AOF文件结构如下：<br>|appendonly.aof |<br>|:–:|<br>|RDB格式 |<br>|  AOF格式 |</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;reids-持久化学习笔记&quot;&gt;&lt;a href=&quot;#reids-持久化学习笔记&quot; class=&quot;headerlink&quot; title=&quot;reids 持久化学习笔记&quot;&gt;&lt;/a&gt;reids 持久化学习笔记&lt;/h1&gt;&lt;h2 id=&quot;RDB快照-snapshot&quot;&gt;&lt;a href=&quot;#RDB快照-snapshot&quot; class=&quot;headerlink&quot; title=&quot;RDB快照 (snapshot)&quot;&gt;&lt;/a&gt;RDB快照 (snapshot)&lt;/h2&gt;&lt;p&gt;在默认情况下，Redis将内存数据库快照保存在名字为dump.rdb 的二进制文件中。你可以对 Redis进行设置，让它在“N秒内数据集至少有M个改动”这一条件被满足时，自动保存一次数据集.&lt;br&gt;比如说，以下设置会让 Redis 在满足“60 秒内有至少有1000 个键被改动”这一条件时，自动保存一次数据集&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#save 60 1000 /关闭RDB只需要将所有的save保存策略注释掉即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;还可以手动执行命令生成RDB快照，进入redis客户端执行命令&lt;strong&gt;save&lt;/strong&gt;或&lt;strong&gt;bgsave&lt;/strong&gt;可以生成dump.rdb文件，每次命令执行都会将所有redis内存快照到一个新的rdb文件里，并覆盖原有rdb快照文件。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Redis" scheme="https://groupfusion.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>reids 数据类型学习笔记</title>
    <link href="https://groupfusion.github.io/2022/11/14/dev/reids%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://groupfusion.github.io/2022/11/14/dev/reids%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-11-14T07:41:20.000Z</published>
    <updated>2023-12-15T12:39:46.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="reids-数据类型学习笔记"><a href="#reids-数据类型学习笔记" class="headerlink" title="reids 数据类型学习笔记"></a>reids 数据类型学习笔记</h1><h2 id="redis-基本数据类型"><a href="#redis-基本数据类型" class="headerlink" title="redis 基本数据类型"></a>redis 基本数据类型</h2><p><img src="/images/redis/a7c36999e90a41038134360ace7da42a.png#pic_center" alt="在这里插入图片描述"></p><span id="more"></span><h3 id="字符串string类型"><a href="#字符串string类型" class="headerlink" title="字符串string类型"></a>字符串string类型</h3><p><strong>常用指令：</strong> set、mset、setnx、get、mget、del、expire。<br><strong>原子加减：</strong> incr、decr、incrby、decrby、</p><p><strong>使用场景：</strong></p><ul><li>单值缓存</li><li>对象缓存</li><li>分布式锁</li><li>计数器</li><li>分布式系统序列号</li></ul><h3 id="哈希hash类型"><a href="#哈希hash类型" class="headerlink" title="哈希hash类型"></a>哈希hash类型</h3><p><strong>常用指令：</strong>hset、hsetnx、hmset、hget、hmget、hdel、hlen、hgetall、hincrby<br><strong>使用场景：</strong></p><ul><li>对象缓存</li><li>购物车（添加商品、增加数量、商品总数、删除商品、获取购物车商品）</li></ul><h3 id="列表list类型"><a href="#列表list类型" class="headerlink" title="列表list类型"></a>列表list类型</h3><p><strong>常用指令：</strong>lpush、rpush、lpop、rpop、lrange、blpop、brpop。<br><strong>使用场景：</strong></p><ul><li>可实现常用分布式数据结构，stack(栈)、Queue（队列）、Blocking MQ（阻塞队列）</li><li>微博、微信消息流，时间线功能。</li></ul><p>注：读扩散、写扩散，千万、亿万粉丝大V发消息，如何推给粉丝？<br>小V写扩散、对用户进行标签，将消息写到活跃用户收件箱</p><h3 id="集合set类型"><a href="#集合set类型" class="headerlink" title="集合set类型"></a>集合set类型</h3><p><strong>常用指令：</strong> sadd、srem、smembers、scard、sismember、srandmember、spop<br><strong>运算操作：</strong> sinter、sinterstore、sunion、sunionstore、sdiff、sdiffstore<br><strong>使用场景：</strong></p><ul><li>抽奖、点赞、收藏、标签</li><li>集合交集、并集、差集</li></ul><h3 id="有序集合ZSet类型"><a href="#有序集合ZSet类型" class="headerlink" title="有序集合ZSet类型"></a>有序集合ZSet类型</h3><p><strong>常用指令：</strong> zadd zrem zscore zincrby zcard、zrange zrevrange、<br><strong>运算操作：</strong>zunionstore、zinterstore<br><strong>使用场景：</strong></p><h2 id="redis底层数据结构"><a href="#redis底层数据结构" class="headerlink" title="redis底层数据结构"></a>redis底层数据结构</h2><ul><li>数组: 根据序号随机查找很快，但是插入与删除很慢，需要挪动很多元素链表:插入与删除很快，只需要修改相邻元素指针，但是查找很慢，需要从第一个元素逐个遍历查找</li></ul><p>有序数组支持折半查找，链表不支持折半查找<br>有序数组的折半查找操作速度很快，但是插入、删除操作很慢</p><ul><li>跳表: 将有序链表改造为支持“折半查找”算法，可以进行快速的插入、删除、查找操作</li></ul><p>跳表与压缩列表优缺点，如何选择。</p><h2 id="Redis经典问题"><a href="#Redis经典问题" class="headerlink" title="Redis经典问题"></a>Redis经典问题</h2><h2 id="3-3-缓存穿透（缓存，数据库都没有数据）"><a href="#3-3-缓存穿透（缓存，数据库都没有数据）" class="headerlink" title="3.3 缓存穿透（缓存，数据库都没有数据）"></a>3.3 缓存穿透（缓存，数据库都没有数据）</h2><p>描述：是指查询一个根本不存在的数据(key)，缓存层和存储层都不会命中。通常出于容错的考虑，如果从存储层查不到数据则不写入缓存层.<br>导致这个请求每次都会请求到数据库，失去了缓存保护后端存储的意义造成缓存穿透的基本原因有两个:<br>第一，自身业务代码或者数据出现问题<br>第二，一些恶意攻击、爬虫等造成大量空命中。<br>3、 突发性热点缓存，<br>解决方案：<br>1、将空数据也设置为缓存，并设置过期时间（几分钟）。<br>2、布隆过滤器。</p><h2 id="3-4-缓存雪崩"><a href="#3-4-缓存雪崩" class="headerlink" title="3.4 缓存雪崩"></a>3.4 缓存雪崩</h2><p>描述：缓存失效（缓存层宕机）后，导致大量请求都会打到存储层，存储层的调用量暴增，造成存储层也会级联宕机的情况。</p><p>解决方案：<br>1、保证缓存层服务的高可用性。<br>2、以来隔离组件为后端限流熔断降级，核心业务访问达数据库，非核心业务返回预定义的信息。<br>3、提前演练。在项目上线前，演练缓存层宕机后，应用及后端的负载情况以及可能出现的问题，在此基础上指定一些预案。</p><h2 id="3-5-缓存击穿"><a href="#3-5-缓存击穿" class="headerlink" title="3.5 缓存击穿"></a>3.5 缓存击穿</h2><p>描述：缓存击穿是指当大量缓存在同一时间失效可能导致大量请求，同时穿透缓存直接访问到数据库。造成数据库压力瞬间骤增，大量请求阻塞，甚至挂掉。</p><p>解决方案：<br>1、针对这些缓存设置不同的过期时间（差异化设置过期时间），如：在24小时基础上增加一个随机数（增加几分钟）。<br>2、使用分布式锁，保证同一时刻只能有一个查询请求重新加载热点数据到缓存中，这样，其他的线程只需等待该线程运行完毕，即可重新从Redis中获取数据。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;reids-数据类型学习笔记&quot;&gt;&lt;a href=&quot;#reids-数据类型学习笔记&quot; class=&quot;headerlink&quot; title=&quot;reids 数据类型学习笔记&quot;&gt;&lt;/a&gt;reids 数据类型学习笔记&lt;/h1&gt;&lt;h2 id=&quot;redis-基本数据类型&quot;&gt;&lt;a href=&quot;#redis-基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;redis 基本数据类型&quot;&gt;&lt;/a&gt;redis 基本数据类型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/redis/a7c36999e90a41038134360ace7da42a.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Redis" scheme="https://groupfusion.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Java对象进入老年代的条件</title>
    <link href="https://groupfusion.github.io/2022/09/15/dev/Java%E5%AF%B9%E8%B1%A1%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3%E7%9A%84%E6%9D%A1%E4%BB%B6/"/>
    <id>https://groupfusion.github.io/2022/09/15/dev/Java%E5%AF%B9%E8%B1%A1%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3%E7%9A%84%E6%9D%A1%E4%BB%B6/</id>
    <published>2022-09-15T07:41:20.000Z</published>
    <updated>2023-12-15T12:39:02.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java对象进入老年代的条件"><a href="#Java对象进入老年代的条件" class="headerlink" title="Java对象进入老年代的条件"></a>Java对象进入老年代的条件</h1><h2 id="大对象直接进入老年代"><a href="#大对象直接进入老年代" class="headerlink" title="大对象直接进入老年代"></a>大对象直接进入老年代</h2><p>大对象就是需要大量连续内存空间的对象。JVM参数 -XX:PretenureSizeThreshold 可以设置大对象的大小，如果对象超过设置大小会直接进入老年代，不会进入年轻代，这个参数只在 Serial 和ParNew两个收集器下有效。</p><p>比如设置JVM参数：-XX:PretenureSizeThreshold=1000000 (单位是字节) -XX:+UseSerialGC ，再执行下上面的第一个程序会发现大对象直接进了老年代。</p><span id="more"></span><h2 id="长期存活的对象将进入老年代"><a href="#长期存活的对象将进入老年代" class="headerlink" title="长期存活的对象将进入老年代"></a>长期存活的对象将进入老年代</h2><p>既然虚拟机采用了分代收集的思想来管理内存，那么内存回收时就必须能识别哪些对象应放在新生代，哪些对象应放在老年代中。为了做到这一点，虚拟机给每个对象一个对象年龄计数器。</p><p>如果对象在 Eden 出生并经过第一次 Minor GC 后仍然能够存活，并且能被 Survivor 容纳的话，将被移动到 Survivor空间中，并将对象年龄设为1。对象在 Survivor 中每熬过一次 MinorGC，年龄就增加1岁，当它的年龄增加到一定程度（默认为15岁，CMS收集器默认6岁，不同的垃圾收集器会略微有点不同），就会被晋升到老年代中。对象晋升到老年代的年龄阈值，可以通过参数 -XX:MaxTenuringThreshold 来设置。</p><h2 id="对象动态年龄判断"><a href="#对象动态年龄判断" class="headerlink" title="对象动态年龄判断"></a>对象动态年龄判断</h2><p>当前放对象的Survivor区域里（其中一块区域，放对象的那块s区），一批对象的总大小大于这块Survivor区域内存大小的50%（-XX:TargetSurvivorRatio可以指定），那么此时大于等于这批对象年龄最大值的对象，就可以直接进入老年代了，例如Survivor区域里现在有一批对象，年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区域的50%，此时就会把年龄n(含)以上的对象都放入老年代。这个规则其实是希望那些可能是长期存活的对象，尽早进入老年代。对象动态年龄判断机制一般是在minor gc之后触发的。</p><h2 id="老年代空间分配担保机制"><a href="#老年代空间分配担保机制" class="headerlink" title="老年代空间分配担保机制"></a>老年代空间分配担保机制</h2><p>年轻代每次minor gc之前JVM都会计算下老年代剩余可用空间。如果这个可用空间小于年轻代里现有的所有对象大小之和。</p><p>就会看一个“-XX:-HandlePromotionFailure”(jdk1.8默认就设置了)的参数是否设置了。如果有这个参数，就会看看老年代的可用内存大小，是否大于之前每一次minor gc后进入老年代的对象的平均大小。如果上一步结果是小于或者之前说的参数没有设置，那么就会触发一次Full gc，对老年代和年轻代一起回收一次垃圾，如果回收完还是没有足够空间存放新的对象就会发生”OOM”。</p><p>当然，如果minor gc之后剩余存活的需要挪动到老年代的对象大小还是大于老年代可用空间，那么也会触发full gc，full gc完之后如果还是没有空间放minor gc之后的存活对象，则也会发生“OOM”。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java对象进入老年代的条件&quot;&gt;&lt;a href=&quot;#Java对象进入老年代的条件&quot; class=&quot;headerlink&quot; title=&quot;Java对象进入老年代的条件&quot;&gt;&lt;/a&gt;Java对象进入老年代的条件&lt;/h1&gt;&lt;h2 id=&quot;大对象直接进入老年代&quot;&gt;&lt;a href=&quot;#大对象直接进入老年代&quot; class=&quot;headerlink&quot; title=&quot;大对象直接进入老年代&quot;&gt;&lt;/a&gt;大对象直接进入老年代&lt;/h2&gt;&lt;p&gt;大对象就是需要大量连续内存空间的对象。JVM参数 -XX:PretenureSizeThreshold 可以设置大对象的大小，如果对象超过设置大小会直接进入老年代，不会进入年轻代，这个参数只在 Serial 和ParNew两个收集器下有效。&lt;/p&gt;
&lt;p&gt;比如设置JVM参数：-XX:PretenureSizeThreshold=1000000 (单位是字节) -XX:+UseSerialGC ，再执行下上面的第一个程序会发现大对象直接进了老年代。&lt;/p&gt;</summary>
    
    
    
    
    <category term="jvm" scheme="https://groupfusion.github.io/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>jvm垃圾回收机制理解</title>
    <link href="https://groupfusion.github.io/2022/08/15/dev/jvm%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%90%86%E8%A7%A3/"/>
    <id>https://groupfusion.github.io/2022/08/15/dev/jvm%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E7%90%86%E8%A7%A3/</id>
    <published>2022-08-15T07:41:20.000Z</published>
    <updated>2023-12-15T12:39:16.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jvm-垃圾回收机制理解"><a href="#jvm-垃圾回收机制理解" class="headerlink" title="jvm 垃圾回收机制理解"></a>jvm 垃圾回收机制理解</h1><h2 id="堆内存区域划分"><a href="#堆内存区域划分" class="headerlink" title="堆内存区域划分"></a>堆内存区域划分</h2><p>堆内存被划分为年轻代和老年代两个区域，而年轻代又分为一个伊甸园区（Eden）和两个幸存区（from_Survivor和to_Survivor），年轻代分配比例8：1：1。</p><p>##了解垃圾回收机制前我们要先了解下，如何判断对象可用被回收？</p><p>将“GC roots”对象作为根节点，从根节点开始向下查找引用对象，直到最后一个节点，找到的对象都标记为<strong>非垃圾对象</strong>，其余未标记的都是垃圾对象。<br>线程栈中的本地变量，静态变量，本地方法中的变量都可用作为GC roots根节点， 这就是可达性分析算法。</p><p>标记为非垃圾的对象会被复制空的survivor区，对象的分代年龄加1，剩余伊甸园区的垃圾对象会被清除。当伊甸园区域再次满了后会再次触发minor gc。<br>再次根据可达性分析算法标记非垃圾对象，重复上面的操作。<br>当长期存活对象（分代年龄达到15）和大对象，将会放到老年区。</p><span id="more"></span><h2 id="对象动态年龄判断"><a href="#对象动态年龄判断" class="headerlink" title="对象动态年龄判断"></a>对象动态年龄判断</h2><p>还有当前放对象的Survivor区域里（其中一块区域，放对象的那块s区），一批对象的总大小大于这块Survivor区域内存大小的50%（-XX:TargetSurvivorRatio可以指定），那么此时大于等于这批对象年龄最大值的对象，就可以直接进入老年代了，例如Survivor区域里现在有一批对象，年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区域的50%，此时就会把年龄n(含)以上的对象都放入老年代。这个规则其实是希望那些可能是长期存活的对象，尽早进入老年代。对象动态年龄判断机制一般是在minor gc之后触发的。</p><h2 id="full-gc"><a href="#full-gc" class="headerlink" title="full gc"></a>full gc</h2><p>当老年代满了后，进行一次full gc，老年代依然满着，这时会出OOM内存溢出。<br>我们调优的目的主要就是减少full gc 次数，以减少STW（Stop the World），STW是指full gc时，会暂停当前执行线程，等待full gc结束，即在full gc期间，JVM虚拟机是暂停的。</p><p><strong>注：一般老年代占对内存的2/3.</strong></p><h2 id="频繁full-gc-如何解决？"><a href="#频繁full-gc-如何解决？" class="headerlink" title="频繁full gc 如何解决？"></a><strong>频繁full gc 如何解决？</strong></h2><p>能否对jvm调优，让虚拟机几乎不发生full gc，<br>当系统一次性加载过多数据进内存，导致频繁有大对象进入老年代，触发Full GC。我们可调整伊甸园区（Eden)大小 通过-Xmn 参数调整。具体如何调优还要根据实际情况。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;jvm-垃圾回收机制理解&quot;&gt;&lt;a href=&quot;#jvm-垃圾回收机制理解&quot; class=&quot;headerlink&quot; title=&quot;jvm 垃圾回收机制理解&quot;&gt;&lt;/a&gt;jvm 垃圾回收机制理解&lt;/h1&gt;&lt;h2 id=&quot;堆内存区域划分&quot;&gt;&lt;a href=&quot;#堆内存区域划分&quot; class=&quot;headerlink&quot; title=&quot;堆内存区域划分&quot;&gt;&lt;/a&gt;堆内存区域划分&lt;/h2&gt;&lt;p&gt;堆内存被划分为年轻代和老年代两个区域，而年轻代又分为一个伊甸园区（Eden）和两个幸存区（from_Survivor和to_Survivor），年轻代分配比例8：1：1。&lt;/p&gt;
&lt;p&gt;##了解垃圾回收机制前我们要先了解下，如何判断对象可用被回收？&lt;/p&gt;
&lt;p&gt;将“GC roots”对象作为根节点，从根节点开始向下查找引用对象，直到最后一个节点，找到的对象都标记为&lt;strong&gt;非垃圾对象&lt;/strong&gt;，其余未标记的都是垃圾对象。&lt;br&gt;线程栈中的本地变量，静态变量，本地方法中的变量都可用作为GC roots根节点， 这就是可达性分析算法。&lt;/p&gt;
&lt;p&gt;标记为非垃圾的对象会被复制空的survivor区，对象的分代年龄加1，剩余伊甸园区的垃圾对象会被清除。当伊甸园区域再次满了后会再次触发minor gc。&lt;br&gt;再次根据可达性分析算法标记非垃圾对象，重复上面的操作。&lt;br&gt;当长期存活对象（分代年龄达到15）和大对象，将会放到老年区。&lt;/p&gt;</summary>
    
    
    
    
    <category term="jvm" scheme="https://groupfusion.github.io/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>工作学习中技术积累</title>
    <link href="https://groupfusion.github.io/2021/12/26/devlang/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    <id>https://groupfusion.github.io/2021/12/26/devlang/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/</id>
    <published>2021-12-26T08:29:57.000Z</published>
    <updated>2023-12-15T12:42:17.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用技术纪录"><a href="#使用技术纪录" class="headerlink" title="使用技术纪录"></a>使用技术纪录</h2><h3 id="百度指定网站搜索"><a href="#百度指定网站搜索" class="headerlink" title="百度指定网站搜索"></a>百度指定网站搜索</h3><p>site:(jianshu.com) WKT</p><h3 id="在线工具站点"><a href="#在线工具站点" class="headerlink" title="在线工具站点"></a>在线工具站点</h3><p><a href="https://tooltt.com/yaml2properties/">yaml转properties</a><br><a href="https://www.box3.cn/tools/lbs.html">经纬度距离计算</a></p><span id="more"></span><h3 id="mysql-install"><a href="#mysql-install" class="headerlink" title="mysql install"></a>mysql install</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql57-community-release-el6-10.noarch.rpm</span><br><span class="line">报错</span><br><span class="line">No package matched to upgrade: mysql57-community-release</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line">Error: mysql57-community-release conflicts with mysql-community-release-el6-5.noarch</span><br><span class="line">You could try using --skip-broken to work around the problem</span><br><span class="line">You could try running: rpm -Va --nofiles --nodigest</span><br><span class="line"></span><br><span class="line">rpm -qa |grep mysql 查看有如下内容</span><br><span class="line">mysql-community-release-el6-5.noarch</span><br><span class="line">mysql-community-common-5.6.44-2.el6.x86_64</span><br><span class="line"></span><br><span class="line">操作一下 卸载了</span><br><span class="line">rpm -e --nodeps mysql-community-release-el6-5.noarch</span><br><span class="line">rpm -e --nodeps mysql-community-common-5.6.44-2.el6.x86_64</span><br><span class="line"></span><br><span class="line">重新升级</span><br><span class="line"></span><br><span class="line">rpm -Uvh mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="centos6-mysql5-6-升级"><a href="#centos6-mysql5-6-升级" class="headerlink" title="centos6 mysql5.6 升级"></a>centos6 mysql5.6 升级</h4><p><a href="http://www.zsythink.net/archives/2345">http://www.zsythink.net/archives/2345</a><br><a href="https://blog.csdn.net/h330531987/article/details/94452368">https://blog.csdn.net/h330531987/article/details/94452368</a><br><a href="https://www.cnblogs.com/daixh/p/11129768.html">https://www.cnblogs.com/daixh/p/11129768.html</a><br><a href="https://www.cnblogs.com/shione/p/10161021.html">https://www.cnblogs.com/shione/p/10161021.html</a></p><h3 id="CSS书写规范、顺序"><a href="#CSS书写规范、顺序" class="headerlink" title="CSS书写规范、顺序"></a>CSS书写规范、顺序</h3><p><a href=".css%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83%E9%A1%BA%E5%BA%8F.md">css书写规范顺序</a></p><h3 id="flowable-工作流与springboot集成"><a href="#flowable-工作流与springboot集成" class="headerlink" title="flowable 工作流与springboot集成"></a>flowable 工作流与springboot集成</h3><p><a href="https://www.cnblogs.com/yangjiming/p/10944120.html">springboot和flowable modeler整合</a><br><a href="https://www.jianshu.com/p/d9ae64fac55c">Springboot集成flowable modeler 免登录</a><br><a href="https://www.jianshu.com/p/799b1ebf5dc4?tdsourcetag=s_pctim_aiomsg">Flowable 学习笔记</a><br><a href="https://blog.csdn.net/puhaiyang/article/details/79845248">采用springboot+flowable快速实现工作流</a><br><a href="https://blog.csdn.net/weixin_40816738/article/details/103112704">SpringBoot集成flowable-modeler(6.4.1) 实现免登</a><br><a href="https://tkjohn.github.io/flowable-userguide/#_advanced">Flowable BPMN 用户手册 (v 6.3.0)</a><br><a href="https://www.dazhuanlan.com/2020/01/06/5e128b27059e9/">SpringBoot集成Flowable UI</a><br><a href="http://www.fhadmin.org/webnewsdetail16.html">Flowable 工作流 Springboot vue.js 前后分离 跨域 有代码生成器</a></p><p><a href="https://gitee.com/blackzs/flowable-designer">flowable-designer</a></p><h3 id="openlayers-gis开发"><a href="#openlayers-gis开发" class="headerlink" title="openlayers gis开发"></a>openlayers gis开发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">var mapUrl = &#123;</span><br><span class="line">    /****</span><br><span class="line">     * 高德地图</span><br><span class="line">     * lang可以通过zh_cn设置中文，en设置英文，size基本无作用，scl设置标注还是底图，scl=1代表注记，</span><br><span class="line">     * scl=2代表底图（矢量或者影像），style设置影像和路网，style=6为影像图，</span><br><span class="line">     * vec——街道底图</span><br><span class="line">     * img——影像底图</span><br><span class="line">     * roadLabel---路网+标注</span><br><span class="line">     */</span><br><span class="line">    &quot;aMap-img&quot;: &quot;http://webst0&#123;1-4&#125;.is.autonavi.com/appmaptile?style=6&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;aMap-vec&quot;: &quot;http://webrd0&#123;1-4&#125;.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=8&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;aMap-roadLabel&quot;: &quot;http://webst0&#123;1-4&#125;.is.autonavi.com/appmaptile?style=8&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    /***</span><br><span class="line">    *高德新版地图*</span><br><span class="line">    */</span><br><span class="line">    &quot;aMap-vec-a&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=7&quot;, //为矢量图（含路网、含注记）</span><br><span class="line"></span><br><span class="line">    &quot;aMap-img-n&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=6&quot;, //为影像底图（不含路网，不含注记）</span><br><span class="line"></span><br><span class="line">    &quot;aMap-img-a&quot;: &quot;http://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;lang=zh_cn&amp;size=1&amp;scl=1&amp;style=8&quot;, //为影像路图（含路网，含注记）</span><br><span class="line"></span><br><span class="line">    /***</span><br><span class="line">     * 天地图 要key的</span><br><span class="line">     * vec——街道底图</span><br><span class="line">     * img——影像底图</span><br><span class="line">     * ter——地形底图</span><br><span class="line">     * cva——中文注记</span><br><span class="line">     * cta/cia——道路+中文注记 ---roadLabel</span><br><span class="line">     */</span><br><span class="line">    &quot;tian-img&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=img_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-roadLabel&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=cta_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-label&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=cva_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-vec&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=vec_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    &quot;tian-ter&quot;: &quot;http://t&#123;0-7&#125;.tianditu.gov.cn/DataServer?T=ter_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=你的密钥&quot;,</span><br><span class="line">    /***</span><br><span class="line">     *geoq地图</span><br><span class="line">     * http://cache1.arcgisonline.cn</span><br><span class="line">     * http://map.geoq.cn</span><br><span class="line">     * vec：标准彩色地图</span><br><span class="line">     * gray、blue、warm</span><br><span class="line">     * line 中国轮廓图</span><br><span class="line">     * china 中国轮廓图+标注</span><br><span class="line">     * Hydro 水系</span><br><span class="line">     * green 植被</span><br><span class="line">     */</span><br><span class="line">    &quot;geoq-vec&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineCommunity/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-gray&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetGray/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-blue&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-warm&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,</span><br><span class="line">    &quot;geoq-line&quot;: &quot;http://cache1.arcgisonline.cn/arcgis/rest/services/SimpleFeature/ChinaBoundaryLine/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-china&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/administrative_division_boundaryandlabel/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-Hydro&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/WorldHydroMap/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    &quot;geoq-green&quot;: &quot;http://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/vegetation/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&quot;,//不稳定</span><br><span class="line">    /***</span><br><span class="line">     * Google</span><br><span class="line">     * m 街道</span><br><span class="line">     * s 影像</span><br><span class="line">     */</span><br><span class="line">    &quot;google-vec&quot;: &quot;http://www.google.cn/maps/vt?lyrs=m@189&amp;gl=cn&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;,</span><br><span class="line">    &quot;google-img&quot;: &quot;http://www.google.cn/maps/vt?lyrs=s@189&amp;gl=cn&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-天地图"><a href="#GIS底图－－-天地图" class="headerlink" title="GIS底图－－ 天地图"></a>GIS底图－－ 天地图</h4><p>// //<a href="http://www.arcgisonline.cn/arcgis/home/webmap/viewer.html">http://www.arcgisonline.cn/arcgis/home/webmap/viewer.html</a> 地图可参考这个链接<br>// 影像地图（球面墨卡托投影）<br>// 天地图-影像注记（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/cia_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cia&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/cia_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cia&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-影像地图（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>//<br>// 矢量地图（球面墨卡托投影）<br>// 天地图-矢量注记（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-矢量地图（球面墨卡托投影）<br>// <a href="https://t{0-7}.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=%7Bz%7D&amp;TILEROW=%7By%7D&amp;TILECOL=%7Bx%7D&amp;tk=4267820f43926eaf808d61dc07269beb">https://t{0-7}.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX={z}&amp;TILEROW={y}&amp;TILECOL={x}&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>//<br>// 天地图-矢量（含注记）（球面墨卡托投影）<br>// 天地图-矢量地图（球面墨卡托投影）<br>// <a href="http://t{0-7}.tianditu.com/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1550&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb">http://t{0-7}.tianditu.com/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1550&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// 天地图-矢量注记（球面墨卡托投影）<br>// <a href="http://t{0-7}.tianditu.com/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1551&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb">http://t{0-7}.tianditu.com/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=12&amp;TILEROW=1551&amp;TILECOL=3372&amp;tk=4267820f43926eaf808d61dc07269beb</a><br>// </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//天地图［可用］［无需纠偏］</span><br><span class="line">var tian_di_tuMapLayer = new ol.layer.Tile(&#123;</span><br><span class="line">    title:&#x27;天地图卫星影像&#x27;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url:&#x27;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=img_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图路网 (和注记一起使用)［可用］［无需纠偏］</span><br><span class="line">var tian_di_tu_road_layer = new ol.layer.Tile(&#123;</span><br><span class="line">    title: &quot;天地图路网&quot;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url: &quot;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=vec_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图注记</span><br><span class="line">var tian_di_tu_annotation = new ol.layer.Tile(&#123;</span><br><span class="line">    title: &quot;天地图文字标注&quot;,</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url: &#x27;http://t&#123;1-7&#125;.tianditu.com/DataServer?T=cva_w&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;l=&#123;z&#125;&amp;tk=49ea1deec0ffd88ef13a3f69987e9a63&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//天地图 ［无需纠偏］</span><br><span class="line">var arcgisLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  title:&#x27;天地图卫星影像&#x27;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;1-7&#125;.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=img&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">var arcgis2Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  title: &quot;天地图矢量地图&quot;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;0-7&#125;.tianditu.gov.cn/vec_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=vec&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">var arcgis3Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  title:&#x27;天地图-矢量地图&#x27;,</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;https://t&#123;0-7&#125;.tianditu.gov.cn/cva_w/wmts?SERVICE=WMTS&amp;VERSION=1.0.0&amp;REQUEST=GetTile&amp;LAYER=cva&amp;STYLE=default&amp;FORMAT=tiles&amp;TILEMATRIXSET=w&amp;TILEMATRIX=&#123;z&#125;&amp;TILEROW=&#123;y&#125;&amp;TILECOL=&#123;x&#125;&amp;tk=4267820f43926eaf808d61dc07269beb&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-高德地图"><a href="#GIS底图－－-高德地图" class="headerlink" title="GIS底图－－ 高德地图"></a>GIS底图－－ 高德地图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//高德矢量图［可用］ 需要纠偏</span><br><span class="line">var gaodeMapLayer = new ol.layer.Tile(&#123;</span><br><span class="line">    source: new ol.source.XYZ(&#123;</span><br><span class="line">        url:&#x27;https://wprd0&#123;1-4&#125;.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;style=7&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&#x27;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="GIS底图－－-捷泰地图"><a href="#GIS底图－－-捷泰地图" class="headerlink" title="GIS底图－－ 捷泰地图"></a>GIS底图－－ 捷泰地图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//arcgis 矢量图［可用］ 需要纠偏</span><br><span class="line">var backLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://cache1.arcgisonline.cn/arcgis/rest/services/ChinaOnlineCommunity/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//捷泰地图(灰) ［需要纠偏］</span><br><span class="line">var geoq2Layer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://cache1.arcgisonline.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//捷泰地图（深蓝） ［需要纠偏］</span><br><span class="line">var geoqLayer = new ol.layer.Tile(&#123;</span><br><span class="line">  source: new ol.source.XYZ(&#123;</span><br><span class="line">    crossOrigin: &#x27;anonymous&#x27;,</span><br><span class="line">    url:&#x27;http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/&#123;z&#125;/&#123;y&#125;/&#123;x&#125;&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="地理空间数据格式"><a href="#地理空间数据格式" class="headerlink" title="地理空间数据格式"></a>地理空间数据格式</h3><p><a href="http://www.voidcn.com/article/p-spkzwblm-bpe.html">OGC简单要素标准（WKT/WKB）</a><br><a href="https://www.osgeo.cn/pygis/others-geojson.html">Python下面其他开源GIS库的使用(GeoJson)</a><br><a href="https://www.jianshu.com/p/852d7ad081b3">GEOJSON标准格式学习</a><br><a href="https://www.jianshu.com/p/d78fff321005">GeoJSON与WKT、WKB字符串</a></p><p>数据格式类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POINT(6 10)</span><br><span class="line">LINESTRING(3 4,10 50,20 25)</span><br><span class="line">POLYGON((1 1,5 1,5 5,1 5,1 1),(2 2,2 3,3 3,3 2,2 2))</span><br><span class="line">MULTIPOINT(3.5 5.6, 4.8 10.5)</span><br><span class="line">MULTILINESTRING((3 4,10 50,20 25),(-5 -8,-10 -8,-15 -4))</span><br><span class="line">MULTIPOLYGON(((1 1,5 1,5 5,1 5,1 1),(2 2,2 3,3 3,3 2,2 2)),((6 3,9 2,9 4,6 3)))</span><br><span class="line">GEOMETRYCOLLECTION(POINT(4 6),LINESTRING(4 6,7 10))</span><br><span class="line">POINT ZM (1 1 5 60)</span><br><span class="line">POINT M (1 1 80)</span><br><span class="line">POINT EMPTY</span><br><span class="line">MULTIPOLYGON EMPTY</span><br></pre></td></tr></table></figure><p>关于坐标系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">坐标系：</span><br><span class="line"> 3857 google</span><br><span class="line"> 4326 WGS-84：是国际标准，GPS坐标（Google Earth使用、或者GPS模块）</span><br><span class="line"> 2437 GCJ-02：中国坐标偏移标准，Google Map、高德、腾讯使用</span><br><span class="line"> BD-09：百度坐标偏移标准，Baidu Map使用</span><br><span class="line">坐标系转换</span><br><span class="line"> &#x27;EPSG:4326&#x27; - 经纬度坐标-WGS84</span><br><span class="line"> &#x27;EPSG:3857&#x27; - xy坐标-web墨卡托</span><br><span class="line">openlayers 默认的坐标系为 EPSG:3857</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wangweigang689/article/details/105778722">https://blog.csdn.net/wangweigang689/article/details/105778722</a></p><p>行政区划代码，地区 <a href="https://www.likecs.com/show-246916.html">https://www.likecs.com/show-246916.html</a></p><h3 id="GeoTools-amp-openlayers"><a href="#GeoTools-amp-openlayers" class="headerlink" title="GeoTools &amp; openlayers"></a>GeoTools &amp; openlayers</h3><p><a href="https://segmentfault.com/a/1190000020297846">Openlayers API整理</a><br><a href="https://openlayers.org/">openlayer</a><br><a href="http://docs.geotools.org/latest/userguide/library/jts/index.html">GeoTools</a><br><a href="http://docs.geotools.org/stable/userguide/">Geotools user guide</a><br><a href="https://www.cnblogs.com/qingtian-jlj/p/12988219.html">WKT(Well-known text)是开放地理空间联盟OGC（Open GIS Consortium ）制定的一种文本标记语言，用于表示矢量几何对象、空间参照系统及空间参照系统之间的转换</a></p><h3 id="分布式架构优化"><a href="#分布式架构优化" class="headerlink" title="分布式架构优化"></a>分布式架构优化</h3><p>分布式框架<br>    Dubbo<br>    shardingsphere<br>    Netty<br>分布式消息中间间<br>    Rabbitmq<br>    RocketMq<br>    kafka<br>分布式存储中间件<br>    Redis<br>    MongoDB<br>    FastDFS<br>    Elasticserch</p><p><a href="https://www.bilibili.com/video/BV1cL411b77R">B站最全面分布式面试100道（涵盖所有分布式核心面试知识点）</a><br><a href="https://www.bilibili.com/video/BV1aJ411Y73e">分布式架构学习视频全集|图灵周瑜 </a><br><a href="https://www.bilibili.com/video/BV1Hy4y117op">分布式架构全套教程（700分钟干货精讲）</a><br><a href="https://www.bilibili.com/video/BV1tq4y1D7Kb">超全面深入讲解Java虚拟机 </a><br><a href="https://www.bilibili.com/video/BV1gh411z7kJ">分布式文件系统FastDFS入门到实战 </a><br><a href="https://www.bilibili.com/video/BV1nb4y1974r">Tomcat与Nginx负载均衡底层原理分析 </a></p><p><a href="https://www.cnblogs.com/FlyAway2013/p/11201250.html">Nacos 集群部署 </a><br><a href="https://www.cnblogs.com/yuuje/p/11005992.html">nginx如何配置负载均衡</a></p><h3 id="大数据分布式架构"><a href="#大数据分布式架构" class="headerlink" title="大数据分布式架构"></a>大数据分布式架构</h3><p><a href="https://cloud.tencent.com/developer/article/1881291">软件架构设计分层模型和构图思考</a><br><a href="https://cloud.tencent.com/developer/article/1049174">中国联通大数据能力开放平台容器化实践</a><br><a href="https://cloud.tencent.com/developer/article/1540779">运维产品的能力闭环体系</a><br><a href="https://cloud.tencent.com/developer/article/1897347">研发平台演进：从工具链到开放平台</a><br><a href="https://cloud.tencent.com/developer/article/1702031">业务系统组件化开发概述和技术架构设计</a></p><p><a href="https://cloud.tencent.com/developer/article/1832221">产品高阶能力：架构图的设计与画法</a><br><a href="https://cloud.tencent.com/developer/article/1518589">怎样成为一个优秀的架构师？</a><br><a href="https://cloud.tencent.com/developer/article/1533354">直击架构本质：优秀架构师必须掌握的几种架构思维</a><br><a href="https://cloud.tencent.com/developer/article/1561345">系统化服务构建-软件工程分层</a></p><h3 id="贷款材料"><a href="#贷款材料" class="headerlink" title="贷款材料"></a>贷款材料</h3><p>贷款额度计算材料（预审材料）：<br>夫妻双方身份证<br>征信证明<br>户口本<br>异地缴存证明</p><p>公积金贷款需要材料：<br>夫妻双方身份证 原件、复印件一份<br>户口本  原件、复印件一份<br>结婚证 原件及复印件一份<br>夫妻双方（一个月内）征信报告<br>售房单位网签备案的商品房买卖合同<br>售房单位出具的首付款的发票 原件及复印件一份<br>银行卡（开发商要求的汇款银行的） 原件及复印件一份<br>异地贷款缴存使用证明</p><h3 id="CSS-书写规范"><a href="#CSS-书写规范" class="headerlink" title="CSS 书写规范"></a>CSS 书写规范</h3><p><a href="https://www.cnblogs.com/xuepei/p/8961809.html">CSS书写规范、顺序</a></p><h3 id="javaList进行求和、分组、提取对象单个属性列表"><a href="#javaList进行求和、分组、提取对象单个属性列表" class="headerlink" title="javaList进行求和、分组、提取对象单个属性列表"></a>javaList进行求和、分组、提取对象单个属性列表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 分组</span><br><span class="line"></span><br><span class="line">Map&lt;String, List&lt;User&gt;&gt; collect = details.stream().collect(Collectors.groupingBy(User::getCustomerId));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 单列求和</span><br><span class="line"><span class="keyword">int</span> totalValue = details.stream().mapToInt(User::getSmsFee).sum();</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 提取单列数据集合</span><br><span class="line">List&lt;Integer&gt; ids = details.stream().map(User::getId).collect(Collectors.toList());</span><br><span class="line">Set&lt;String&gt; accounts = details.stream().map(User::getAccount).collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 按条件过滤</span><br><span class="line"><span class="comment">//按照条件过滤</span></span><br><span class="line">List&lt;User&gt; collect = list.stream().filter(u -&gt; <span class="string">&quot;北京&quot;</span>.equals(u.getAddr())).collect(Collectors.toList())</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>两个集合比较</span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤符合某个集合的数据（为了比对效率，accounts不能是list，需要使用set集合）</span></span><br><span class="line">List&lt;ExamData&gt; existList = uniqueList.stream().filter(t-&gt;accounts.contains(t.getAccount())).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> 去重</span><br><span class="line"><span class="comment">//按单个属性去重</span></span><br><span class="line">List&lt;InstallOrder&gt; unique = installOrderList.stream().collect(</span><br><span class="line">                    Collectors.collectingAndThen(Collectors.toCollection(()-&gt;<span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.comparing(InstallOrder::getOrderCode))),ArrayList::<span class="keyword">new</span>));</span><br><span class="line">List&lt;ExamData&gt; uniqueList = data.stream().distinct().collect(Collectors.toList()); <span class="comment">//这种写法需要重写ExamData中的hasCode和equals方法</span></span><br><span class="line"><span class="comment">//ExamData hasCode和equals重写</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(<span class="keyword">final</span> Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> ExamData detail = (ExamData) obj;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == detail) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.account.equals(detail.account));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hashno = <span class="number">7</span>;</span><br><span class="line">    hashno = <span class="number">13</span> * hashno + (account == <span class="keyword">null</span> ? <span class="number">0</span> : account.hashCode());</span><br><span class="line">    <span class="keyword">return</span> hashno;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mybatis-使用hikari-驱动读取全量数据"><a href="#mybatis-使用hikari-驱动读取全量数据" class="headerlink" title="mybatis 使用hikari 驱动读取全量数据"></a>mybatis 使用hikari 驱动读取全量数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Transactional Cursor mybatis游标方式必须设置事务否则执行报错。</span></span><br><span class="line"><span class="comment">//2，druid 连接池不支持 mybatis 游标方式。</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;ExamData&gt; <span class="title">getExamData</span><span class="params">(String cityName, String opMonth)</span> </span>&#123;</span><br><span class="line">    List&lt;ExamData&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">try</span> (Cursor&lt;ExamData&gt; cursor = deatilMapper.findByCity4Cursor(cityName, opMonth)) &#123;</span><br><span class="line">        cursor.forEach(foo -&gt; &#123;list.add(foo); &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Select(&quot;&lt;script&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;select &quot; +</span></span><br><span class="line"><span class="meta">        &quot;   id id,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   op_month opMonth,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   city_name cityName,\n&quot; +</span></span><br><span class="line"><span class="meta">        &quot;   ... \n&quot; +</span></span><br><span class="line"><span class="meta">        &quot; from ZS_EXAM_DETAIL &quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;where&gt; &quot; +</span></span><br><span class="line"><span class="meta">        &quot;   OP_MONTH=#&#123;opMonth&#125; and city_name=#&#123;cityName&#125;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/where&gt;&quot; +</span></span><br><span class="line"><span class="meta">        &quot;&lt;/script&gt;&quot;)</span></span><br><span class="line"><span class="meta">@Options(fetchSize = 1000)</span></span><br><span class="line"><span class="function">Cursor&lt;ExamData&gt; <span class="title">findByCity4Cursor</span><span class="params">(<span class="meta">@Param(&quot;cityName&quot;)</span> String cityName,<span class="meta">@Param(&quot;opMonth&quot;)</span> String opMonth)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="Arduino资料"><a href="#Arduino资料" class="headerlink" title="Arduino资料"></a>Arduino资料</h3><p><a href="https://www.arduino.cn/thread-1066-1-1.html">https://www.arduino.cn/thread-1066-1-1.html</a></p><h3 id="在线文档"><a href="#在线文档" class="headerlink" title="在线文档"></a>在线文档</h3><p><a href="https://docs.oracle.com/en/java/javase/11/">java11文档</a><br><a href="https://www.mklab.cn/api/jdk/11/cn">java11中文</a><br><a href="https://www.apiref.com/java11-zh/index.html">java11中文-备份</a><br><a href="https://docs.oracle.com/en/java/javase/11/docs/api/">java11英文</a></p><p><a href="https://www.mklab.cn/api/jdk/8/cn">java8中文</a><br><a href="https://www.matools.com/api/java8">java8中文2</a><br><a href="https://docs.oracle.com/javase/8/docs/api/">java8英文</a></p><p><a href="http://www.redis.cn/documentation.html">Redis中文1</a><br><a href="https://www.redis.net.cn/tutorial/3501.html">Redis中文2</a></p><p><a href="https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/reference/htmlsingle">spring-boot</a><br><a href="https://www.apiref.com/spring-boot-zh/">spring-boot中文</a></p><p><a href="https://www.springcloud.cc/spring-cloud-brixton.html">Spring Cloud中文</a><br><a href="https://docs.spring.io/spring-cloud/docs/Hoxton.SR12/reference/html/">Spring Cloud Hoxton.SR12(springboot 2.3.12.RELEASE)</a></p><p><a href="https://www.apiref.com/kubernetes-zh/index.html">Kubernetes(K8S)中文文档_Kubernetes中文社区</a><br><a href="https://www.docker.org.cn/book/docker/what-is-docker-16.html">docker入门教程</a><br><a href="https://www.runoob.com/docker/docker-tutorial.html">docker教程</a><br><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html">Elasticsearch: 权威指南</a></p><p><a href="https://openlayers.org/en/latest/apidoc/">openlayers文档</a><br><a href="http://docs.geotools.org/stable/userguide/index.html">geotools文档</a><br><a href="https://docs.geotools.org/stable/javadocs/">geotools api</a><br><a href="http://locationtech.github.io/jts/javadoc/index.html">JTS api</a></p><p><a href="https://www.cnblogs.com/xiaxiaolu/p/13514915.html">聊聊常见的服务(接口)认证授权</a><br><a href="https://www.cnblogs.com/joy99/p/10941543.html">Spring AOP——Spring 中面向切面编程</a><br><a href="https://blog.csdn.net/qq_38496561/article/details/105945386">Spring Boot Admin+Nacos从入门到上线</a><br><a href="https://www.jianshu.com/p/05ee63c5b932">Nacos整合Spring Boot Admin</a><br><a href="http://www.uml.org.cn/wfw/2020041312.asp">微服务环境搭建</a></p><h3 id="RSIC-V"><a href="#RSIC-V" class="headerlink" title="RSIC-V"></a>RSIC-V</h3><p><a href="https://gitee.com/liangkangnan/tinyriscv#https://liangkangnan.gitee.io/2020/04/29/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99RISC-V%E5%A4%84%E7%90%86%E5%99%A8/">从零开始写RISC-V处理器</a><br><a href="">Verilog HDL</a></p><h3 id="springboot-cloud-示例"><a href="#springboot-cloud-示例" class="headerlink" title="springboot cloud 示例"></a>springboot cloud 示例</h3><p><a href="https://gitee.com/matevip">MateCloud微服</a></p><h3 id="计算机类书目"><a href="#计算机类书目" class="headerlink" title="计算机类书目"></a>计算机类书目</h3><p>1.计算机科学概论</p><p>计算机科学概论<br>计算机系统概论(2016/11/27)<br>计算机系统要素(2016/11/27)</p><p>2.计算机数学基础</p><p>高等数学线性代数<br>概率论与数理统计<br>离散数学及其应用<br>离散数学教程(北大版)<br>什么是数学<br>具体数学：计算机科学基础</p><p>3.C语言</p><p>C primer plusThe C programming language<br>C和指针<br>C专家教程<br>C陷阱与缺陷<br>c语言解惑<br>C标准库<br>你必须知道的495个C语言问题</p><p>4.算法与数据结构</p><p>数据结构(清华版)数据结构与算法分析—C语言描述<br>C算法(第一卷:基础、数据结构、排序和搜索)<br>C算法(第二卷 图算法)<br>编程珠玑<br>编程珠玑II(More programming Pearls)<br>算法概论 2014-2-8</p><p>算法第4版红皮书(2016/11/27)</p><p>算法导论计算机程序设计艺术卷1<br>计算机程序设计艺术卷2<br>计算机程序设计艺术卷3</p><p>5.电子技术基础</p><p>模拟电子技术(童诗白版)<br>数字逻辑与数字集成电路(清华版)</p><p>6.汇编语言</p><p>汇编语言(王爽版)80X86汇编语言程序设计教程<br>Intel汇编语言程序设计<br>IBM PC汇编语言程序设计(国外版)<br>高级汇编语言程序设计<br>保护方式下的80386及其编程<br>黑客反汇编揭秘<br>Windows.环境下32位汇编语言程序设计(第2版)<br>汇编语言程序设计+基于ARM体系结构</p><p>7.计算机硬件原理</p><p>计算机组成-结构化方法微机原理与接口技术(陈光军版)<br>计算机体系结构(张晨曦版)<br>计算机组成与设计硬件/软件接口<br>Intel微处理器结构、编程与接口<br>计算机体系结构(量化研究方法)<br>编程卓越之道卷1<br>编程卓越之道卷2<br>深入理解计算机系统<br>编码的奥秘</p><p>8.数据库系统原理</p><p>数据库系统概念数据库系统导论<br>数据库系统实现</p><p>9.编译原理</p><p>编译原理(清华第2版)编译原理及实践<br>编译原理:原则,技术和工具<br>现代编译原理-C语言描述<br>高级编译器设计与实现</p><p>10.操作系统原理</p><p>操作系统概念现代操作系统<br>链接器和加载器<br>程序员的自我修养:链接、装载与库<br>自己动手写操作系统<br>操作系统设计与实现</p><p>11.计算机网络</p><p>计算机网络(Computer Networks)TCP-IP详解卷1<br>TCP-IP详解卷2<br>TCP-IP详解卷3<br>用TCP/IP进行网际互联(第一卷):原理、协议与结构<br>用TCP/IP进行网际互联第二卷：设计、实现与内核(第三版)<br>用TCP/IP 进行网际互联第三卷:客户-服务器编程与应用</p><p>12.软件工程和面向对象程序设计</p><p>C++编程思想卷<br>java编程思想<br>软件工程(Software.Engineering)<br>软件工程：实践者的研究方法<br>深入浅出面向对象分析与设计<br>head first设计模式<br>道法自然:面向对象实践指南<br>面向对象分析与设计<br>敏捷软件开发：原则、模式与实践<br>设计模式:可复用面向对象软件的基础<br>测试驱动开发<br>重构—改善既有代码的设计<br>代码大全<br>程序设计实践<br>程序员修炼之道：从小工到专家<br>卓有成效的程序员<br>代码之美<br>人月神话<br>计算机程序的构造和解释<br>观止-微软创建NT和未来的夺命狂奔<br>代码优化：有效使用内存[美]克里斯·卡巴斯基<br>编程高手箴言(梁肇新)<br>游戏之旅-我的编程感悟(云风)<br>企业应用架构模式</p><p>修改代码的艺术</p><p>xUnit.Test.Patterns.Refactoring.Test.Code</p><p>13.windows编程基础</p><p>Windows操作系统原理Inside Windows 2000<br>深入解析Windows操作系统<br>天书夜读：从汇编语言到Windows内核编程<br>windows程序设计<br>WINDOWS核心编程</p><p>14.linux/unix编程基础</p><p>鸟哥的Linux私房菜:基础学习篇鸟哥的Linux私房菜:服务器架设篇<br>linux程序设计<br>UNIX环境高级编程<br>Unix网络编程卷1<br>UNIX网络编程卷2<br>UNIX编程艺术<br>UNIX Shell范例精解<br>The Linux Programming Interface - A Linux and UNIX System Programming Handbook</p><p>15.Linux/unix内核源代码和驱动程序</p><p>Linux内核设计与实现LINUX内核源代码情景分析<br>深入理解LINUX内核<br>Linux内核完全注释<br>Linux设备驱动程序<br>深入Linux设备驱动程序内核机制<br>深入Linux内核架构<br>精通Linux设备驱动程序开发<br>Linux设备驱动开发详解</p><p>16.C++语言</p><p>C++编程思想2Essential C++<br>C++ primer<br>C++程序设计语言<br>C++语言的设计和演化<br>Accelerated C++<br>Effective C++<br>More Effective C++<br>Exceptional C++<br>More Exceptional C++<br>C++设计新思维<br>深度探索C++对象模型<br>C++沉思录<br>C++ Templates: The Complete Guide<br>C++ FAQs</p><p>17.标准库STL使用<br>C++标准程序库Effective STL<br>泛型编程与STL<br>18.STL源代码<br>STL源码剖析</p><p>19.java语言<br>java编程思想Java编程规范(The Java Language Specification)<br>Beginning Java(C#) Objects从概念到代码<br>effective java<br>Java解惑<br>Java性能优化权威指南<br>深入理解Java虚拟机<br>Java并发编程实践</p><p>20.图形学/分布式/机器学习<br>计算机图形学(第三版)<br>大数据时代<br>多处理器编程的艺术<br>冈萨雷斯数字图像处理(</p><p>（1）深入理解计算机系统(原书第3版).pdf<br>（2）计算机科学导论(第2版).pdf<br>（3）计算机科学概论(原书第5版).pdf</p><p>（4）C程序设计语言(第2版 新版).pdf<br>（9）C陷阱与缺陷(第2版)-人民邮电出版社.pdf<br>（13）More Effective C++.pdf<br>（14）C++编程思想(两卷合订本).pdf<br>（15）C++标准程序库(中文版).pdf<br>（16）Exceptional C++ Style中文版.pdf<br>（17）More Exceptional C++中文版.pdf</p><p>（18）Head First Java(第2版)中文版.pdf<br>（19）Java编程思想(第4版).pdf<br>（20）Java核心技术 卷1 基础知识(第10版).pdf<br>（21）Effective Java中文版(原书第3版).pdf</p><p>（22）Python学习手册(第4版).pdf<br>（23）笨办法 学Python(第4版).pdf<br>（24）Python核心编程(第3版)中文版.pdf<br>（26）流畅的Python.pdf</p><p>（27）算法导论(原书第3版).pdf<br>（28）计算机程序设计艺术 卷1：基本算法.pdf<br>（28）计算机程序设计艺术 卷2：半数值算法.pdf<br>（29）计算机程序设计艺术 卷3：排序与查找.pdf<br>（30）算法(第4版)中文版.pdf<br>（31）数据结构与算法分析 C语言描述(原书第2版).pdf<br>（32）算法竞赛入门经典(第2版).pdf</p><p>（33）编译原理(龙书)中文版.pdf<br>（34）现代编译原理 C语言描述.pdf<br>（35）高级编译器设计与实现(鲸书)中文版.pdf</p><p>（36）计算机网络 Andrew S.Tanenbaum(第四版).pdf<br>（37）计算机网络 自顶向下方法(英文第6版).pdf<br>（37）计算机网络 自顶向下方法(原书第6版).pdf<br>（37）计算机网络 自顶向下方法(中文第4版).pdf<br>（38）TCP IP详解 卷1：协议(原书第2版).pdf<br>（39）TCP IP详解 卷2：实现.pdf</p><p>（41）现代操作系统(第三版).pdf<br>（42）鸟哥的Linux私房菜(第四版).pdf<br>（44）UNIX环境高级编程(第二版).pdf<br>（44）UNIX环境高级编程(第三版).pdf<br>（45）深入理解Linux内核(第三版)中文版.pdf</p><p>（46）Pattern Recognition and Machine Learning.pdf<br>（47）Machine Learning A Probabilistic Perspective.pdf<br>（48）机器学习 Tom M.Mitchell.pdf<br>（49）机器学习 周志华.pdf<br>（50）统计自然语言处理基础(中文版).pdf<br>（51）DEEP LEARNING 深度学习 花书.pdf</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;使用技术纪录&quot;&gt;&lt;a href=&quot;#使用技术纪录&quot; class=&quot;headerlink&quot; title=&quot;使用技术纪录&quot;&gt;&lt;/a&gt;使用技术纪录&lt;/h2&gt;&lt;h3 id=&quot;百度指定网站搜索&quot;&gt;&lt;a href=&quot;#百度指定网站搜索&quot; class=&quot;headerlink&quot; title=&quot;百度指定网站搜索&quot;&gt;&lt;/a&gt;百度指定网站搜索&lt;/h3&gt;&lt;p&gt;site:(jianshu.com) WKT&lt;/p&gt;
&lt;h3 id=&quot;在线工具站点&quot;&gt;&lt;a href=&quot;#在线工具站点&quot; class=&quot;headerlink&quot; title=&quot;在线工具站点&quot;&gt;&lt;/a&gt;在线工具站点&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://tooltt.com/yaml2properties/&quot;&gt;yaml转properties&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.box3.cn/tools/lbs.html&quot;&gt;经纬度距离计算&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="技术积累" scheme="https://groupfusion.github.io/tags/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>Host &#39;192.168.＊.＊&#39; is not allowed to connect to this MariaDB server</title>
    <link href="https://groupfusion.github.io/2017/06/23/db/mysql%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/"/>
    <id>https://groupfusion.github.io/2017/06/23/db/mysql%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/</id>
    <published>2017-06-23T01:47:57.000Z</published>
    <updated>2023-12-15T12:50:18.191Z</updated>
    
    <content type="html"><![CDATA[<p>＃报错:”Host ‘192.168.＊.＊’ is not allowed to connect to this MariaDB server”</p><p>两种解决方法：</p><ol><li>改表法。</li></ol><p>可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”, 使得可以在远程访问到mysql。</p><p>mysql -u root -pvmwaremysql&gt;use mysql;</p><p>mysql&gt;update user set host = ‘%’ where user = ‘root’;</p><p>mysql&gt;select host, user from user;</p><p>mysql&gt;FLUSH RIVILEGES</p><span id="more"></span><ol start="2"><li>授权法。</li></ol><p>例如，你想myuser使用mypassword从 <code>任何主机</code> 连接到mysql服务器的话。</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’%’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从ip为<code>192.168.1.3</code>的主机连接到mysql服务器，并使用mypassword作为密码</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’192.168.1.3’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从ip为<code>192.168.1.3</code>的主机连接到mysql服务器的dk数据库，并使用mypassword作为密码</p><p>GRANT ALL PRIVILEGES ON dk.* TO ‘myuser‘@’192.168.1.3’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH   PRIVILEGES;</p><p>如果你想允许用户myuser从<code>局域网中某个ip</code>的主机连接到mysql服务器的数据库，并使用mypassword作为密码；你要使用%通配符比如你有192.168.0.* 和 192.168.1.* 两个网段,要两个网段都可以访问你要’192.168.%’， 只要一个可以访问可以向下面例子这样。</p><p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘myuser‘@’192.168.1.%’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;<br>FLUSH   PRIVILEGES;</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;＃报错:”Host ‘192.168.＊.＊’ is not allowed to connect to this MariaDB server”&lt;/p&gt;
&lt;p&gt;两种解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;改表法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”, 使得可以在远程访问到mysql。&lt;/p&gt;
&lt;p&gt;mysql -u root -pvmwaremysql&amp;gt;use mysql;&lt;/p&gt;
&lt;p&gt;mysql&amp;gt;update user set host = ‘%’ where user = ‘root’;&lt;/p&gt;
&lt;p&gt;mysql&amp;gt;select host, user from user;&lt;/p&gt;
&lt;p&gt;mysql&amp;gt;FLUSH RIVILEGES&lt;/p&gt;</summary>
    
    
    
    
    <category term="数据库" scheme="https://groupfusion.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mysql" scheme="https://groupfusion.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>sublime text3 快捷键</title>
    <link href="https://groupfusion.github.io/2017/06/23/tools/sublime_text3_%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://groupfusion.github.io/2017/06/23/tools/sublime_text3_%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2017-06-23T01:47:57.000Z</published>
    <updated>2023-12-15T12:46:22.921Z</updated>
    
    <content type="html"><![CDATA[<p>#sublime text3 快捷键</p><p>Sublime Text 是一款流行的文本编辑器软件，有点类似于TextMate，跨平台，可运行在Linux，Windows和Mac OS X。也是许多程序员喜欢使用的一款文本编辑器软件。本文将简单介绍 Sublime Text 3 的快捷键操作。</p><span id="more"></span><table><thead><tr><th align="center">快捷键分类</th><th align="left">功能说明</th><th align="left">mac</th><th align="left">win</th><th align="left">Linux</th></tr></thead><tbody><tr><td align="center">界面控制</td><td align="left">标签控制,前后标签切换</td><td align="left">cmd+alt+左右箭头</td><td align="left">NA</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">在打开的文件中搜索关键字</td><td align="left">cmd+p</td><td align="left">ctrl+p</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">一行接一行选择光标处相同的词，后续可以统一修改</td><td align="left">cmd+d</td><td align="left">ctrl+d</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">一次性选中与光标处相同的全部词，统一修改</td><td align="left">cmd+ctrl+g</td><td align="left">alt+F3</td><td align="left"></td></tr><tr><td align="center">搜索类</td><td align="left">跳转到对应括号</td><td align="left">Ctrl+M</td><td align="left">Ctrl+M</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">按行选择</td><td align="left">cmd+l</td><td align="left">ctrl+l</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">选择光标出的词，或空格，同时标记上下文相同内容</td><td align="left">cmd+l</td><td align="left">ctrl+l</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">删除(剪切)当前行</td><td align="left">cmd+x</td><td align="left">Ctrl+X</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">删除当前行光标之后的字符</td><td align="left">cmd+K+K</td><td align="left">Ctrl+K+K</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">在当前行之前插入新行</td><td align="left">cmd+Shift+Enter</td><td align="left">Ctrl+Shift+Enter</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">在当前行之后插入新行</td><td align="left">cmd+Enter</td><td align="left">Ctrl+Enter</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">复制当前行并在插入</td><td align="left">cmd+shift+D</td><td align="left">ctrl+shift+D</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">上下移动行光标所在行</td><td align="left">cmd+ctrl+上下</td><td align="left">ctrl+shift+上下</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">* 多个光标（选择）</td><td align="left">cmd+alt+鼠标左键（拖动）</td><td align="left">NA</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">* 多个光标</td><td align="left">cmd + 需要放光标的位置鼠标左键</td><td align="left">ctrl+ 需要放光标的位置鼠标左键</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">光标定位：</td><td align="left">cmd+方向键 可定位光标到页面开始、结束，行开始、结束</td><td align="left"></td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">快速跳转到某一行</td><td align="left">ctrl＋G</td><td align="left"></td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">多行缩紧</td><td align="left">cmd＋] &amp; cmd+[</td><td align="left">ctrl＋] &amp; ctrl+[</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">转换为大写</td><td align="left">Cmd + K + U</td><td align="left">ctrl＋K + U</td><td align="left"></td></tr><tr><td align="center">编辑</td><td align="left">转换为小写</td><td align="left">Cmd + K + L</td><td align="left">ctrl＋K + L</td><td align="left"></td></tr></tbody></table><p>注：标＊的非常常用，尤其是在批量编辑和插入时。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;#sublime text3 快捷键&lt;/p&gt;
&lt;p&gt;Sublime Text 是一款流行的文本编辑器软件，有点类似于TextMate，跨平台，可运行在Linux，Windows和Mac OS X。也是许多程序员喜欢使用的一款文本编辑器软件。本文将简单介绍 Sublime Text 3 的快捷键操作。&lt;/p&gt;</summary>
    
    
    
    
    <category term="工具" scheme="https://groupfusion.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关于hibernate could not resolve property_ provinceId of 错误</title>
    <link href="https://groupfusion.github.io/2017/05/27/devlang/%E5%85%B3%E4%BA%8Ehibernate_could_not_resolve_property_provinceid_of_%E9%94%99%E8%AF%AF/"/>
    <id>https://groupfusion.github.io/2017/05/27/devlang/%E5%85%B3%E4%BA%8Ehibernate_could_not_resolve_property_provinceid_of_%E9%94%99%E8%AF%AF/</id>
    <published>2017-05-27T02:47:57.000Z</published>
    <updated>2023-12-15T12:42:47.680Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于hibernate-could-not-resolve-property-：-provinceId-of-错误"><a href="#关于hibernate-could-not-resolve-property-：-provinceId-of-错误" class="headerlink" title="关于hibernate could not resolve property ： provinceId of 错误"></a>关于hibernate could not resolve property ： provinceId of 错误</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.hibernate.QueryException: could not resolve property: provinceId of: com.petewell.assess.hb.model.HBExameResult</span><br></pre></td></tr></table></figure><p>这个错误是说，在ExameResult 中没有找到proviceId属性，通常情况下我们在ExameResult中添加相应的属性就可以了。<br>但此次报的错误没有你想象的那么简单，首先我的provinceId属性已经在BaseExameResult中定义。定义的关系如下：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//////////////////////</span><br><span class="line">//  BaseExameResult //     -----&gt; BaseExameResult.hbm.xml</span><br><span class="line">//////////////////////</span><br><span class="line">∆</span><br><span class="line">|</span><br><span class="line">//////////////////////</span><br><span class="line">//    HBExameResult   //     -----&gt; ExameResult.hbm.xml</span><br><span class="line">//////////////////////</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在上面的这种情况下，hibernate查找映射关系时，会直接查找子类而不会找父类。那么我们这样实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">////////////////////////////</span><br><span class="line">//  BaseExameResult       //     -----&gt; BaseExameResult.hbm.xml</span><br><span class="line">////////////////////////////</span><br><span class="line">∆                   ∆               </span><br><span class="line">|                  |</span><br><span class="line">///////////////////     ///////////////////////</span><br><span class="line">HBExameResult.hbm.xml&lt;-// HBExameResult //     ///  CMExameResult   //--&gt; CMExameResult.hbm.xml</span><br><span class="line">///////////////////     //////////////////////</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;关于hibernate-could-not-resolve-property-：-provinceId-of-错误&quot;&gt;&lt;a href=&quot;#关于hibernate-could-not-resolve-property-：-provinceId-of-错误&quot; class=&quot;headerlink&quot; title=&quot;关于hibernate could not resolve property ： provinceId of 错误&quot;&gt;&lt;/a&gt;关于hibernate could not resolve property ： provinceId of 错误&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;org.hibernate.QueryException: could not resolve property: provinceId of: com.petewell.assess.hb.model.HBExameResult&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个错误是说，在ExameResult 中没有找到proviceId属性，通常情况下我们在ExameResult中添加相应的属性就可以了。&lt;br&gt;但此次报的错误没有你想象的那么简单，首先我的provinceId属性已经在BaseExameResult中定义。定义的关系如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="hibernate ORM" scheme="https://groupfusion.github.io/tags/hibernate-ORM/"/>
    
  </entry>
  
  <entry>
    <title>quartz CronExpression表达式</title>
    <link href="https://groupfusion.github.io/2017/05/17/devlang/quartz_cronexpression%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://groupfusion.github.io/2017/05/17/devlang/quartz_cronexpression%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2017-05-17T01:47:57.000Z</published>
    <updated>2023-12-15T12:44:06.535Z</updated>
    
    <content type="html"><![CDATA[<p>##quartz CronExpression表达式</p><p>一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。按顺序依次为1.秒（0<del>59）2.分钟（0</del>59）3.小时（0<del>23）4.天（月）（0</del>31，但是你需要考虑你月的天数）5.月（0<del>11）6.天（星期）（1</del>7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）7.年份（1970－2099）</p><p>其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于”月份中的日期”和”星期中的日期”这两个元素互斥的,必须要对其中一个设置?.</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 10,14,16 * * ? 每天上午10点，下午2点，4点</span><br><span class="line">0 0/30 9-17 * * ??? 朝九晚五工作时间内每半小时</span><br><span class="line">0 0 12 ? * WED 表示每个星期三中午12点</span><br></pre></td></tr></table></figure><ul><li><p>有些子表达式能包含一些范围或列表例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”</p></li><li><p>“<em>”字符代表所有可能的值因此，“</em>”在子表达式（月）里表示每个月的含义，“*”在子表达式（天（星期））表示星期的每一天</p></li><li><p>“/”字符用来指定数值的增量例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟 ;在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”</p></li><li><p>“L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写。但是它在两个子表达式里的含义是不同的。<br>在天（月）子表达式中，“L”表示一个月的最后一天 ,在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT. 如果在“L”前有具体的内容，它就具有其他的含义了</p><p>  例如：“6L”表示这个月的倒数第６天，“ＦＲＩＬ”表示这个月的最后一个星期五</p></li></ul><p>注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题</p><p>============================================</p><p>CronTrigger配置完整格式为： [秒] [分] [小时] [日] [月] [周] [年]</p><table><thead><tr><th>序号</th><th align="center">说明</th><th>是否必填</th><th>允许填写的值</th><th>允许的通配符</th></tr></thead><tbody><tr><td>1</td><td align="center">秒</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>2</td><td align="center">分</td><td>是</td><td>0-59</td><td>, - * /</td></tr><tr><td>3</td><td align="center">小时</td><td>是</td><td>0-23</td><td>, - * /</td></tr><tr><td>4</td><td align="center">日</td><td>是</td><td>1-31</td><td>, - * ? / L W</td></tr><tr><td>5</td><td align="center">月</td><td>是</td><td>1-12 or JAN-DEC</td><td>, - * /</td></tr><tr><td>6</td><td align="center">周</td><td>是</td><td>1-7 or SUN-SAT</td><td>, - * ? / L #</td></tr><tr><td>7</td><td align="center">年</td><td>否</td><td>empty 或 1970-2099</td><td>, - * /</td></tr></tbody></table><h4 id="通配符说明"><a href="#通配符说明" class="headerlink" title="通配符说明:"></a>通配符说明:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*表示所有值. 例如:在分的字段上设置 &quot;*&quot;,表示每一分钟都会触发。</span><br><span class="line">? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为&quot;?&quot; 具体设置为 0 0 0 10 * ?</span><br><span class="line">- 表示区间。例如 在小时上设置 &quot;10-12&quot;,表示 10,11,12点都会触发。</span><br><span class="line">, 表示指定多个值，例如在周字段上设置 &quot;MON,WED,FRI&quot; 表示周一，周三和周五触发</span><br><span class="line">/ 用于递增触发。如在秒上面设置&quot;5/15&quot; 表示从5秒开始，每增15秒触发(5,20,35,50)。 在月字段上设置&#x27;1/3&#x27;所示每月1号开始，每隔三天触发一次。</span><br><span class="line">L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于&quot;7&quot;或&quot;SAT&quot;。如果在&quot;L&quot;前加上数字，则表示该数据的最后一个。例如在周字段上设置&quot;6L&quot;这样的格式,则表示“本月最后一个星期五&quot; </span><br><span class="line">W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置&quot;15W&quot;，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 &quot;1W&quot;,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，&quot;W&quot;前只能设置具体的数字,不允许区间&quot;-&quot;).</span><br><span class="line"># 序号(表示每月的第几个周几)，例如在周字段上设置&quot;6#3&quot;表示在每月的第三个周六.注意如果指定&quot;#5&quot;,正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了) ；小提示：&#x27;L&#x27;和 &#x27;W&#x27;可以一组合使用。如果在日字段上设置&quot;LW&quot;,则表示在本月的最后一个工作日触发；周字段的设置，若使用英文字母是不区分大小写的，即MON与mon相同；</span><br></pre></td></tr></table></figure><h4 id="常用示例"><a href="#常用示例" class="headerlink" title="常用示例:"></a>常用示例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">0 12 * * ?    每天12点触发    </span><br><span class="line">15 10 ? * *    每天10点15分触发    </span><br><span class="line">15 10 * * ?    每天10点15分触发    </span><br><span class="line">15 10 * * ? *    每天10点15分触发    </span><br><span class="line">15 10 * * ? 2005    2005年每天10点15分触发    </span><br><span class="line">* 14 * * ?    每天下午的 2点到2点59分每分触发    </span><br><span class="line">0/5 14 * * ?    每天下午的 2点到2点59分(整点开始，每隔5分触发)    </span><br><span class="line">0/5 14,18 * * ?    每天下午的 2点到2点59分、18点到18点59分(整点开始，每隔5分触发)    </span><br><span class="line">0-5 14 * * ?    每天下午的 2点到2点05分每分触发    </span><br><span class="line">10,44 14 ? 3 WED    3月分每周三下午的 2点10分和2点44分触发    </span><br><span class="line">15 10 ? * MON-FRI    从周一到周五每天上午的10点15分触发    </span><br><span class="line">15 10 15 * ?    每月15号上午10点15分触发    </span><br><span class="line">15 10 L * ?    每月最后一天的10点15分触发    </span><br><span class="line">15 10 ? * 6L    每月最后一周的星期五的10点15分触发    </span><br><span class="line">15 10 ? * 6L 2002-2005    从2002年到2005年每月最后一周的星期五的10点15分触发    </span><br><span class="line">15 10 ? * 6#3    每月的第三周的星期五开始触发    </span><br><span class="line">0 12 1/5 * ?    每月的第一个中午开始每隔5天触发一次    </span><br><span class="line">11 11 11 11 ?    每年的11月11号 11点11分触发(光棍节)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;##quartz CronExpression表达式&lt;/p&gt;
&lt;p&gt;一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。按顺序依次为1.秒（0&lt;del&gt;59）2.分钟（0&lt;/del&gt;59）3.小时（0&lt;del&gt;23）4.天（月）（0&lt;/del&gt;31，但是你需要考虑你月的天数）5.月（0&lt;del&gt;11）6.天（星期）（1&lt;/del&gt;7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）7.年份（1970－2099）&lt;/p&gt;
&lt;p&gt;其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于”月份中的日期”和”星期中的日期”这两个元素互斥的,必须要对其中一个设置?.&lt;/p&gt;</summary>
    
    
    
    
    <category term="quartz" scheme="https://groupfusion.github.io/tags/quartz/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper 安装和配置</title>
    <link href="https://groupfusion.github.io/2017/05/12/devlang/zookeeper%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>https://groupfusion.github.io/2017/05/12/devlang/zookeeper%20%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2017-05-12T01:47:57.000Z</published>
    <updated>2023-12-15T12:44:42.639Z</updated>
    
    <content type="html"><![CDATA[<p>zookeeper 安装和配置</p><p>1.什么是zookeeper<br>　　引用官方的说法：“Zookeeper是一个高性能，分布式的，开源分布式应用协调服务。它提供了简单原始的功能，分布式应用可以基于它实现更高级的服务，比如同步，配置管理，集群管理，名空间。它被设计为易于编程，使用文件系统目录树作为数据模型。服务端跑在java上，提供java和C的客户端API”。</p><p>2.设计目标<br>Zookeeper服务自身组成一个集群(2n+1个服务允许n个失效)。Zookeeper服务有两个角色，一个是leader，负责写服务和数据同步，剩下的是follower，提供读服务，leader失效后会在follower中重新选举新的leader<br>Zookeeper逻辑图如下，<br><img src="/images/zookeeper/zkservice.jpg" alt="zookeeper service"></p><span id="more"></span><p>客户端可以连接到每个server，每个server的数据完全相同。<br>每个follower都和leader有连接，接受leader的数据更新操作。<br>Server记录事务日志和快照到持久存储。<br>大多数server可用，整体服务就可用</p><p>3.zookeeper能做什么<br>Zookeeper的主流应用场景实现思路（除去官方示例）<br>(1)配置管理<br>集中式的配置管理在应用集群中是非常常见的，一般商业公司内部都会实现一套集中的配置管理中心，应对不同的应用集群对于共享各自配置的需求，并且在配置变更时能够通知到集群中的每一个机器。</p><p>(2)集群管理<br>应用集群中，我们常常需要让每一个机器知道集群中（或依赖的其他某一个集群）哪些机器是活着的，并且在集群机器因为宕机，网络断链等原因能够不在人工介入的情况下迅速通知到每一个机器。</p><p>(3)数据发布与订阅 （我的业务用到这个特性，后面会有详细介绍）<br>应用配置集中到节点上，应用启动时主动获取，并在节点上注册一个watcher，每次配置更新都会通知到应用。</p><p>(4)名空间服务<br>分布式命名服务，创建一个节点后，节点的路径就是全局唯一的，可以作为全局名称使用。</p><p>(5)分布式通知/协调<br>不同的系统都监听同一个节点，一旦有了更新，另一个系统能够收到通知。</p><p>(6)分布式锁<br>Zookeeper能保证数据的强一致性，用户任何时候都可以相信集群中每个节点的数据都是相同的。一个用户创建一个节点作为锁，另一个用户检测该节点，如果存在，代表别的用户已经锁住，如果不存在，则可以创建一个节点，代表拥有一个锁。</p><p>zookeeper 安装<br>1、首选安装java运行环境。如果不知如何按照可以参加我的JAVA环境配置这篇文章，也可百度搜索。<br>2、下载zookeeper，目前最新的稳定版本为3.4.10；<a href="http://zookeeper.apache.org/">zookeeper</a>官网下载<br>linux下可以使用wget命令下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##下载</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/stable/zookeeper-3.4.10.tar.gz</span><br><span class="line"></span><br><span class="line">##然后解压：</span><br><span class="line">tar -xzvf zookeeper-3.4.10.tar.gz</span><br></pre></td></tr></table></figure><p>##运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">### 1启动zookeeper</span><br><span class="line"># bin/zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line"></span><br><span class="line">### 2查看状态</span><br><span class="line"># bin/zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Mode: standalone</span><br><span class="line"></span><br><span class="line">### 3停止zookeeper</span><br><span class="line"># bin/zkServer.sh stop</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br><span class="line"></span><br><span class="line">### 4 重启</span><br><span class="line"># bin/zkServer.sh restart</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /gzdata/zookeeper/zookeeper-3.4.10/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><h3 id="管理zookeeper存储"><a href="#管理zookeeper存储" class="headerlink" title="管理zookeeper存储"></a>管理zookeeper存储</h3><p>对于长时间运行的生产系统，必须从外部(dataDir和日志)管理ZooKeeper的存储。有关更多细节，请参阅<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#sc_maintenance">维护部分</a>。</p><h4 id="连接Zookeeper"><a href="#连接Zookeeper" class="headerlink" title="连接Zookeeper"></a>连接Zookeeper</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ./zkCli.sh -server 127.0.0.1:2181</span><br></pre></td></tr></table></figure><p>这样可以执行简单的文件操作。<br>连接后，你将看到类似下面的输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Connecting to 127.0.0.1:2181</span><br><span class="line">2017-05-11 20:21:23,599 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT</span><br><span class="line">2017-05-11 20:21:23,605 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=localhost</span><br><span class="line">2017-05-11 20:21:23,605 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.8.0_91</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.home=/usr/local/jdk/jdk1.8.0_91/jre</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.class.path=/gzdata/zookeeper/zookeeper-3.4.10/bin/../build/classes:/gzdata/zookeeper/zookeeper-3.4.10/bin/../build/lib/*.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/slf4j-log4j12-1.6.1.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/slf4j-api-1.6.1.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/netty-3.10.5.Final.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/log4j-1.2.16.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../lib/jline-0.9.94.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../zookeeper-3.4.10.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../src/java/lib/*.jar:/gzdata/zookeeper/zookeeper-3.4.10/bin/../conf:.:/usr/local/jdk/jdk1.8.0_91/lib/dt.jar:/usr/local/jdk/jdk1.8.0_91/lib/tools.jar</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=&lt;NA&gt;</span><br><span class="line">2017-05-11 20:21:23,608 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=amd64</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=3.10.0-514.2.2.el7.x86_64</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=root</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/root</span><br><span class="line">2017-05-11 20:21:23,609 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/gzdata/zookeeper/zookeeper-3.4.10/bin</span><br><span class="line">2017-05-11 20:21:23,610 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@42110406</span><br><span class="line">2017-05-11 20:21:23,641 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@1032] - Opening socket connection to server 127.0.0.1/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">JLine support is enabled</span><br><span class="line">2017-05-11 20:21:23,809 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@876] - Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTING) 0] 2017-05-11 20:21:23,998 [myid:] - INFO  [main-SendThread(127.0.0.1:2181):ClientCnxn$SendThread@1299] - Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x15bf77496660000, negotiated timeout = 30000</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br></pre></td></tr></table></figure><p>shell中输入help命令，可以获取一个命令列表，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">help</span><br><span class="line">ZooKeeper -server host:port cmd args</span><br><span class="line">        stat path [watch]</span><br><span class="line">        set path data [version]</span><br><span class="line">        ls path [watch]</span><br><span class="line">        delquota [-n|-b] path</span><br><span class="line">        ls2 path [watch]</span><br><span class="line">        setAcl path acl</span><br><span class="line">        setquota -n|-b val path</span><br><span class="line">        history</span><br><span class="line">        redo cmdno</span><br><span class="line">        printwatches on|off</span><br><span class="line">        delete path [version]</span><br><span class="line">        sync path</span><br><span class="line">        listquota path</span><br><span class="line">        rmr path</span><br><span class="line">        get path [watch]</span><br><span class="line">        create [-s] [-e] path data acl</span><br><span class="line">        addauth scheme auth</span><br><span class="line">        quit</span><br><span class="line">        getAcl path</span><br><span class="line">        close</span><br><span class="line">        connect host:port</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 1]</span><br></pre></td></tr></table></figure><p>在这，你可以尝试着输入一些简单的命令来体验下。首先，我们输入ls 命令，来看下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 3] ls /</span><br><span class="line">[zookeeper]</span><br></pre></td></tr></table></figure><p>接下来，我们通过 create /zk_test mydata 命令创建一个新的znode。新创建的znode将于字符串“mydata”关联起来，你应看到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 4] create /zk_test mydata</span><br><span class="line">Created /zk_test</span><br></pre></td></tr></table></figure><p>我们用ls /命令来查看刚创建好的znode。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 5] ls /</span><br><span class="line">[zookeeper, zk_test]</span><br></pre></td></tr></table></figure><p>注意：上面的zk_test目录是我们刚刚创建的。</p><p>接下来，我们通过get命令验证数据是否与znode关联，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 6] get /zk_test</span><br><span class="line">mydata</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x2</span><br><span class="line">mtime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 7</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>我们通过set命令改变zk_test节点上关联的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 8] set /zk_test hello,world</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x3</span><br><span class="line">mtime = Thu May 11 20:55:08 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 11</span><br><span class="line">numChildren = 0</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 9] get /zk_test</span><br><span class="line">hello,world</span><br><span class="line">cZxid = 0x2</span><br><span class="line">ctime = Thu May 11 20:23:24 CST 2017</span><br><span class="line">mZxid = 0x3</span><br><span class="line">mtime = Thu May 11 20:55:08 CST 2017</span><br><span class="line">pZxid = 0x2</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 11</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>注意：修改时一定要指明相应路径 ，如： /zk_test .我们通过get命令查看到数据确实发生了变化。</p><p>最后，我们来用delete删除节点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 10] delete /zk_test</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 11] ls /</span><br><span class="line">[zookeeper]</span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 12]</span><br></pre></td></tr></table></figure><p>###<a href="http://zookeeper.apache.org/doc/r3.4.10/zookeeperStarted.html">复制模式</a>：</p><p>在zookeeper默认是运行在单机模式下以满足评估、开发、测试的需要。但生产环境中，你必须运行在复制模式下，在同一应用内的一个复制组成为quorum，在复制模式中，quorum中的所有服务器都有相同配置文件的副本。</p><p>注意：<br>For replicated mode, a minimum of three servers are required, and it is strongly recommended that you have an odd number of servers. If you only have two servers, then you are in a situation where if one of them fails, there are not enough machines to form a majority quorum. Two servers is inherently less stable than a single server, because there are two single points of failure.</p><p>The required conf/zoo.cfg file for replicated mode is similar to the one used in standalone mode, but with a few differences. Here is an example:</p><p>tickTime=2000<br>dataDir=/var/lib/zookeeper<br>clientPort=2181<br>initLimit=5<br>syncLimit=2<br>server.1=zoo1:2888:3888<br>server.2=zoo2:2888:3888<br>server.3=zoo3:2888:3888</p><p>The new entry, initLimit is timeouts ZooKeeper uses to limit the length of time the ZooKeeper servers in quorum have to connect to a leader. The entry syncLimit limits how far out of date a server can be from a leader.</p><p>With both of these timeouts, you specify the unit of time using tickTime. In this example, the timeout for initLimit is 5 ticks at 2000 milleseconds a tick, or 10 seconds.</p><p>The entries of the form server.X list the servers that make up the ZooKeeper service. When the server starts up, it knows which server it is by looking for the file myid in the data directory. That file has the contains the server number, in ASCII.</p><p>Finally, note the two port numbers after each server name: “ 2888” and “3888”. Peers use the former port to connect to other peers. Such a connection is necessary so that peers can communicate, for example, to agree upon the order of updates. More specifically, a ZooKeeper server uses this port to connect followers to the leader. When a new leader arises, a follower opens a TCP connection to the leader using this port. Because the default leader election also uses TCP, we currently require another port for leader election. This is the second port in the server entry.</p><p>Note<br>If you want to test multiple servers on a single machine, specify the servername as localhost with unique quorum &amp; leader election ports (i.e. 2888:3888, 2889:3889, 2890:3890 in the example above) for each server.X in that server’s config file. Of course separate dataDirs and distinct clientPorts are also necessary (in the above replicated example, running on a single localhost, you would still have three config files).</p><p>Please be aware that setting up multiple servers on a single machine will not create any redundancy. If something were to happen which caused the machine to die, all of the zookeeper servers would be offline. Full redundancy requires that each server have its own machine. It must be a completely separate physical server. Multiple virtual machines on the same physical host are still vulnerable to the complete failure of that host.</p><p>参考：<br><a href="http://coolxing.iteye.com/blog/1871009">http://coolxing.iteye.com/blog/1871009</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;zookeeper 安装和配置&lt;/p&gt;
&lt;p&gt;1.什么是zookeeper&lt;br&gt;　　引用官方的说法：“Zookeeper是一个高性能，分布式的，开源分布式应用协调服务。它提供了简单原始的功能，分布式应用可以基于它实现更高级的服务，比如同步，配置管理，集群管理，名空间。它被设计为易于编程，使用文件系统目录树作为数据模型。服务端跑在java上，提供java和C的客户端API”。&lt;/p&gt;
&lt;p&gt;2.设计目标&lt;br&gt;Zookeeper服务自身组成一个集群(2n+1个服务允许n个失效)。Zookeeper服务有两个角色，一个是leader，负责写服务和数据同步，剩下的是follower，提供读服务，leader失效后会在follower中重新选举新的leader&lt;br&gt;Zookeeper逻辑图如下，&lt;br&gt;&lt;img src=&quot;/images/zookeeper/zkservice.jpg&quot; alt=&quot;zookeeper service&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://groupfusion.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="zookeeper" scheme="https://groupfusion.github.io/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>java环境配置</title>
    <link href="https://groupfusion.github.io/2017/05/12/tools/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://groupfusion.github.io/2017/05/12/tools/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2017-05-12T01:47:57.000Z</published>
    <updated>2023-12-15T12:46:03.688Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.linuxidc.com/Linux/2016-06/132678.htm">http://www.linuxidc.com/Linux/2016-06/132678.htm</a><br>下载：<br>下载 jdk-8u91-linux-x64.tar.gz：<br> wget –no-check-certificate –no-cookies –header “Cookie: Oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm">http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm</a><br> wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz">http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz</a><br> wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm">http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm</a><br> wget –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie;” <a href="http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar">http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar</a></p><span id="more"></span><h3 id="mac-os"><a href="#mac-os" class="headerlink" title="mac os"></a>mac os</h3><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>JAVA_HOME=/usr/local/jdk/jdk1.8.0_91<br> JRE_HOME=$JAVA_HOME/jre<br> PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin<br> CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar<br> export JAVA_HOME JRE_HOME PATH CLASSPATH</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#vi /etc/profile</span><br><span class="line">#source /etc/profile</span><br><span class="line">#java -version</span><br><span class="line">java version &quot;1.8.0_91&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_91-b14)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://www.linuxidc.com/Linux/2016-06/132678.htm&quot;&gt;http://www.linuxidc.com/Linux/2016-06/132678.htm&lt;/a&gt;&lt;br&gt;下载：&lt;br&gt;下载 jdk-8u91-linux-x64.tar.gz：&lt;br&gt; wget –no-check-certificate –no-cookies –header “Cookie: Oraclelicense=accept-securebackup-cookie” &lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm&quot;&gt;http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-linux-x64.rpm&lt;/a&gt;&lt;br&gt; wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” &lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz&quot;&gt;http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz&lt;/a&gt;&lt;br&gt; wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” &lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm&quot;&gt;http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.rpm&lt;/a&gt;&lt;br&gt; wget –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie;” &lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar&quot;&gt;http://download.oracle.com/otn-pub/java/jdk/7u65-b17/jdk-7u65-linux-x64.tar&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="工具" scheme="https://groupfusion.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="java安装" scheme="https://groupfusion.github.io/tags/java%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>ORA-12518, TNS:listener could not hand off client connection 解决方案</title>
    <link href="https://groupfusion.github.io/2017/05/06/db/ORA-12518-%20TNS-listener%20could%20not%20hand%20off%20client%20connection/"/>
    <id>https://groupfusion.github.io/2017/05/06/db/ORA-12518-%20TNS-listener%20could%20not%20hand%20off%20client%20connection/</id>
    <published>2017-05-06T01:47:57.000Z</published>
    <updated>2023-12-15T12:50:25.635Z</updated>
    
    <content type="html"><![CDATA[<p>##ORA-12518, TNS:listener could not hand off client connection 解决方案：</p><p>问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">org.apache.cxf.interceptor.Fault: Hibernate operation: Cannot open connection; uncategorized SQLException for SQL [???]; SQL state [66000]; error code [12518]; Listener refused the connection with the following error:</span><br><span class="line">ORA-12518, TNS:listener could not hand off client connection</span><br><span class="line"> ; nested exception is java.sql.SQLException: Listener refused the connection with the following error:</span><br><span class="line">ORA-12518, TNS:listener could not hand off client connection</span><br><span class="line"> </span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)</span><br><span class="line">        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:213)</span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)</span><br><span class="line">        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.invoke(AbstractJAXWSMethodInvoker.java:178)</span><br><span class="line">        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:64)</span><br><span class="line">        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)</span><br><span class="line">        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)</span><br><span class="line">        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)</span><br><span class="line">        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</span><br><span class="line">        at java.util.concurrent.FutureTask.run(FutureTask.java:138)</span><br><span class="line">        ......</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>数据库系统环境说明：<br>IBM 3850 M2 ／ x3950 M2<br>cpu 8<br>内存 16G<br>win2003 enterprise Edition （5.2.3790 sp2）<br>oracle 11g （11.1.0.6.0）版本</p><p>分析问题：<br>遇到问题可以百度搜索，根据你的实际情况分析具体原因，并以最小的代价解决问题。<br>网上提到导致 ORA－12518错误的可能原因为：</p><p>一是session值过小，或用尽。</p><p>二是processes值设的过小，</p><p>三是需要增加参数DISPATCHERS。</p><p>首先获取上述中提及的参数值。</p><p>1）、查看session会话数：</p><p>select count(*) from v$session; –取得数据库目前的会话数。<br>select value from v$parameter where name = ‘sessions’; –取得会话数的上限。<br>select ＊ from v$session; –查看会话连接情况<br>查看当前process和sessions是否接近上限值。若接近，可以将其增大。</p><p>当前session数   140<br>会话数的上限     170</p><p>确认当前session数的连接情况，都有哪些连接。<br>其中101条为JDBC Thin Client   46条为plsqldev.exe连接。</p><p>2）、使用plsql连接到oracle，查看process进程数：</p><p>select count(*) from v$process; –取得数据库目前的进程数。<br>select value from v$parameter where name = ‘processes’;     –取得进程数的上限。 </p><p>目前的进程数：147<br>进程数的上限 :150</p><p>3）、采用专有连接方式<br>DISPATCHERS涉及到连接方式问题，这里默认采用专有连接方式。 关于连接方式参见 资料2</p><p>第二，存在问题：<br>1、session 与process 配置不合理。<br>2、非生产应用程序占用session。<br>注：在访问量不大时，150左右是问题不大的。访问量大时需要增加。</p><p>第三，处理方案：</p><p>1、关闭非生产应用占用的连接，如：plsqldev。 关闭后，测试验证问题消失。</p><p>2、调整process和session数。</p><p>  1).调整这两个参数值大小。<br>   系统进程数process和系统会话数session之间存在一个关系：<br>   process数=session数*1.1+5<br>   我们在配置时参考该规律进行设定。</p><p> a)  修改process值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter system set processes=1000 scope=spfile;   --将process值改为1000</span><br></pre></td></tr></table></figure><p> b)  修改session值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter system set sessions=1105 scope=spfile;    --将sessions值改为1105</span><br></pre></td></tr></table></figure><p>2). 备份pfile，重启oracle</p><p>  a) 修改完成后，备份pfile</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create pfile from spfile;   --从spfile（运行时配置）创建pfile（系统配置）</span><br></pre></td></tr></table></figure><p>c)  重启oracle</p><p>重启的方法有很多种，可以重启oracle服务，或者重启数据库。Windows下可以直接重启服务。</p><p>在修改process遇到问题 “ORA-32001: 已请求写入 SPFILE, 但是在启动时未指定 SPFILE” 参考资料3</p><p>参考资料：</p><p>1、问题处理方案<br>    <a href="http://blog.csdn.net/estelle_belle/article/details/40621245">http://blog.csdn.net/estelle_belle/article/details/40621245</a><br>    <a href="http://www.cnblogs.com/chinhr/archive/2011/10/11/2207528.html">http://www.cnblogs.com/chinhr/archive/2011/10/11/2207528.html</a><br>    <a href="http://blog.csdn.net/yanyaocrystal/article/details/52105846">http://blog.csdn.net/yanyaocrystal/article/details/52105846</a></p><p>2、关于连接方式<br>     <a href="http://www.2cto.com/database/201504/391158.html">http://www.2cto.com/database/201504/391158.html</a><br>     <a href="http://blog.sina.com.cn/s/blog_6d6e54f70100z12o.html">http://blog.sina.com.cn/s/blog_6d6e54f70100z12o.html</a><br>3、ORA-32001: 已请求写入 SPFILE, 但是在启动时未指定 SPFILE<br>    <a href="http://blog.csdn.net/haiross/article/details/41696035">http://blog.csdn.net/haiross/article/details/41696035</a></p><p>4、关于spfile 与pfile<br>    <a href="http://www.cnblogs.com/kerrycode/p/3254154.html">http://www.cnblogs.com/kerrycode/p/3254154.html</a><br>    <a href="http://blog.csdn.net/test_me/article/details/5678316">http://blog.csdn.net/test_me/article/details/5678316</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;##ORA-12518, TNS:listener could not hand off client connection 解决方案：&lt;/p&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;org.apache.cxf.interceptor.Fault: Hibernate operation: Cannot open connection; uncategorized SQLException for SQL [???]; SQL state [66000]; error code [12518]; Listener refused the connection with the following error:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ORA-12518, TNS:listener could not hand off client connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ; nested exception is java.sql.SQLException: Listener refused the connection with the following error:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ORA-12518, TNS:listener could not hand off client connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:213)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.invoke(AbstractJAXWSMethodInvoker.java:178)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:64)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at java.util.concurrent.FutureTask.run(FutureTask.java:138)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="oracle" scheme="https://groupfusion.github.io/tags/oracle/"/>
    
    <category term="数据库" scheme="https://groupfusion.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Redis: Can’t save in background: fork: Cannot allocate memory</title>
    <link href="https://groupfusion.github.io/2017/04/28/devlang/Redis-Can%E2%80%99t-save-in-background-fork-Cannot-allocate-memory/"/>
    <id>https://groupfusion.github.io/2017/04/28/devlang/Redis-Can%E2%80%99t-save-in-background-fork-Cannot-allocate-memory/</id>
    <published>2017-04-28T04:30:40.000Z</published>
    <updated>2023-12-15T12:44:17.944Z</updated>
    
    <content type="html"><![CDATA[<p>Redis: “Can’t save in background: fork: Cannot allocate memory”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis.clients.jedis.exceptions.JedisDataException: MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. </span><br><span class="line">for details about the error.</span><br><span class="line">redis.clients.jedis.Protocol.processError(Protocol.java:127)</span><br><span class="line">redis.clients.jedis.Protocol.process(Protocol.java:161)</span><br><span class="line">redis.clients.jedis.Protocol.read(Protocol.java:215)</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><span id="more"></span><p>今天项目现场反馈说工单提交不了了，查看日志发现时 “Redis “MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk”的问题。这个错误信息是Redis客户端工具在保存数据时候抛出的异常信息。</p><p>网上查了一下，很多人都是建议“config set stop-writes-on-bgsave-error no”。这样做其实是不好的，这仅仅是让程序忽略了这个异常，使得程序能够继续往下运行，但实际上数据还是会存储到硬盘失败！：</p><p>百度了下 查到了<a href="http://blog.csdn.net/whycold/article/details/21388455">有关linux下redis overcommit_memory的问题</a> ,提供了三种修改方案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">有三种方式修改内核参数方式，但要有root权限：</span><br><span class="line"></span><br><span class="line">  （1）编辑/etc/sysctl.conf ，改vm.overcommit_memory=1，然后sysctl -p 使配置文件生效</span><br><span class="line"></span><br><span class="line">  （2）sysctl vm.overcommit_memory=1</span><br><span class="line"></span><br><span class="line">  （3）echo 1 &gt; /proc/sys/vm/overcommit_memory</span><br></pre></td></tr></table></figure><p>修改后重启，总是提示 “Fatal error, can’t open config file”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server stop</span><br><span class="line">redis-server restart</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br></pre></td></tr></table></figure><p>上面删除方法都试过了，无法停止。无奈只有重启解决之。</p><p>参考：<a href="https://pydelion.com/2013/05/27/redis-cant-save-in-background-fork-cannot-allocate-memory/">Redis: “Can’t save in background: fork: Cannot allocate memory”</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Redis: “Can’t save in background: fork: Cannot allocate memory”&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;redis.clients.jedis.exceptions.JedisDataException: MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for details about the error.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	redis.clients.jedis.Protocol.processError(Protocol.java:127)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	redis.clients.jedis.Protocol.process(Protocol.java:161)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	redis.clients.jedis.Protocol.read(Protocol.java:215)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="redis" scheme="https://groupfusion.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>爱眼护眼操</title>
    <link href="https://groupfusion.github.io/2017/02/14/life/%E7%94%9F%E6%B4%BB-%E7%9C%BC%E4%BF%9D%E5%81%A5%E6%93%8D/"/>
    <id>https://groupfusion.github.io/2017/02/14/life/%E7%94%9F%E6%B4%BB-%E7%9C%BC%E4%BF%9D%E5%81%A5%E6%93%8D/</id>
    <published>2017-02-14T11:37:57.000Z</published>
    <updated>2023-12-15T12:49:49.499Z</updated>
    
    <content type="html"><![CDATA[<p>爱眼护眼操<br>尽管有好的眼镜可以帮助近视的我们看清物体，不过平时我们还是得多注意休息，做做眼保健操之类的，说不定就有用了呢。今天在网上偶然看到，与我之前练习的完全一样，也能预防近视，缓解眼睛疲劳哦！这个方法还能帮你恢复视力，前提是（500度以下）。天天看手机、电脑，眼睛会很受伤！为了你的眼睛，拒绝近视！赶紧好好的动起来吧！ </p><span id="more"></span><p>转换焦点<br><img src="/images/life/541187689d4cf8fcc3b8e52b5dfb2f28.gif" alt="转换焦点"><br>视线上下左右移动<br><img src="/images/life/497a6d0ad39ea66c4dc30cd3f227cbf0.gif" alt="视线上下左右移动"><br>眯眼睛<br><img src="/images/life/03a5297a204e30e4b6b17f933cb70547.gif" alt="眯眼睛"><br>用目光画正方形<br><img src="/images/life/85a929f8683a66a1746df2696f20a002.gif" alt="用目光画正方形"><br>眨眼睛<br><img src="/images/life/ac5f5bb502e41345534633053395d84f.gif" alt="眨眼睛"><br>用目光画圆形<br><img src="/images/life/787bb5a4f91a5bf3aa85f61101d98c56.jpg" alt="用目光画圆形"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;爱眼护眼操&lt;br&gt;尽管有好的眼镜可以帮助近视的我们看清物体，不过平时我们还是得多注意休息，做做眼保健操之类的，说不定就有用了呢。今天在网上偶然看到，与我之前练习的完全一样，也能预防近视，缓解眼睛疲劳哦！这个方法还能帮你恢复视力，前提是（500度以下）。天天看手机、电脑，眼睛会很受伤！为了你的眼睛，拒绝近视！赶紧好好的动起来吧！ &lt;/p&gt;</summary>
    
    
    
    
    <category term="生活" scheme="https://groupfusion.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>02.nginx+tomcat+redis实现集群环境的session共享。</title>
    <link href="https://groupfusion.github.io/2017/01/17/devlang/02.nginx_tomcat_redis/"/>
    <id>https://groupfusion.github.io/2017/01/17/devlang/02.nginx_tomcat_redis/</id>
    <published>2017-01-17T09:47:57.000Z</published>
    <updated>2023-12-15T12:41:54.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="02-nginx-tomcat-redis实现集群环境的session共享。"><a href="#02-nginx-tomcat-redis实现集群环境的session共享。" class="headerlink" title="02.nginx+tomcat+redis实现集群环境的session共享。"></a>02.nginx+tomcat+redis实现集群环境的session共享。</h2><p>注：tomcat-redis-session-manager 仅对tomcat8.0.39以下版支持。8.5.9这个版本不支持，缺少LifecycleSupport 相关类。</p><span id="more"></span><h3 id="nginx-tomcat-集群配置"><a href="#nginx-tomcat-集群配置" class="headerlink" title="nginx tomcat 集群配置"></a>nginx tomcat 集群配置</h3><p>参考：</p><p><a href="http://blog.csdn.net/zht666/article/details/38515147">Nginx+Tomcat7+Mencached负载均衡集群部署笔记</a></p><p><a href="http://www.cnblogs.com/chihirotan/p/5791401.html">Nginx-tomcat-redis——负载均衡以及session共享</a></p><p>nginx\tomcat 采用集群方式，部署在一台window机器上192.168.0.20。redis 部署在一台centos下，ip为192.168.0.21；</p><p>配置步骤如下：<br>1、安装nginx及单机测试，这里就不多说了，不会的同学可以百度下，很多。<br>2、安装tomcat 从官网下载tomcat7。注：在同一机器上部署需要修改端口，否则可能因端口冲突无法启动；我的端口分别设置为8080，8081，8082<br>3、nginx集群配置<br>修改nginx安装目录下的conf/nginx.conf 文件。修改部分如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">   #设定负载均衡的服务器列表，可以设置多个upstream，但mysvr名字要区分</span><br><span class="line">   upstream myClusterServer1 &#123;</span><br><span class="line">      #weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">      #本机上的Squid开启3128端口</span><br><span class="line">      server 127.0.0.1:8080  weight=5;</span><br><span class="line">      server 127.0.0.1:8081  weight=5;</span><br><span class="line">      server 127.0.0.1:8082  weight=5;</span><br><span class="line">   &#125;</span><br><span class="line">   server &#123;</span><br><span class="line">       ...</span><br><span class="line">       location / &#123;</span><br><span class="line">           root   html;</span><br><span class="line">           index  index.html index.htm index.jsp;</span><br><span class="line">           #请求转向mysvr 定义的服务器列表</span><br><span class="line">           proxy_pass    http://myClusterServer1;</span><br><span class="line">           proxy_redirect default;</span><br><span class="line">           #跟代理服务器连接的超时时间，必须留意这个time out时间不能超过75秒，当一台服务器当掉时，过10秒转发到另外一台服务器。</span><br><span class="line">       proxy_connect_timeout 10;</span><br><span class="line">       &#125;</span><br><span class="line">       ...</span><br><span class="line">   &#125;</span><br><span class="line">   ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、启动3个tomcat和nginx。<br>5、测试，编写一个简单jsp进行测试。放到tomcat下，然后<a href="http://localhost/test.jsp">http://localhost/test.jsp</a>访问,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=iso-8859-1&quot;/&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;/&gt;&lt;!-- HTTP 1.0 --&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;h1&gt;Session&lt;/h1&gt;</span><br><span class="line">   &lt;table style=&quot;text-align: left;&quot; border=&quot;0&quot;&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session Id&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getSession().hashCode()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session IP&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getServerName()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;Session port&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;&lt;%=request.getServerPort()%&gt;&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">       &lt;th&gt;server&lt;/th&gt;</span><br><span class="line">       &lt;td&gt;this is Tomcat Server 8080&lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">   &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="redis实现session共享"><a href="#redis实现session共享" class="headerlink" title="redis实现session共享"></a>redis实现session共享</h3><p>参考：<a href="http://blog.csdn.net/chszs/article/details/42610365">用Redis存储Tomcat集群的Session</a></p><p>redis安装这里就不多说了。参见我的<a href="">redis3.2.6_安装及分布配置</a></p><p>1、准备tomcat-redis-session-manager包</p><p>注：tomcat-redis-session-manager仅支持tomcat8.0.39以下版本，并按网上提供的方法修改时没有问题的。对8.5以上版本依然没用。</p><p>你要到<a href="https://github.com/jcoleman/tomcat-redis-session-manager">tomcat-redis-session-manager</a>下载源码编译。</p><p>在配置gradle时会遇到“No such property: sonatypeUsername错误”</p><p>解决方法：<br>在项目根目录下创建gradle.properties文件，文件中添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sonatypeUsername=</span><br><span class="line">sonatypePassword=</span><br><span class="line">sonatypeRepo=</span><br></pre></td></tr></table></figure><p>编译成功后将commons-pool2-2.4.2.jar、jedis-2.9.0.jar、tomcat-redis-session-manager-2.0.0.jar 放到tomcat的lib目录下。</p><p>2、在tomcat context.xml 文件中增加先内容。</p><p>单机redis缓存（master -slave模式）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--单点配置--&gt;</span><br><span class="line">&lt;Valve className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; /&gt;</span><br><span class="line">&lt;Manager className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot;</span><br><span class="line">         host=&quot;192.168.100.194&quot;</span><br><span class="line">         port=&quot;6379&quot;</span><br><span class="line">         database=&quot;0&quot;</span><br><span class="line">         maxInactiveInterval=&quot;60&quot;</span><br><span class="line">         /&gt;</span><br></pre></td></tr></table></figure><p>Sentinel 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- Sentinel 配置 --&gt;</span><br><span class="line"> &lt;Valve className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; /&gt;</span><br><span class="line"> &lt;Manager className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot;</span><br><span class="line">   maxInactiveInterval=&quot;60&quot;</span><br><span class="line">sentinelMaster=&quot;mymaster&quot;</span><br><span class="line">   sentinels=&quot;192.168.0.194:26379,192.168.0.194:36379,192.168.0.194:46379&quot;/&gt;</span><br></pre></td></tr></table></figure><p>3、编写测试jsp。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%=session.getId()%&gt;&lt;br&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        String msg = (String) session.getAttribute(&quot;msg&quot;);</span><br><span class="line">        if (null == msg) &#123;</span><br><span class="line">            session.setAttribute(&quot;msg&quot;, &quot;Hello!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            session.setAttribute(&quot;msg&quot;, msg + 0);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%=session.getAttribute(&quot;msg&quot;)%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>分别部署到tomcat下</p><p>4、启动nginx和tomcat</p><p>分别启动tomcat和nginx后，然后访问<a href="http://localhost/test.jsp">http://localhost/test.jsp</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B1ACBA61EEB15371A3896FCEA5FAF69D</span><br><span class="line">Hello!0000</span><br></pre></td></tr></table></figure><p>若出现DENIED Redis is running in protected mode because protected mode is enabled问题<br>具体提示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis.clients.jedis.exceptions.JedisDataException: DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions:</span><br><span class="line">1) Just disable protected mode sending the command &#x27;CONFIG SET protected-mode no&#x27; from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent.</span><br><span class="line">2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to &#x27;no&#x27;, and then restarting the server.</span><br><span class="line">3) If you started the server manually just for testing, restart it with the &#x27;--protected-mode no&#x27; option.</span><br><span class="line">4) Setup a bind address or an authentication password. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</span><br></pre></td></tr></table></figure><p>你可以根据你的实际情况做出处理。<br>我这里是临时测试，在启动时把protected-mode 设置为no</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># redis-server ./redis.conf --protected-mode no</span><br></pre></td></tr></table></figure><p>如果生产环境建议绑定一个地址或通过密码访问。</p><p>单机方式下上面的方式很容易解决。但集群方式存在一个很大的坑， one client（nginx+tomcat 集群） + one server（redis+sentinel集群）下。无论是关闭protected-mode 还是 bind address 和auth pass 都无效。</p><p>redis集群方式配置失败！！！！</p><p>参考：<br><a href="http://www.cnblogs.com/interdrp/p/4868740.html">redis + Tomcat 8 的session共享解决</a></p><p>分布式集群Session共享 简单多tomcat8+redis的session共享实现<br><a href="http://blog.csdn.net/jerome_s/article/details/52658946">http://blog.csdn.net/jerome_s/article/details/52658946</a><br><a href="http://blog.csdn.net/chszs/article/details/42610365">用Redis存储Tomcat集群的Session</a><br><a href="http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2">02.Redis主从集群的Sentinel配置</a><br><a href="http://debugo.com/redis-sentinel/?utm_source=tuicool&utm_medium=referral">Redis Sentinel配置小记</a><br><a href="http://www.cnblogs.com/LiZhiW/p/4851640.html">sentinel.conf配置详解</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;02-nginx-tomcat-redis实现集群环境的session共享。&quot;&gt;&lt;a href=&quot;#02-nginx-tomcat-redis实现集群环境的session共享。&quot; class=&quot;headerlink&quot; title=&quot;02.nginx+tomcat+redis实现集群环境的session共享。&quot;&gt;&lt;/a&gt;02.nginx+tomcat+redis实现集群环境的session共享。&lt;/h2&gt;&lt;p&gt;注：tomcat-redis-session-manager 仅对tomcat8.0.39以下版支持。8.5.9这个版本不支持，缺少LifecycleSupport 相关类。&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://groupfusion.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>01. Redis3.2.6 安装及分布式配置</title>
    <link href="https://groupfusion.github.io/2017/01/17/devlang/01.redis3.2.6_%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
    <id>https://groupfusion.github.io/2017/01/17/devlang/01.redis3.2.6_%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/</id>
    <published>2017-01-17T01:47:57.000Z</published>
    <updated>2023-12-15T12:41:36.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-Redis3-2-6-安装及分布式配置"><a href="#01-Redis3-2-6-安装及分布式配置" class="headerlink" title="01.Redis3.2.6 安装及分布式配置"></a>01.Redis3.2.6 安装及分布式配置</h2><p>参考<a href="http://blog.csdn.net/miyatang/article/details/47257209">redis3.0.3 安装与配置</a></p><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p>####1.1 mac 上安装redis</p><p>1）官网 <a href="https://redis.io/">https://redis.io/</a> 下载最新的稳定版本，我下的是3.2.6</p><p>2）sudo tar -zxf redis-3.2.6.zip 解压文件</p><p>3）进入解压后的目录 cd redis－3.2.6</p><ol start="4"><li>sudo make test 测试编译</li></ol><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  21 seconds - integration/convert-zipmap-hash-on-load</span><br><span class="line">  85 seconds - unit/dump</span><br><span class="line">  8 seconds - unit/limits</span><br><span class="line">  14 seconds - unit/introspection-2</span><br><span class="line">  78 seconds - integration/replication-2</span><br><span class="line">  93 seconds - unit/sort</span><br><span class="line">  14 seconds - unit/bitfield</span><br><span class="line">  100 seconds - unit/type/list-3</span><br><span class="line">  41 seconds - unit/maxmemory</span><br><span class="line">  43 seconds - unit/bitops</span><br><span class="line">  56 seconds - unit/scripting</span><br><span class="line">  128 seconds - unit/type/list-2</span><br><span class="line">  43 seconds - unit/memefficiency</span><br><span class="line">  135 seconds - integration/replication</span><br><span class="line">  79 seconds - unit/obuf-limits</span><br><span class="line">  148 seconds - integration/replication-3</span><br><span class="line">  75 seconds - unit/hyperloglog</span><br><span class="line">  162 seconds - integration/replication-4</span><br><span class="line">  104 seconds - unit/geo</span><br><span class="line">  182 seconds - integration/replication-psync</span><br><span class="line"></span><br><span class="line">\o/ All tests passed without errors!</span><br><span class="line"></span><br><span class="line">Cleanup: may take some time... OK</span><br></pre></td></tr></table></figure><p>5)、sudo make install</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">localhost:redis-3.2.6 xingzhe$ sudo make install</span><br><span class="line">Password:</span><br><span class="line">cd src &amp;&amp; /Applications/Xcode.app/Contents/Developer/usr/bin/make install</span><br><span class="line"></span><br><span class="line">Hint: It&#x27;s a good idea to run &#x27;make test&#x27; ;)</span><br><span class="line"></span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br><span class="line">    INSTALL install</span><br></pre></td></tr></table></figure><p>至此，你已成功安装redis！</p><p>####1.2 centos7 上安装redis</p><p>1)、安装前，升级系统<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><br>2)、官网下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-3.2.6.tar.gz</span><br></pre></td></tr></table></figure><p>3)、解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis-3.2.6.tar.gz redis-3.2.6</span><br></pre></td></tr></table></figure><p>4)、进入解压后的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd redis-3.2.6</span><br></pre></td></tr></table></figure><p>5)、运行runtest</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ./runtest</span><br><span class="line"> You need tcl 8.5 or newer in order to run the Redis test</span><br></pre></td></tr></table></figure><p>如果提示 需要安装tcl，执行6步，否则跳过。<br>6)、安装tcl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install tcl</span><br></pre></td></tr></table></figure><p>7)、编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># make</span><br><span class="line">cd src &amp;&amp; make all</span><br><span class="line">make[1]: 进入目录“/tdata/redis-3.2.6/src”</span><br><span class="line">rm -rf redis-server redis-sentinel redis-cli redis-benchmark redis-check-rdb redis-check-aof *.o *.gcda *.gcno *.gcov redis.info lcov-html</span><br><span class="line">(cd ../deps &amp;&amp; make distclean)</span><br><span class="line">make[2]: 进入目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(cd hiredis &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd linenoise &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd lua &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd geohash-int &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd jemalloc &amp;&amp; [ -f Makefile ] &amp;&amp; make distclean) &gt; /dev/null || true</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">make[2]: 离开目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">echo STD=-std=c99 -pedantic -DREDIS_STATIC=&#x27;&#x27; &gt;&gt; .make-settings</span><br><span class="line">echo WARN=-Wall -W &gt;&gt; .make-settings</span><br><span class="line">echo OPT=-O2 &gt;&gt; .make-settings</span><br><span class="line">echo MALLOC=jemalloc &gt;&gt; .make-settings</span><br><span class="line">echo CFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo LDFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo REDIS_CFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo REDIS_LDFLAGS= &gt;&gt; .make-settings</span><br><span class="line">echo PREV_FINAL_CFLAGS=-std=c99 -pedantic -DREDIS_STATIC=&#x27;&#x27; -Wall -W -O2 -g -ggdb   -I../deps/geohash-int -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include &gt;&gt; .make-settings</span><br><span class="line">echo PREV_FINAL_LDFLAGS=  -g -ggdb -rdynamic &gt;&gt; .make-settings</span><br><span class="line">(cd ../deps &amp;&amp; make hiredis linenoise lua geohash-int jemalloc)</span><br><span class="line">make[2]: 进入目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">(cd hiredis &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd linenoise &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd lua &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd geohash-int &amp;&amp; make clean) &gt; /dev/null || true</span><br><span class="line">(cd jemalloc &amp;&amp; [ -f Makefile ] &amp;&amp; make distclean) &gt; /dev/null || true</span><br><span class="line">(rm -f .make-*)</span><br><span class="line">(echo &quot;&quot; &gt; .make-cflags)</span><br><span class="line">(echo &quot;&quot; &gt; .make-ldflags)</span><br><span class="line">MAKE hiredis</span><br><span class="line">cd hiredis &amp;&amp; make static</span><br><span class="line">make[3]: 进入目录“/tdata/redis-3.2.6/deps/hiredis”</span><br><span class="line">gcc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  net.c</span><br><span class="line">make[3]: gcc：命令未找到</span><br><span class="line">make[3]: *** [net.o] 错误 127</span><br><span class="line">make[3]: 离开目录“/tdata/redis-3.2.6/deps/hiredis”</span><br><span class="line">make[2]: *** [hiredis] 错误 2</span><br><span class="line">make[2]: 离开目录“/tdata/redis-3.2.6/deps”</span><br><span class="line">make[1]: [persist-settings] 错误 2 (忽略)</span><br><span class="line">    CC adlist.o</span><br><span class="line">/bin/sh: cc: 未找到命令</span><br><span class="line">make[1]: *** [adlist.o] 错误 127</span><br><span class="line">make[1]: 离开目录“/tdata/redis-3.2.6/src”</span><br><span class="line">make: *** [all] 错误 2</span><br></pre></td></tr></table></figure><p>若出现上面错误，说明缺少编译环境，需要安装gcc。否则跳过8步。<br>如果出现如下错误,请看第9步，否则跳过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd src &amp;&amp; make all</span><br><span class="line">make[1]: 进入目录“/tdata/redis-3.2.6/src”</span><br><span class="line">    CC adlist.o</span><br><span class="line">In file included from adlist.c:34:0:</span><br><span class="line">zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录</span><br><span class="line"> #include &lt;jemalloc/jemalloc.h&gt;</span><br><span class="line">                               ^</span><br><span class="line">编译中断。</span><br><span class="line">make[1]: *** [adlist.o] 错误 1</span><br><span class="line">make[1]: 离开目录“/tdata/redis-3.2.6/src”</span><br><span class="line">make: *** [all] 错误 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8)、安装gcc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install gcc</span><br></pre></td></tr></table></figure><p>安装成功转到6步，执行make命令。<br>9)、zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录<br>在make 后面增加 MALLOC=libc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># make MALLOC=libc</span><br></pre></td></tr></table></figure><p>10)、安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># make install</span><br></pre></td></tr></table></figure><p>注：在编译时，出现“../deps/geohash-int/geohash.h:78:18: 附注：‘longitude’在此声明” 警告；还有一个变量未定义。不清楚是否会有影响。目前，安装后运行测试都正常。</p><p><a href="https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe">Redis Desktop Manager</a></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>1)、启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure><p> <a href="http://www.cnblogs.com/GoQC/p/5764201.html">Redis 安装 启动 连接 配置 重启</a></p><p>2)、测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt; set foo bar</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get foo</span><br><span class="line">&quot;bar&quot;</span><br></pre></td></tr></table></figure><p>恭喜你，已经成功安装！</p><h3 id="2、分布式配置"><a href="#2、分布式配置" class="headerlink" title="2、分布式配置"></a>2、分布式配置</h3><p>参考[1]:<a href="http://www.redis.cn/topics/cluster-tutorial.html">Redis Cluster搭建方法简介</a></p><p>参考[2]:<a href="http://blog.csdn.net/weiguolong0306/article/details/51586557"> Centos7 搭建Redis3.2.0版本集群环境</a></p><p>准备ruby环境,后续redis-trib.rb会用到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yum install ruby</span><br><span class="line"># yum install rubygems</span><br><span class="line"># gem install redis</span><br></pre></td></tr></table></figure><h4 id="搭建并使用Redis集群"><a href="#搭建并使用Redis集群" class="headerlink" title="搭建并使用Redis集群[]"></a>搭建并使用Redis集群[]</h4><p>1、准备redis.conf配置文件<br>redis.conf配置如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">port 7000</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>2、创建目录后分别启动<br>创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir cluster-test</span><br><span class="line">cd cluster-test</span><br><span class="line">mkdir 7000 7001 7002 7003 7004 7005</span><br></pre></td></tr></table></figure><p>在文件夹 7000 至 7005 中， 各创建一个 redis.conf 文件,文件中的端口与文件加相同。<br>启动,因文件夹加多启动比较繁琐。可用写个简单的脚本执行,注意一定是在文件夹内执行命令。<br>vi runcluster.sh 将下面内容cp进去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd 7000/</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7001</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7002</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7003</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7004</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br><span class="line">cd ../7005</span><br><span class="line">../redis-server ./redis.conf &amp;</span><br></pre></td></tr></table></figure><p>nohup redis-server ./redis.conf &gt; /cluster-test/log/redis-7000.log 2&gt;&amp;1 &amp;</p><p>chomd +X runcluster.sh //添加执行权限<br>然后,./runcluster.sh  运行。这样就全都启动了。</p><p>3、搭建集群<br>redis-trib 位于 Redis 源码的 src 文件夹中,你要把它cp到cluster-test目录下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-trib.rb create --replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005</span><br></pre></td></tr></table></figure><p>注意:在执行时会出现”All nodes agree about slots configuration”提示,不能直接回车,一定输入yes再回车。<br>当出现下面的说明配置完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">12400:S 12 Jan 14:45:21.671 * Background AOF rewrite finished successfully</span><br><span class="line">12397:M 12 Jan 14:45:22.055 # Cluster state changed: ok</span><br><span class="line">12398:M 12 Jan 14:45:22.155 # Cluster state changed: ok</span><br><span class="line">12399:M 12 Jan 14:45:22.189 # Cluster state changed: ok</span><br></pre></td></tr></table></figure><p>4、检验是否配置成功<br>./redis-trib.rb check :7000<br>你也可用通过客户端连接上测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -c -p 7000</span><br><span class="line">127.0.0.1:7000&gt; cluster nodes</span><br><span class="line">1577e1769a77367dd4a626b316f4191224f726c6 127.0.0.1:7005 slave 8da8517b0edd30f30104e091d782d40803c0723d 0 1484203764628 6 connected</span><br><span class="line">7436728328935447bccc1c1b54e6eab372b8c4e1 127.0.0.1:7000 myself,master - 0 0 1 connected 0-5460</span><br><span class="line">8da8517b0edd30f30104e091d782d40803c0723d 127.0.0.1:7002 master - 0 1484203766133 3 connected 10923-16383</span><br><span class="line">3a3e3c8407ee19f9f762c3a7496fc0d213ee452d 127.0.0.1:7001 master - 0 1484203765631 2 connected 5461-10922</span><br><span class="line">48302b26e73b33da61914a33d62865ba0e83f6cb 127.0.0.1:7003 slave 7436728328935447bccc1c1b54e6eab372b8c4e1 0 1484203764127 4 connected</span><br><span class="line">5b75f1ce4b70e3a780016d3a77daea7adde432ce 127.0.0.1:7004 slave 3a3e3c8407ee19f9f762c3a7496fc0d213ee452d 0 1484203765129 5 connected</span><br><span class="line">127.0.0.1:7000&gt; cluster info</span><br><span class="line">cluster_state:ok</span><br><span class="line">cluster_slots_assigned:16384</span><br><span class="line">cluster_slots_ok:16384</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6</span><br><span class="line">cluster_size:3</span><br><span class="line">cluster_current_epoch:6</span><br><span class="line">cluster_my_epoch:1</span><br><span class="line">cluster_stats_messages_sent:1169</span><br><span class="line">cluster_stats_messages_received:1169</span><br><span class="line">127.0.0.1:7000&gt; set name hello</span><br><span class="line">-&gt; Redirected to slot [5798] located at 127.0.0.1:7001</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">redis-cli -c -p 7003</span><br><span class="line">127.0.0.1:7003&gt; get name</span><br><span class="line">-&gt; Redirected to slot [5798] located at 127.0.0.1:7001</span><br><span class="line">&quot;hello&quot;</span><br></pre></td></tr></table></figure><p>5、 <a href="http://blog.csdn.net/daiyudong2020/article/details/51674169">redis集群设置密码</a><br>注意事项：<br>1.如果是使用redis-trib.rb工具构建集群，集群构建完成前不要配置密码，集群构建完毕再通过config set + config rewrite命令逐个机器设置密码<br>2.如果对集群设置密码，那么requirepass和masterauth都需要设置，否则发生主从切换时，就会遇到授权问题，可以模拟并观察日志<br>3.各个节点的密码都必须一致，否则Redirected就会失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config set masterauth abc</span><br><span class="line">config set requirepass abc</span><br><span class="line">config rewrite</span><br></pre></td></tr></table></figure><p>config set masterauth “simonzhang”<br>config set requirepass “simonzhang”<br>config rewrite</p><p>密码方式访问：</p><p>redis-cli -p 7000 -a abc   //abc is password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#客户端关闭</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6380 shutdown</span><br><span class="line">#启动</span><br><span class="line">redis-server redis6379.conf &amp;</span><br><span class="line">redis-server redis6380.conf &amp;</span><br></pre></td></tr></table></figure><p>??? 主从切换<br><a href="http://www.2cto.com/database/201502/377061.html"></a></p><h3 id="3、搭建前哨sentinel"><a href="#3、搭建前哨sentinel" class="headerlink" title="3、搭建前哨sentinel"></a>3、搭建前哨sentinel</h3><p>配置<br>redis-sentinel ./sentinel001.conf &amp;<br>redis-sentinel ./sentinel002.conf &amp;<br>redis-sentinel ./sentinel003.conf &amp;</p><p>注：sentinel.conf中要指定redis服务器的网络ip地址.不能为本机地址（127.0.0.1/localhost）。这是在单机部署时一定要注意的。</p><p>在有sentinel的集群环境中报：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions:</span><br><span class="line">1) Just disable protected mode sending the command &#x27;CONFIG SET protected-mode no&#x27; from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent.</span><br><span class="line">2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to &#x27;no&#x27;, and then restarting the server.</span><br><span class="line">3) If you started the server manually just for testing, restart it with the &#x27;--protected-mode no&#x27; option.</span><br><span class="line">4) Setup a bind address or an authentication password.</span><br><span class="line"> NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</span><br></pre></td></tr></table></figure><h3 id="4、主从配置"><a href="#4、主从配置" class="headerlink" title="4、主从配置"></a>4、主从配置</h3><p>master 部署在192.168.0.99上，配置文件为redis.conf;slave部署在192.168.0.100上，从master上复制一份配置文件命名为redis-slave.conf,如果你是单机部署需要修改ip和端口号。<br>再在redis-slav.conf配置文件中增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slaveof 192.168.0.99 6379</span><br></pre></td></tr></table></figure><h3 id="5、配置文件"><a href="#5、配置文件" class="headerlink" title="5、配置文件"></a>5、配置文件</h3><p><a href="http://blog.csdn.net/u012173245/article/details/52041882">http://blog.csdn.net/u012173245/article/details/52041882</a><br><a href="http://yijiebuyi.com/blog/bc2b3d3e010bf87ba55267f95ab3aa71.html">http://yijiebuyi.com/blog/bc2b3d3e010bf87ba55267f95ab3aa71.html</a><br><a href="https://raw.githubusercontent.com/antirez/redis/3.0/redis.conf">https://raw.githubusercontent.com/antirez/redis/3.0/redis.conf</a></p><h3 id="6、参考资料"><a href="#6、参考资料" class="headerlink" title="6、参考资料"></a>6、参考资料</h3><p><a href="http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2">http://www.cnblogs.com/LiZhiW/p/4851631.html#_label2</a><br><a href="http://blog.csdn.net/donggang1992/article/details/50981341">http://blog.csdn.net/donggang1992/article/details/50981341</a><br><a href="http://blog.csdn.net/zyz511919766/article/details/42268219">http://blog.csdn.net/zyz511919766/article/details/42268219</a><br><a href="http://www.cnblogs.com/stupidMartian/p/5904030.html">http://www.cnblogs.com/stupidMartian/p/5904030.html</a></p><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#修改为守护模式</span><br><span class="line">daemonize yes</span><br><span class="line">#设置进程锁文件</span><br><span class="line">pidfile /usr/local/redis/redis.pid</span><br><span class="line">#端口</span><br><span class="line">port 6379</span><br><span class="line">#客户端超时时间</span><br><span class="line">timeout 300</span><br><span class="line">#日志级别</span><br><span class="line">loglevel debug</span><br><span class="line">#日志文件位置</span><br><span class="line">logfile /usr/local/redis/log-redis.log</span><br><span class="line">#设置数据库的数量，默认数据库为0，可以使用SELECT &lt;dbid&gt;命令在连接上指定数据库id</span><br><span class="line">databases 8</span><br><span class="line">##指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</span><br><span class="line">#save &lt;seconds&gt; &lt;changes&gt;</span><br><span class="line">#Redis默认配置文件中提供了三个条件：</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">#指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，</span><br><span class="line">#可以关闭该#选项，但会导致数据库文件变的巨大</span><br><span class="line">rdbcompression yes</span><br><span class="line">#指定本地数据库文件名</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">#指定本地数据库路径</span><br><span class="line">dir /usr/local/redis/db/</span><br><span class="line">#指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能</span><br><span class="line">#会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有</span><br><span class="line">#的数据会在一段时间内只存在于内存中</span><br><span class="line">appendonly no</span><br><span class="line">#指定更新日志条件，共有3个可选值：</span><br><span class="line">#no：表示等操作系统进行数据缓存同步到磁盘（快）</span><br><span class="line">#always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）</span><br><span class="line">#everysec：表示每秒同步一次（折衷，默认值）</span><br><span class="line">appendfsync everysec</span><br></pre></td></tr></table></figure><h3 id="6、文档"><a href="#6、文档" class="headerlink" title="6、文档"></a>6、文档</h3><ul><li><a href="http://doc.redisfans.com/#">Redis 命令参考</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;01-Redis3-2-6-安装及分布式配置&quot;&gt;&lt;a href=&quot;#01-Redis3-2-6-安装及分布式配置&quot; class=&quot;headerlink&quot; title=&quot;01.Redis3.2.6 安装及分布式配置&quot;&gt;&lt;/a&gt;01.Redis3.2.6 安装及分布式配置&lt;/h2&gt;&lt;p&gt;参考&lt;a href=&quot;http://blog.csdn.net/miyatang/article/details/47257209&quot;&gt;redis3.0.3 安装与配置&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1、安装&quot;&gt;&lt;a href=&quot;#1、安装&quot; class=&quot;headerlink&quot; title=&quot;1、安装&quot;&gt;&lt;/a&gt;1、安装&lt;/h3&gt;&lt;p&gt;####1.1 mac 上安装redis&lt;/p&gt;
&lt;p&gt;1）官网 &lt;a href=&quot;https://redis.io/&quot;&gt;https://redis.io/&lt;/a&gt; 下载最新的稳定版本，我下的是3.2.6&lt;/p&gt;
&lt;p&gt;2）sudo tar -zxf redis-3.2.6.zip 解压文件&lt;/p&gt;
&lt;p&gt;3）进入解压后的目录 cd redis－3.2.6&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;sudo make test 测试编译&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://groupfusion.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
</feed>
